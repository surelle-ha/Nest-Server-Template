var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/BasicAuthController.html",[0,1.685,1,2.643]],["body/controllers/BasicAuthController.html",[0,2.009,1,4.058,2,2.009,3,0.21,4,0.186,5,0.162,6,3.851,7,3.865,8,3.456,9,3.15,10,0.508,11,1.403,12,2.892,13,4.978,14,6.018,15,3.865,16,4.373,17,2.73,18,0.018,19,4.487,20,1.166,21,4.487,22,1.431,23,1.367,24,0.605,25,0.994,26,4.058,27,1.403,28,2.887,29,4.487,30,4.487,31,0.698,32,3.865,33,3.456,34,3.456,35,0.746,36,3.482,37,4.451,38,3.865,39,3.865,40,3.15,41,4.487,42,4.488,43,0.905,44,2.377,45,3.456,46,4.487,47,0.21,48,0.162,49,1.908,50,1.908,51,4.487,52,4.487,53,4.487,54,1.468,55,4.487,56,4.487,57,4.487,58,3.456,59,4.487,60,0.013,61,0.013]],["title/injectables/BasicAuthGuard.html",[40,2.643,62,0.873]],["body/injectables/BasicAuthGuard.html",[3,0.262,4,0.232,5,0.203,6,3.379,9,4.657,18,0.017,31,0.663,35,0.932,40,4.657,47,0.262,48,0.203,60,0.015,61,0.015,62,1.538,63,2.385,64,4.831,65,3.996,66,6.633,67,5.608,68,3.938]],["title/modules/BasicAuthModule.html",[69,0.796,70,1.88]],["body/modules/BasicAuthModule.html",[1,4.368,2,2.494,3,0.198,4,0.176,5,0.153,6,2.555,18,0.018,31,0.743,35,0.705,36,4.243,37,4.792,38,3.653,47,0.198,48,0.153,60,0.013,61,0.013,68,2.977,69,1.316,70,3.715,71,1.484,72,1.715,73,1.899,74,1.899,75,1.715,76,2.515,77,1.715,78,3.653,79,3.653,80,4.562,81,3.97,82,2.494,83,1.899,84,1.803,85,4.24,86,4.24,87,3.266,88,5.57,89,5.359,90,4.029,91,2.747,92,4.24,93,2.977,94,2.39,95,2.003,96,3.266,97,4.24,98,4.24,99,2.783,100,4.24,101,2.555,102,2.747,103,2.977,104,4.24,105,4.24,106,3.653,107,4.24,108,4.24,109,4.24,110,3.653]],["title/injectables/BasicAuthService.html",[36,2.267,62,0.873]],["body/injectables/BasicAuthService.html",[3,0.177,4,0.157,5,0.137,6,3.807,10,0.43,11,1.256,12,2.759,13,4.458,15,4.458,16,4.094,18,0.018,20,1.188,22,1.877,23,1.793,24,0.793,25,1.304,26,2.667,27,1.256,31,0.682,35,0.631,36,3.117,39,3.272,47,0.177,48,0.137,50,2.2,54,1.315,60,0.012,61,0.012,62,1.2,63,1.615,87,2.925,94,2.141,95,3.299,96,2.925,111,3.272,112,5.174,113,2.092,114,3.272,115,6.982,116,3.798,117,4.458,118,3.798,119,2.433,120,5.174,121,1.443,122,2.111,123,3.798,124,3.546,125,3.798,126,3.986,127,3.272,128,3.272,129,2.092,130,2.141,131,2.279,132,2.94,133,3.798,134,3.633,135,1.992,136,5.174,137,4.458,138,5.174,139,3.798,140,3.798,141,3.798,142,3.272,143,3.272,144,3.798,145,3.798,146,3.798,147,5.174,148,3.798,149,3.117,150,3.272,151,3.272,152,1.794]],["title/injectables/BasicAuthStrategy.html",[62,0.873,80,2.438]],["body/injectables/BasicAuthStrategy.html",[3,0.217,4,0.192,5,0.168,6,3.912,9,4.144,10,0.526,11,1.433,12,2.625,18,0.018,20,1.191,22,1.883,23,1.798,24,0.795,25,1.308,27,1.126,28,2.317,31,0.683,35,0.771,37,4.547,47,0.217,48,0.168,54,1.178,60,0.013,61,0.013,62,1.369,63,1.972,65,3.556,68,3.256,80,3.823,90,4.571,91,3.004,106,3.995,113,1.875,124,2.794,143,3.995,153,3.995,154,5.902,155,5.902,156,5.085,157,4.637,158,5.902,159,4.637,160,4.637,161,4.637,162,4.637,163,3.995,164,3.995,165,1.785,166,4.637,167,4.637,168,4.637,169,2.077,170,4.637,171,4.637,172,3.256,173,4.637,174,4.637]],["title/interfaces/BootstrapFunctionArgs.html",[175,1.047,176,2.643]],["body/interfaces/BootstrapFunctionArgs.html",[3,0.231,4,0.204,5,0.179,10,0.559,18,0.018,24,0.942,25,1.359,31,0.698,35,0.82,43,0.996,47,0.231,60,0.014,61,0.014,103,4.907,175,1.373,176,4.309,177,2.21,178,4.251,179,4.251,180,1.49,181,6.021,182,3.979,183,5.384,184,6.989,185,4.211,186,4.211,187,4.251,188,4.251,189,2.781,190,4.251,191,4.934]],["title/modules/BootstrapModule.html",[69,0.796,192,2.643]],["body/modules/BootstrapModule.html",[3,0.214,4,0.189,5,0.165,18,0.018,31,0.718,35,0.76,47,0.214,48,0.165,60,0.013,61,0.013,69,1.364,70,3.591,71,1.6,72,1.849,73,2.047,74,2.047,75,1.849,76,1.849,77,1.849,82,2.619,83,2.047,84,1.944,99,2.922,131,1.527,192,5.4,193,3.938,194,3.938,195,3.807,196,3.807,197,3.807,198,3.591,199,3.521,200,4.572,201,4.572,202,4.572,203,4.572,204,4.572,205,4.572,206,3.524]],["title/interfaces/CacheDriver.html",[175,1.047,207,1.449]],["body/interfaces/CacheDriver.html",[3,0.163,4,0.145,5,0.177,10,0.396,11,1.186,18,0.018,20,1.295,22,2.257,23,1.956,24,0.976,25,1.422,27,1.558,43,1.342,47,0.325,60,0.011,61,0.011,119,2.76,121,1.599,122,1.167,175,1.85,177,1.565,207,1.881,208,2.221,209,1.852,210,2.944,211,2.944,212,2.944,213,2.944,214,2.188,215,3.495,216,2.984,217,2.188,218,3.495,219,3.057,220,2.944,221,3.431,222,2.188,223,3.495,224,2.188,225,3.495,226,2.188,227,1.945,228,2.466,229,3.495,230,2.078,231,1.486,232,1.413,233,2.221,234,2.729,235,2.078,236,1.167,237,2.078,238,1.223,239,2.106,240,2.106,241,2.106,242,1.486,243,2.078,244,1.651,245,1.486,246,1.565,247,1.746,248,2.882,249,1.486,250,3.231,251,1.651,252,1.97]],["title/modules/CoreModule.html",[69,0.796,195,1.994]],["body/modules/CoreModule.html",[3,0.228,4,0.202,5,0.177,18,0.018,31,0.609,35,0.812,47,0.228,48,0.177,60,0.014,61,0.014,69,1.406,70,3.479,71,1.709,72,1.975,73,2.187,74,2.187,75,1.975,76,1.975,77,1.975,82,2.731,83,2.187,84,2.077,99,3.047,131,1.631,195,4.129,196,3.689,197,3.689,198,3.479,206,3.674,253,4.884,254,4.884,255,3.762,256,3.674,257,4.884]],["title/classes/CreateUserDto.html",[48,0.136,258,2.267]],["body/classes/CreateUserDto.html",[3,0.186,4,0.165,5,0.144,10,0.451,17,3.473,18,0.018,20,1.483,24,0.99,25,1.183,31,0.398,47,0.186,48,0.193,60,0.012,61,0.012,121,1.623,122,2.013,124,3.631,180,1.296,258,3.217,259,1.781,260,6.388,261,3.064,262,5.192,263,5.192,264,5.192,265,5.192,266,5.192,267,5.192,268,5.192,269,5.192,270,6.508,271,3.978,272,3.978,273,3.978,274,3.749,275,6.026,276,3.978,277,3.978,278,3.978,279,5.192,280,3.978,281,3.978,282,5.339,283,4.6,284,3.978,285,3.978,286,3.978,287,3.978,288,5.339,289,3.064]],["title/classes/DatabaseDriver.html",[48,0.136,290,2.121]],["body/classes/DatabaseDriver.html",[3,0.065,4,0.058,5,0.05,10,0.158,11,0.576,12,2.851,18,0.018,20,0.968,22,1.744,23,1.369,24,0.759,25,0.995,27,1.001,28,1.835,31,0.449,43,1.021,47,0.172,48,0.133,49,1.562,54,1.716,60,0.005,61,0.005,113,0.562,119,2.65,121,1.428,122,0.464,129,2.339,130,1.751,131,2.431,132,3.492,135,1.414,149,3.047,165,0.914,169,0.623,180,0.576,207,1.73,208,1.689,210,1.43,211,1.43,212,1.43,213,1.43,214,1.847,216,2.986,217,1.847,219,2.926,220,2.485,221,0.976,222,1.847,224,1.847,226,1.847,227,1.798,228,1.941,230,1.009,231,0.591,232,0.562,233,1.798,234,2.15,235,1.009,236,0.793,237,1.562,238,0.487,243,1.009,244,0.657,245,0.591,246,2.265,249,1.321,259,0.623,290,1.338,291,0.901,292,2.185,293,0.976,294,2.374,295,2.485,296,2.975,297,1.39,298,1.39,299,1.122,300,1.39,301,1.39,302,2.579,303,1.39,304,0.784,305,0.976,306,0.976,307,0.838,308,0.976,309,1.43,310,0.901,311,0.784,312,0.784,313,0.976,314,0.976,315,0.976,316,0.976,317,3.706,318,2.579,319,2.181,320,0.976,321,3.276,322,2.485,323,0.976,324,2.485,325,3.706,326,0.976,327,2.181,328,1.667,329,1.667,330,0.976,331,0.976,332,3.419,333,2.181,334,2.91,335,1.667,336,0.976,337,0.976,338,0.976,339,0.976,340,0.976,341,0.976,342,1.667,343,0.976,344,0.976,345,2.896,346,0.976,347,2.579,348,0.976,349,0.976,350,2.579,351,2.896,352,2.181,353,1.667,354,0.976,355,0.784,356,0.976,357,0.976,358,0.976,359,0.976,360,0.976,361,0.976,362,0.976,363,1.538,364,0.976,365,1.43,366,0.976,367,0.976,368,0.976,369,0.976,370,3.551,371,2.896,372,2.896,373,2.896,374,3.155,375,3.706,376,2.213,377,2.579,378,2.181,379,2.012,380,1.667,381,1.667,382,2.181,383,2.579,384,0.976,385,1.667,386,2.896,387,3.155,388,2.181,389,0.976,390,0.976,391,0.976,392,0.976,393,0.976,394,0.976,395,0.976,396,0.976,397,0.976,398,0.901,399,0.976,400,0.695,401,0.976,402,1.667,403,1.667,404,0.976,405,0.976,406,1.667,407,1.667,408,0.976,409,0.976,410,1.667,411,0.976,412,1.667,413,0.976,414,0.784,415,0.901,416,2.181,417,0.976,418,0.976,419,2.579,420,1.667,421,0.976,422,1.667,423,0.976,424,0.976,425,0.976,426,0.976]],["title/interfaces/DatabaseOptions.html",[175,1.047,237,1.6]],["body/interfaces/DatabaseOptions.html",[3,0.196,4,0.173,5,0.2,10,0.474,18,0.018,24,0.886,25,1.456,43,0.845,47,0.339,60,0.013,61,0.013,119,2.63,121,1.536,122,1.398,175,1.952,177,1.874,180,1.341,207,1.611,208,1.398,209,2.217,214,1.874,217,1.874,219,1.874,222,1.874,224,1.874,226,1.874,227,1.761,228,2.233,230,2.348,231,1.78,232,1.692,233,2.366,234,3.088,235,2.348,236,1.398,237,2.628,238,2.3,239,2.521,240,2.521,241,3.96,242,2.628,243,2.348,244,1.977,245,1.78,246,1.874,247,2.091,248,3.105,249,1.78,250,3.482,251,1.977,252,2.359]],["title/guards/DevelopmentGuard.html",[427,2.899,428,2.438]],["body/guards/DevelopmentGuard.html",[3,0.24,4,0.213,5,0.186,10,0.583,11,1.529,18,0.018,20,1.038,22,1.641,23,1.567,24,0.693,25,1.14,27,1.249,31,0.514,35,0.855,47,0.24,48,0.186,54,1.307,60,0.014,61,0.014,62,1.461,134,3.612,135,1.981,152,2.431,242,2.678,292,2.725,428,4.079,429,5.144,430,4.432,431,7.092,432,6.297,433,5.463,434,5.144,435,5.144,436,5.144,437,4.432,438,5.144,439,4.432,440,5.144,441,3.963,442,5.144]],["title/interfaces/ExtraSetOptions.html",[175,1.047,228,1.522]],["body/interfaces/ExtraSetOptions.html",[3,0.201,4,0.178,5,0.203,10,0.487,18,0.018,24,0.844,25,1.245,43,0.867,47,0.341,60,0.013,61,0.013,119,2.653,121,1.545,122,1.435,175,1.967,177,1.924,180,1.364,207,1.654,208,1.435,209,2.276,214,1.924,217,1.924,219,1.924,222,1.924,224,1.924,226,1.924,227,1.792,228,2.532,230,2.389,231,1.827,232,1.737,233,2.377,234,3.106,235,2.389,236,1.435,237,2.389,238,1.504,239,2.589,240,2.589,241,2.589,242,1.827,243,2.389,244,2.03,245,1.827,246,1.924,247,2.147,248,3.137,249,1.827,250,3.518,251,2.03,252,2.422]],["title/classes/FileDriver.html",[48,0.136,355,2.121]],["body/classes/FileDriver.html",[3,0.063,4,0.056,5,0.049,10,0.152,11,0.56,12,2.879,18,0.018,20,1.089,22,1.776,23,1.438,24,0.788,25,1.153,27,1.146,28,1.795,31,0.441,43,1.123,47,0.168,48,0.13,49,1.528,54,1.705,60,0.005,61,0.005,113,0.544,119,2.662,121,1.429,122,0.449,129,2.564,130,1.708,131,2.421,132,3.472,135,1.383,149,3.001,165,0.888,169,0.602,180,0.56,207,1.699,208,1.859,210,1.39,211,1.39,212,1.39,213,1.39,214,1.811,216,2.949,217,1.811,219,2.903,220,2.436,221,0.944,222,1.811,224,1.811,226,1.811,227,1.776,228,1.635,230,0.981,231,0.572,232,0.544,233,1.866,234,2.295,235,1.528,236,0.771,237,0.981,238,0.471,243,0.981,244,0.635,245,0.572,246,2.23,249,1.288,259,0.602,290,0.758,291,0.871,292,2.142,293,0.944,295,2.436,296,2.808,299,1.09,302,1.62,304,0.758,305,0.944,306,0.944,307,0.81,308,0.944,309,1.39,310,0.871,311,0.758,312,0.758,313,0.944,314,0.944,315,0.944,316,0.944,317,3.654,318,2.523,319,2.128,320,0.944,321,3.226,322,2.436,323,0.944,324,2.436,325,3.654,326,0.944,327,2.128,328,1.62,329,1.62,330,0.944,331,0.944,332,3.371,333,2.128,334,2.858,335,1.62,336,0.944,337,0.944,338,0.944,339,0.944,340,0.944,341,0.944,342,1.62,343,0.944,344,0.944,345,3.314,346,0.944,347,2.523,348,0.944,349,0.944,350,2.523,351,2.839,352,2.128,353,1.62,354,0.944,355,1.3,356,2.128,357,0.944,358,0.944,359,0.944,360,2.523,361,0.944,362,0.944,363,1.494,364,0.944,365,1.39,366,1.62,367,0.944,368,0.944,369,0.944,370,3.654,371,2.839,372,2.839,373,2.839,374,3.098,375,3.654,376,2.165,377,2.523,378,2.128,379,1.963,380,1.62,381,1.62,382,2.128,383,2.523,384,0.944,385,1.62,386,2.839,387,3.098,388,2.128,389,0.944,390,0.944,391,0.944,392,0.944,393,0.944,394,0.944,395,0.944,396,0.944,397,0.944,398,0.871,399,0.944,400,0.672,401,0.944,402,1.62,403,1.62,404,0.944,405,0.944,406,1.62,407,1.62,408,0.944,409,0.944,410,1.62,411,0.944,412,1.62,413,0.944,414,0.758,415,0.871,416,2.128,417,0.944,418,0.944,419,2.523,420,1.62,421,0.944,422,1.62,423,0.944,424,0.944,425,0.944,426,0.944,443,2.307,444,2.307,445,1.345,446,1.345,447,1.345,448,1.345,449,1.345,450,1.345,451,1.345,452,1.345]],["title/interfaces/FileOptions.html",[175,1.047,235,1.6]],["body/interfaces/FileOptions.html",[3,0.198,4,0.175,5,0.201,10,0.479,18,0.018,24,0.889,25,1.232,43,0.854,47,0.34,60,0.013,61,0.013,119,2.64,121,1.572,122,1.413,175,1.958,177,1.895,180,1.35,207,1.629,208,1.413,209,2.241,214,1.895,217,1.895,219,1.895,222,1.895,224,1.895,226,1.895,227,1.774,228,2.249,230,2.365,231,1.799,232,1.711,233,2.371,234,3.096,235,2.642,236,2.205,237,2.365,238,1.481,239,2.549,240,2.549,241,2.549,242,1.799,243,2.365,244,1.999,245,1.799,246,1.895,247,2.114,248,3.119,249,1.799,250,3.497,251,1.999,252,2.385]],["title/interfaces/HeaderSettingsOptions.html",[175,1.047,453,2.438]],["body/interfaces/HeaderSettingsOptions.html",[3,0.231,4,0.204,5,0.179,10,0.559,18,0.018,24,0.9,47,0.287,60,0.014,61,0.014,121,1.65,175,1.707,177,2.21,180,1.49,233,1.574,236,1.648,242,2.84,312,2.781,453,3.975,454,3.801,455,3.801,456,5.384,457,5.384,458,5.384,459,3.196,460,3.801,461,3.801,462,3.801,463,3.801,464,3.801,465,3.464,466,3.801,467,3.697,468,3.801,469,4.727]],["title/controllers/HealthController.html",[0,1.685,470,2.643]],["body/controllers/HealthController.html",[0,2.316,2,2.316,3,0.242,4,0.214,5,0.187,10,0.586,11,1.534,12,2.758,17,2.444,18,0.018,20,1.044,27,1.256,28,2.584,31,0.682,34,3.984,35,0.86,47,0.242,48,0.187,49,2.199,50,2.199,54,1.314,60,0.014,61,0.014,428,3.35,470,4.436,471,4.456,472,5.473,473,5.172,474,5.172,475,4.11,476,4.456,477,4.456,478,5.172,479,5.172,480,4.456,481,5.172]],["title/modules/HealthModule.html",[69,0.796,482,2.267]],["body/modules/HealthModule.html",[2,2.825,3,0.241,4,0.214,5,0.187,18,0.018,31,0.681,35,0.857,47,0.241,48,0.187,60,0.014,61,0.014,69,1.441,71,1.805,72,2.086,73,2.31,74,2.31,75,2.086,76,2.755,77,2.086,82,2.825,83,2.31,84,2.193,470,4.784,475,4.463,476,4.444,482,4.463,483,4.444,484,4.444,485,5.158,486,4.429,487,5.158]],["title/injectables/HealthService.html",[62,0.873,475,2.267]],["body/injectables/HealthService.html",[3,0.249,4,0.221,5,0.193,10,0.604,11,1.562,18,0.018,20,1.298,27,1.294,31,0.533,35,0.886,47,0.249,48,0.193,54,1.354,58,4.956,60,0.015,61,0.015,62,1.492,63,2.266,113,2.795,121,1.127,472,5.529,475,3.876,488,4.591,489,5.329,490,5.329,491,3.211,492,4.591]],["title/modules/InfraModule.html",[69,0.796,196,1.994]],["body/modules/InfraModule.html",[3,0.181,4,0.16,5,0.19,18,0.018,31,0.723,35,0.644,44,2.052,47,0.181,48,0.14,60,0.012,61,0.012,69,1.257,70,3.183,71,1.356,72,1.567,73,1.735,74,1.735,75,1.567,76,1.567,77,1.567,82,2.349,83,1.735,84,1.647,90,2.51,93,2.72,94,2.184,95,2.478,96,2.984,99,2.971,101,2.334,102,2.51,122,1.294,131,1.294,152,1.83,165,2.563,169,2.663,189,2.956,195,3.375,196,4.024,197,3.375,198,3.183,206,3.16,208,1.294,231,1.647,232,1.567,234,1.647,236,1.294,248,1.83,250,2.052,251,1.83,486,3.683,493,3.874,494,3.874,495,2.984,496,3.582,497,3.874,498,3.352,499,3.338,500,3.16,501,2.51,502,3.874,503,3.16,504,3.874,505,2.72,506,3.874,507,2.72,508,3.874,509,3.338,510,3.338,511,3.338,512,3.338,513,3.338,514,3.338,515,3.338,516,3.338,517,3.338,518,3.338,519,3.338,520,3.338,521,3.338,522,3.338,523,3.338,524,3.338,525,3.338,526,3.338,527,3.338,528,3.338,529,3.338,530,3.338]],["title/classes/LoginDto.html",[16,2.438,48,0.136]],["body/classes/LoginDto.html",[3,0.249,4,0.221,5,0.193,10,0.604,16,4.168,17,3.04,18,0.017,20,1.298,24,0.867,31,0.533,47,0.249,48,0.233,60,0.015,61,0.015,121,1.518,122,2.308,124,4.164,180,1.562,259,2.387,270,5.954,279,5.954,289,4.105,531,4.591,532,5.329,533,5.329]],["title/classes/MemoryDriver.html",[48,0.136,414,2.121]],["body/classes/MemoryDriver.html",[3,0.064,4,0.057,5,0.049,10,0.155,11,0.568,12,2.843,18,0.018,20,1.057,22,1.732,23,1.356,24,0.774,25,0.986,27,0.991,28,1.814,31,0.445,43,1.096,47,0.17,48,0.131,49,1.544,54,1.71,60,0.005,61,0.005,113,0.552,119,2.641,121,1.423,122,0.456,129,2.507,130,1.728,131,2.425,132,3.481,135,1.571,149,3.022,165,0.9,169,0.612,180,0.568,207,1.713,208,1.814,210,1.408,211,1.408,212,1.408,213,1.408,214,1.828,216,2.966,217,1.828,219,2.914,220,2.459,222,1.828,224,1.828,226,1.828,227,1.833,228,2.118,230,0.994,231,0.581,232,0.552,233,1.833,234,2.133,235,0.994,236,0.781,237,0.994,238,0.478,243,1.544,244,1.448,245,0.581,246,2.246,249,1.303,259,0.612,290,0.77,291,0.885,292,2.162,293,0.959,295,2.459,296,3.061,299,1.448,302,1.642,304,0.77,305,0.959,306,0.959,307,0.823,308,0.959,309,1.408,310,0.885,311,0.77,312,0.77,313,0.959,314,0.959,315,0.959,316,0.959,317,3.678,318,2.549,319,2.152,320,0.959,321,3.249,322,2.459,323,0.959,324,2.459,325,3.678,326,0.959,327,2.152,328,1.642,329,1.642,330,0.959,331,0.959,332,3.393,333,2.152,334,2.882,335,1.642,336,0.959,337,0.959,338,0.959,339,0.959,340,0.959,341,0.959,342,1.642,343,0.959,344,0.959,345,2.866,346,0.959,347,2.549,348,0.959,349,0.959,350,2.549,351,2.866,352,2.152,353,1.642,354,0.959,355,0.77,356,0.959,357,0.959,358,0.959,359,0.959,360,0.959,361,0.959,362,0.959,363,1.514,364,0.959,365,1.408,366,0.959,367,0.959,368,0.959,369,0.959,370,3.814,371,2.866,372,2.866,373,2.866,374,3.125,375,3.678,376,2.187,377,2.549,378,2.152,379,1.986,380,1.642,381,1.642,382,2.152,383,2.549,384,0.959,385,1.642,386,2.866,387,3.125,388,2.152,389,0.959,390,0.959,391,0.959,392,0.959,393,0.959,394,0.959,395,0.959,396,0.959,397,0.959,398,0.885,399,0.959,400,0.682,401,0.959,402,1.642,403,1.642,404,0.959,405,0.959,406,1.642,407,1.642,408,0.959,409,0.959,410,1.642,411,0.959,412,1.642,413,0.959,414,1.318,415,1.514,416,2.152,417,0.959,418,0.959,419,2.549,420,1.642,421,0.959,422,1.642,423,0.959,424,0.959,425,0.959,426,0.959,534,2.338,535,1.366,536,1.366,537,1.366,538,1.366,539,1.366,540,1.366,541,1.366]],["title/interfaces/MemoryOptions.html",[175,1.047,243,1.6]],["body/interfaces/MemoryOptions.html",[3,0.197,4,0.174,5,0.201,10,0.477,18,0.018,24,0.888,25,1.46,43,0.85,47,0.34,60,0.013,61,0.013,119,2.636,121,1.538,122,1.407,175,1.956,177,1.886,180,1.347,207,1.622,208,1.407,209,2.232,214,1.886,217,1.886,219,1.886,222,1.886,224,1.886,226,1.886,227,1.769,228,2.243,230,2.358,231,1.791,232,1.703,233,2.403,234,3.093,235,2.358,236,1.407,237,2.358,238,1.474,239,2.538,240,2.538,241,2.538,242,1.791,243,2.637,244,3.113,245,1.791,246,1.886,247,2.105,248,3.113,249,1.791,250,3.491,251,1.99,252,2.374]],["title/modules/PluginModule.html",[69,0.796,197,1.994]],["body/modules/PluginModule.html",[3,0.228,4,0.202,5,0.177,18,0.018,31,0.609,35,0.812,47,0.228,48,0.177,60,0.014,61,0.014,69,1.406,70,3.479,71,1.709,72,1.975,73,2.187,74,2.187,75,1.975,76,1.975,77,1.975,82,2.731,83,2.187,84,2.077,99,3.047,131,1.631,195,3.689,196,3.689,197,4.129,198,3.479,206,3.674,482,3.674,542,4.884,543,4.884,544,3.762,545,4.884]],["title/classes/RedisDriver.html",[48,0.136,311,2.121]],["body/classes/RedisDriver.html",[3,0.064,4,0.057,5,0.05,10,0.156,11,0.573,12,2.847,18,0.018,20,1.017,22,1.74,23,1.364,24,0.777,25,1.117,27,0.997,28,1.826,31,0.447,43,1.062,47,0.171,48,0.132,49,1.555,54,1.714,60,0.005,61,0.005,113,0.558,119,2.646,121,1.426,122,0.461,129,2.433,130,1.742,131,2.429,132,3.487,135,1.407,149,3.037,165,0.908,169,0.618,180,0.573,207,1.723,208,1.758,210,1.421,211,1.421,212,1.421,213,1.421,214,1.839,216,2.978,217,1.839,219,2.922,220,2.475,222,1.839,224,1.839,226,1.839,227,1.793,228,1.934,230,1.555,231,0.587,232,0.558,233,1.793,234,2.143,235,1.003,236,0.788,237,1.003,238,0.483,243,1.003,244,0.652,245,0.587,246,2.257,249,1.555,259,0.618,290,0.778,291,0.894,292,2.176,293,0.969,295,2.475,296,2.841,299,1.115,302,2.567,304,0.778,305,0.969,306,0.969,307,0.832,308,0.969,309,1.421,310,0.894,311,1.33,312,1.742,313,0.969,314,0.969,315,0.969,316,0.969,317,3.695,318,2.567,319,2.17,320,0.969,321,3.265,322,2.475,323,0.969,324,2.475,325,3.695,326,0.969,327,2.17,328,1.657,329,1.657,330,0.969,331,0.969,332,3.409,333,2.17,334,2.899,335,1.657,336,0.969,337,0.969,338,0.969,339,0.969,340,0.969,341,0.969,342,1.657,343,0.969,344,0.969,345,2.884,346,0.969,347,2.567,348,0.969,349,0.969,350,2.567,351,2.884,352,2.17,353,1.657,354,0.969,355,0.778,356,0.969,357,0.969,358,0.969,359,0.969,360,0.969,361,0.969,362,0.969,363,1.528,364,0.969,365,1.421,366,0.969,367,0.969,368,0.969,369,0.969,370,3.54,371,2.884,372,2.884,373,2.884,374,3.143,375,3.695,376,2.203,377,2.567,378,2.17,379,2.001,380,1.657,381,1.657,382,2.17,383,2.567,384,0.969,385,1.657,386,2.884,387,3.143,388,2.17,389,0.969,390,0.969,391,0.969,392,0.969,393,0.969,394,0.969,395,0.969,396,0.969,397,0.969,398,0.894,399,0.969,400,0.69,401,0.969,402,1.657,403,1.657,404,0.969,405,0.969,406,1.657,407,1.657,408,0.969,409,0.969,410,1.657,411,0.969,412,1.657,413,0.969,414,0.778,415,0.894,416,2.17,417,0.969,418,0.969,419,2.567,420,1.657,421,0.969,422,1.657,423,0.969,424,0.969,425,0.969,426,0.969,546,2.359,547,1.38,548,1.38,549,1.38,550,1.38,551,1.38,552,1.38]],["title/interfaces/RedisOptions.html",[175,1.047,230,1.6]],["body/interfaces/RedisOptions.html",[3,0.191,4,0.169,5,0.197,10,0.463,18,0.018,24,0.939,25,1.442,43,0.825,47,0.338,60,0.012,61,0.012,119,2.61,121,1.586,122,2.175,175,1.939,177,1.83,180,1.32,207,1.574,208,1.365,209,2.165,214,1.83,217,1.83,219,1.83,222,1.83,224,1.83,226,1.83,227,1.734,228,2.198,230,2.598,231,2.769,232,2.633,233,2.392,234,3.072,235,2.312,236,1.365,237,2.312,238,1.43,239,2.463,240,2.463,241,2.463,242,1.738,243,2.312,244,1.931,245,1.738,246,1.83,247,2.042,248,3.077,249,1.738,250,3.45,251,1.931,252,2.304]],["title/injectables/ResponseFormatInterceptor.html",[62,0.873,553,2.899]],["body/injectables/ResponseFormatInterceptor.html",[3,0.141,4,0.125,5,0.109,10,0.342,11,1.067,18,0.018,20,1.319,22,0.962,23,0.918,24,0.406,25,0.668,27,1.472,31,0.653,35,0.501,47,0.141,48,0.109,50,2.206,54,1.764,60,0.01,61,0.01,62,1.02,63,1.282,121,1.339,129,2.968,131,1.733,135,2.196,169,1.35,180,1.067,182,3.021,227,0.962,236,1.468,292,1.597,299,1.424,309,1.816,312,3.215,322,2.649,324,2.649,363,1.953,415,1.953,433,4.393,453,2.848,456,2.322,457,2.322,458,2.322,459,2.848,460,2.322,461,2.322,462,2.322,463,2.322,464,3.386,465,2.117,466,2.322,467,3.126,468,2.322,469,3.997,491,1.816,553,3.386,554,5.771,555,2.597,556,5.703,557,5.703,558,5.703,559,5.703,560,4.47,561,3.787,562,5.189,563,3.015,564,3.015,565,3.015,566,3.015,567,2.597,568,4.47,569,4.913,570,3.015,571,3.386,572,4.47,573,4.396,574,3.015,575,3.015,576,3.015,577,3.787,578,2.322,579,2.597,580,3.015,581,4.396,582,3.015,583,3.015,584,2.597,585,3.015,586,3.015,587,3.015,588,3.015,589,3.015,590,2.597,591,3.015,592,3.015,593,3.015,594,3.015,595,4.47,596,3.015,597,3.015,598,3.015,599,5.703,600,4.396,601,4.396,602,6.33,603,3.015,604,3.015,605,2.597,606,3.015,607,3.015,608,4.396,609,3.015,610,3.015,611,4.396,612,2.597,613,3.015,614,3.015,615,2.597,616,4.396,617,3.015,618,3.015,619,3.015,620,3.015,621,3.015,622,2.597,623,2.597,624,3.015,625,4.396,626,3.015]],["title/interfaces/ResponseFormatResponse.html",[175,1.047,459,2.438]],["body/interfaces/ResponseFormatResponse.html",[3,0.211,4,0.187,5,0.163,10,0.511,18,0.018,24,1.025,47,0.271,60,0.013,61,0.013,121,1.65,175,1.612,177,2.019,180,1.407,233,2.043,236,2.259,242,1.917,312,3.812,453,2.92,454,3.472,455,3.472,456,3.472,457,3.472,458,3.472,459,3.754,460,5.209,461,5.209,462,5.209,463,5.209,464,5.209,465,4.748,466,3.472,467,3.492,468,3.472,469,4.465,627,5.209]],["title/controllers/RouteController.html",[0,1.685,628,2.643]],["body/controllers/RouteController.html",[0,2.834,2,2.322,3,0.242,4,0.215,5,0.188,10,0.588,11,1.536,17,2.45,18,0.018,20,1.047,27,1.259,31,0.518,35,0.862,47,0.242,48,0.188,54,1.318,58,4.875,60,0.014,61,0.014,121,1.338,467,3.124,628,4.443,629,4.468,630,6.126,631,5.186,632,5.186,633,6.328,634,5.186,635,6.328,636,5.186,637,5.186,638,5.186,639,4.468,640,3.995,641,5.186,642,5.186]],["title/modules/RouteModule.html",[69,0.796,198,1.88]],["body/modules/RouteModule.html",[2,2.98,3,0.264,4,0.234,5,0.204,18,0.018,31,0.665,35,0.937,47,0.264,48,0.204,60,0.015,61,0.015,69,1.408,71,1.974,198,3.325,628,4.971,643,5.641,644,5.641]],["title/classes/SuperCache.html",[48,0.136,304,2.121]],["body/classes/SuperCache.html",[3,0.22,4,0.195,5,0.171,10,0.535,17,3.092,18,0.018,20,1.321,24,0.956,25,1.322,31,0.471,43,1.388,47,0.22,48,0.171,60,0.014,61,0.014,65,2.842,121,1.454,152,2.819,169,2.112,180,1.449,208,2.297,216,3.467,227,2.087,233,1.903,238,1.651,246,2.931,259,2.112,296,2.659,304,3.363,400,2.981,645,4.064,646,4.596,647,4.596,648,4.717,649,4.717,650,4.717,651,5.966,652,4.717,653,5.297,654,4.189,655,5.14,656,3.633,657,2.659,658,3.633,659,4.717,660,4.064,661,4.717]],["title/modules/SuperCacheModule.html",[69,0.796,505,2.643]],["body/modules/SuperCacheModule.html",[3,0.197,4,0.175,5,0.201,11,1.025,18,0.018,20,0.852,22,1.346,23,1.286,24,0.569,25,0.935,27,1.025,31,0.659,35,0.702,43,1.121,47,0.197,48,0.153,54,1.741,60,0.013,61,0.013,69,1.313,71,1.477,76,1.707,77,1.707,101,2.543,102,3.598,131,2.203,135,2.638,165,2.39,207,2.138,208,1.855,247,3.295,248,1.995,249,1.795,251,1.995,252,2.38,290,2.38,295,2.543,299,1.995,307,2.543,311,2.38,355,2.38,414,2.38,486,3.9,505,4.358,662,3.252,663,4.785,664,3.637,665,5.554,666,4.221,667,5.347,668,5.347,669,4.221,670,2.964,671,4.221,672,5.08,673,3.637,674,4.221,675,5.554,676,4.785,677,4.221,678,4.221,679,6.595,680,4.221,681,4.221,682,4.221,683,4.221,684,6.207,685,4.221,686,4.221]],["title/injectables/SuperCacheService.html",[62,0.873,670,2.643]],["body/injectables/SuperCacheService.html",[3,0.125,4,0.111,5,0.097,10,0.303,11,0.976,12,3.073,18,0.018,20,1.382,22,2.238,23,1.971,24,0.945,25,1.433,27,1.637,31,0.402,35,0.444,43,1.4,47,0.125,48,0.097,50,1.136,54,1.74,60,0.009,61,0.009,62,0.933,63,1.136,101,1.61,113,1.626,119,2.836,121,1.565,129,1.081,131,1.343,132,2.881,165,1.029,207,2.07,208,2.317,210,2.422,211,2.422,212,2.422,213,2.422,214,1.801,216,3.427,217,1.801,219,3.067,220,2.422,221,2.823,222,1.801,224,1.801,226,1.801,227,2.184,228,2.889,248,2.284,295,1.61,307,1.61,321,2.605,332,1.731,670,2.823,687,2.302,688,5.377,689,5.377,690,4.021,691,5.377,692,2.672,693,2.672,694,2.672,695,2.672,696,2.672,697,2.672,698,2.672,699,2.672,700,4.021,701,2.672,702,2.672,703,4.021,704,2.672,705,2.672,706,2.672,707,2.672,708,2.672,709,2.672,710,2.672,711,2.672,712,2.672,713,4.021,714,2.672,715,2.672,716,4.834,717,4.021,718,2.672,719,2.672,720,2.672,721,4.834,722,2.672,723,2.672,724,2.672,725,2.672,726,2.672]],["title/modules/SuperConfigModule.html",[69,0.796,496,2.267]],["body/modules/SuperConfigModule.html",[3,0.234,4,0.207,5,0.181,18,0.018,31,0.671,35,0.831,43,1.009,47,0.234,48,0.181,60,0.014,61,0.014,69,1.421,71,1.749,72,2.021,73,2.238,74,2.238,75,2.021,76,2.717,77,2.717,82,2.77,83,2.238,84,2.125,89,4.306,91,3.237,99,2.497,165,1.924,189,2.817,486,4.344,496,4.489,498,4.349,499,4.306,727,4.306,728,4.306,729,4.306,730,4.998,731,4.998]],["title/interfaces/SuperConfigOptions.html",[175,1.047,185,2.267]],["body/interfaces/SuperConfigOptions.html",[3,0.142,4,0.125,5,0.11,10,0.343,18,0.018,24,1.042,43,0.611,47,0.142,60,0.01,61,0.01,121,1.662,175,0.843,177,1.356,180,1.071,185,2.658,189,1.707,233,2.397,242,3.268,732,2.609,733,4.403,734,4.403,735,4.403,736,4.403,737,4.403,738,4.403,739,4.403,740,4.403,741,4.403,742,4.403,743,4.403,744,4.403,745,4.403,746,4.403,747,4.403,748,4.403,749,4.403,750,4.403,751,4.403,752,4.403,753,4.403,754,4.403,755,4.403,756,4.403,757,4.403,758,4.403,759,4.403,760,4.403,761,4.403,762,4.403,763,4.403,764,4.403,765,4.403,766,4.403]],["title/injectables/SuperConfigService.html",[62,0.873,498,2.121]],["body/injectables/SuperConfigService.html",[3,0.164,4,0.145,5,0.127,9,2.463,10,0.398,11,1.189,18,0.018,20,1.139,22,1.562,23,1.492,24,0.66,25,1.085,27,0.852,31,0.611,35,0.583,43,1.233,47,0.164,48,0.127,49,1.492,50,1.492,54,1.245,60,0.011,61,0.011,62,1.136,63,1.492,90,4.313,91,2.272,103,2.463,113,1.418,129,2.282,152,2.314,156,3.022,165,1.886,181,3.022,182,1.858,185,2.951,189,3.444,190,3.022,227,2.05,242,2.083,249,1.492,251,1.657,498,2.761,561,4.22,733,2.702,734,2.702,735,2.702,736,2.702,737,2.702,738,2.702,739,2.702,740,2.702,741,2.702,742,2.702,743,2.702,744,2.702,745,2.702,746,2.702,747,2.702,748,2.702,749,2.702,750,2.702,751,2.702,752,2.702,753,2.702,754,2.702,755,2.702,756,2.702,757,2.702,758,2.702,759,2.702,760,2.702,761,2.702,762,2.702,763,2.702,764,2.702,765,2.702,766,2.702,767,3.022,768,4.898,769,4.863,770,3.508,771,4.898,772,3.508,773,3.508,774,3.508,775,2.702,776,3.508,777,3.44,778,5.129,779,3.508,780,3.508,781,3.508,782,3.508,783,3.508,784,3.508,785,3.508,786,3.508,787,3.508,788,3.508,789,3.508,790,3.508,791,3.508,792,3.508,793,3.508,794,3.508,795,3.508,796,3.508,797,3.508,798,3.508,799,3.508,800,3.508,801,3.508,802,3.508,803,3.508,804,3.508,805,3.508,806,3.508,807,3.508,808,3.508,809,3.508,810,3.508,811,3.508,812,3.508,813,3.508,814,3.508,815,3.508,816,3.508,817,3.508,818,3.508,819,3.508,820,3.508,821,3.508,822,3.508,823,3.508,824,3.508,825,3.508,826,3.508,827,3.508,828,3.508,829,3.508,830,3.508,831,3.508,832,3.508,833,3.508,834,3.508,835,3.508,836,3.508,837,3.508,838,3.508,839,3.508,840,3.508,841,3.508,842,3.508,843,3.508,844,3.508,845,3.508,846,3.508,847,3.508]],["title/classes/SuperObserve.html",[48,0.136,848,2.438]],["body/classes/SuperObserve.html",[3,0.184,4,0.163,5,0.143,10,0.446,17,3.258,18,0.018,20,1.392,24,1.005,31,0.393,43,1.422,44,3.733,47,0.184,48,0.143,60,0.012,61,0.012,65,2.372,121,1.121,152,1.86,169,3.339,180,1.287,233,2.046,238,1.378,259,1.763,274,4.842,296,3.973,400,2.649,441,4.618,646,5.312,647,5.744,653,5.429,654,3.723,656,3.033,657,2.219,658,3.033,660,3.392,848,3.435,849,3.392,850,5.165,851,5.165,852,5.165,853,5.165,854,5.165,855,3.937,856,3.937,857,3.937,858,5.302,859,3.937,860,3.937,861,3.937,862,3.937,863,3.392,864,5.995,865,3.937,866,3.392,867,3.937]],["title/injectables/SuperObserveInterceptor.html",[62,0.873,868,2.643]],["body/injectables/SuperObserveInterceptor.html",[3,0.179,4,0.159,5,0.139,10,0.434,11,1.263,18,0.018,20,1.193,22,1.659,23,1.585,24,0.701,25,1.152,27,0.929,31,0.683,35,0.636,43,1.279,44,3.359,45,2.949,47,0.179,48,0.139,49,1.628,50,2.696,54,1.322,60,0.012,61,0.012,62,1.207,63,1.628,113,1.548,129,2.389,131,2.337,135,2.553,165,2.003,180,1.263,182,3.359,227,1.221,274,4.149,292,2.028,299,1.809,365,2.306,433,4.884,441,4.007,560,4.482,567,4.482,568,5.091,569,5.462,571,2.949,572,5.091,577,4.482,578,2.949,579,3.298,605,3.298,612,3.298,615,3.298,848,2.48,850,4.482,851,4.482,852,3.298,853,3.298,854,3.298,868,3.653,869,3.298,870,3.828,871,5.892,872,5.202,873,3.828,874,5.202,875,2.949,876,4.007,877,3.298,878,5.202,879,5.202,880,3.828,881,3.828,882,3.828,883,3.828,884,3.828,885,5.202,886,3.828,887,3.828,888,4.482,889,3.828,890,3.828,891,3.298,892,3.828,893,3.828]],["title/modules/SuperObserveModule.html",[69,0.796,507,2.643]],["body/modules/SuperObserveModule.html",[3,0.195,4,0.173,5,0.151,11,1.014,12,2.23,18,0.018,20,1.113,27,1.339,31,0.701,35,0.694,43,1.246,44,3.271,47,0.195,48,0.151,49,1.776,50,2.345,54,1.061,60,0.013,61,0.013,69,1.306,71,1.461,76,1.689,77,1.689,93,2.932,94,2.354,99,2.086,101,2.516,102,2.705,129,1.689,131,1.395,132,2.755,135,2.123,152,1.973,165,2.123,182,2.921,238,2.298,292,2.212,322,2.516,324,2.516,365,3.322,398,2.705,400,2.755,507,4.335,657,2.354,663,4.751,664,5.319,667,5.319,668,4.751,676,3.598,848,3.572,868,2.932,871,5.657,875,3.217,877,3.598,891,3.598,894,4.176,895,4.176,896,6.827,897,4.176,898,4.176,899,4.176,900,4.176,901,5.514,902,4.176,903,5.514,904,4.176,905,4.176,906,4.176,907,4.176,908,4.176,909,4.176,910,4.176,911,4.176]],["title/controllers/SuperServerController.html",[0,1.685,912,2.643]],["body/controllers/SuperServerController.html",[0,2.298,2,2.298,3,0.24,4,0.212,5,0.186,10,0.581,11,1.526,17,2.424,18,0.018,20,1.035,27,1.246,31,0.679,34,3.952,35,0.853,43,1.269,47,0.24,48,0.186,49,2.182,50,2.182,54,1.304,60,0.014,61,0.014,62,1.19,165,1.975,182,2.718,428,3.324,477,4.42,480,4.42,491,3.091,501,4.072,912,4.414,913,4.42,914,6.104,915,5.131,916,4.095,917,4.42,918,5.131,919,5.131,920,5.131]],["title/modules/SuperServerModule.html",[69,0.796,500,2.267]],["body/modules/SuperServerModule.html",[2,2.766,3,0.233,4,0.206,5,0.18,18,0.018,31,0.671,35,0.829,43,1.006,47,0.233,48,0.18,60,0.014,61,0.014,69,1.419,71,1.745,72,2.016,73,2.232,74,2.232,75,2.016,76,2.714,77,2.714,82,2.766,83,2.232,84,2.12,165,2.378,500,4.487,501,3.229,912,4.712,916,4.646,917,4.295,921,4.295,922,4.295,923,4.295,924,4.985,925,4.985]],["title/injectables/SuperServerService.html",[62,0.873,916,2.267]],["body/injectables/SuperServerService.html",[3,0.163,4,0.145,5,0.127,10,0.396,11,1.186,18,0.018,20,1.231,23,1.858,24,0.658,27,0.849,28,1.746,31,0.61,35,0.581,43,1.295,47,0.163,48,0.127,50,2.828,54,0.888,60,0.011,61,0.011,62,1.133,63,1.486,103,2.454,113,2.278,121,1.29,129,2.689,131,1.882,135,1.881,180,1.186,182,3.231,227,1.115,232,1.976,236,1.632,242,1.486,299,1.651,309,2.944,437,3.011,467,3.675,491,3.394,501,4.158,595,3.011,622,4.853,623,3.011,627,2.692,654,2.454,769,4.209,777,2.454,914,5.255,916,2.944,926,3.011,927,5.633,928,4.886,929,3.495,930,4.886,931,4.209,932,4.886,933,4.886,934,4.886,935,4.886,936,5.633,937,4.886,938,4.886,939,4.886,940,4.886,941,4.886,942,3.495,943,4.886,944,3.495,945,3.495,946,3.495,947,4.886,948,3.495,949,3.495,950,3.495,951,3.495,952,3.495,953,3.495,954,4.886,955,3.495,956,3.495,957,3.495,958,3.495,959,3.495,960,3.495,961,3.495,962,3.495,963,3.495,964,3.011,965,3.495,966,3.495,967,3.495,968,3.495,969,3.495,970,3.495,971,3.495,972,3.495,973,3.495,974,3.495,975,3.495,976,3.495,977,3.495,978,3.495,979,3.495,980,3.495,981,3.495,982,3.495,983,3.495,984,3.495,985,3.495,986,3.495,987,3.495,988,3.495]],["title/modules/UmzugModule.html",[69,0.796,503,2.267]],["body/modules/UmzugModule.html",[3,0.241,4,0.214,5,0.187,18,0.017,31,0.63,35,0.857,47,0.241,48,0.187,60,0.014,61,0.014,69,1.441,71,1.805,72,2.086,73,2.31,74,2.31,75,2.086,76,2.755,77,2.755,82,2.825,83,2.31,84,2.193,186,4.667,503,4.519,989,4.444,990,4.444,991,4.444,992,5.158,993,5.158]],["title/injectables/UmzugService.html",[62,0.873,186,2.267]],["body/injectables/UmzugService.html",[3,0.164,4,0.146,5,0.127,10,0.398,11,1.191,12,3.001,18,0.018,20,1.38,22,1.121,23,1.721,24,0.661,25,0.779,27,1.485,28,2.45,31,0.611,35,0.584,47,0.164,48,0.127,49,1.494,50,2.6,54,1.436,60,0.011,61,0.011,62,1.138,63,1.494,113,1.421,121,0.743,129,2.694,130,1.981,131,1.887,132,3.055,134,2.468,135,2.476,180,1.191,182,3.407,183,5.372,186,2.955,227,1.121,236,2.042,238,2.511,299,1.66,571,3.778,657,1.981,994,3.028,995,6.114,996,6.114,997,6.114,998,4.71,999,3.514,1000,4.905,1001,3.514,1002,3.514,1003,3.514,1004,3.514,1005,4.905,1006,3.514,1007,4.905,1008,3.514,1009,5.65,1010,3.514,1011,3.514,1012,3.514,1013,3.514,1014,6.114,1015,3.514,1016,3.514,1017,3.514,1018,3.514,1019,3.514,1020,3.514,1021,3.514,1022,3.514,1023,3.514,1024,3.514,1025,3.514,1026,3.514,1027,3.514,1028,4.905,1029,3.514,1030,3.514,1031,3.514,1032,4.905,1033,3.514,1034,3.514,1035,3.514,1036,3.514,1037,3.514]],["title/classes/UpdateUserDto.html",[48,0.136,1038,2.438]],["body/classes/UpdateUserDto.html",[3,0.263,4,0.233,5,0.204,18,0.017,31,0.664,47,0.263,48,0.204,60,0.015,61,0.015,65,4.003,258,3.389,259,2.519,261,4.332,1038,4.304,1039,4.845,1040,6.644,1041,5.624,1042,4.845,1043,4.845,1044,4.332,1045,4.332]],["title/classes/User.html",[48,0.136,95,1.778]],["body/classes/User.html",[3,0.149,4,0.132,5,0.115,10,0.36,17,3.36,18,0.018,20,1.435,24,1.021,31,0.318,47,0.149,48,0.115,60,0.01,61,0.01,65,1.915,95,2.158,121,1.58,122,2.068,124,3.222,152,3.211,169,3.346,172,3.755,180,1.109,233,1.457,238,1.112,259,1.423,262,4.607,263,4.607,264,4.607,265,4.607,266,4.607,267,4.607,268,4.607,269,4.607,274,3.208,283,2.738,296,4.009,400,2.282,646,5.478,647,5.801,653,5.535,654,3.208,655,3.935,656,2.448,657,1.792,658,2.448,863,5.855,866,2.738,1046,2.738,1047,3.178,1048,3.178,1049,3.178,1050,3.178,1051,3.178,1052,4.568,1053,3.178,1054,3.178,1055,3.178,1056,4.568,1057,3.178,1058,3.178,1059,3.178,1060,4.568,1061,4.568,1062,4.568,1063,3.178,1064,3.178,1065,3.178,1066,3.178,1067,3.178,1068,3.178]],["title/controllers/UserController.html",[0,1.685,1069,2.643]],["body/controllers/UserController.html",[0,1.694,2,1.694,3,0.177,4,0.157,5,0.137,8,2.914,10,0.429,11,1.253,17,3.12,18,0.018,20,1.333,22,2.012,23,1.922,24,0.85,25,1.398,26,4.785,27,1.603,31,0.66,32,4.446,33,3.975,35,0.629,42,4.785,43,0.763,44,2.004,45,2.914,47,0.177,48,0.137,49,1.609,50,1.609,54,1.678,60,0.012,61,0.012,81,3.311,95,1.787,172,4.785,233,2.296,258,3.801,376,2.279,998,4.524,1038,4.087,1044,3.975,1045,3.975,1069,3.624,1070,3.259,1071,5.435,1072,4.446,1073,4.446,1074,3.259,1075,3.783,1076,3.783,1077,3.783,1078,3.783,1079,3.259,1080,3.783,1081,3.783,1082,3.259,1083,3.783,1084,3.783,1085,3.259,1086,3.783,1087,3.783,1088,3.783,1089,6.309,1090,3.259,1091,3.259,1092,3.259,1093,3.259,1094,3.783,1095,3.783,1096,3.783,1097,3.783,1098,3.783,1099,3.783,1100,3.783,1101,3.783,1102,3.783,1103,3.783,1104,3.783,1105,3.783,1106,3.783]],["title/modules/UserModule.html",[69,0.796,256,2.267]],["body/modules/UserModule.html",[2,2.731,3,0.228,4,0.202,5,0.177,18,0.018,31,0.716,35,0.812,47,0.228,48,0.177,60,0.014,61,0.014,69,1.406,71,1.709,72,1.975,73,2.187,74,2.187,75,1.975,76,2.689,77,2.689,81,4.336,82,2.731,83,2.187,84,2.077,93,3.429,94,2.753,95,2.308,99,2.44,110,4.208,256,4.467,1069,4.669,1091,4.208,1107,4.208,1108,4.884,1109,4.208,1110,4.884,1111,4.884,1112,4.208]],["title/injectables/UserService.html",[62,0.873,81,2.121]],["body/injectables/UserService.html",[3,0.147,4,0.13,5,0.114,10,0.357,11,1.101,12,3.017,18,0.018,20,1.336,22,2.049,23,1.958,24,0.831,25,1.423,26,4.331,27,1.56,31,0.642,35,0.523,47,0.147,48,0.114,54,1.567,60,0.01,61,0.01,62,1.052,63,1.338,81,2.557,94,1.774,95,3.312,113,1.834,114,2.712,117,3.908,119,2.761,121,1.125,122,1.515,124,3.506,126,3.494,127,2.712,128,2.712,129,1.273,130,1.774,131,2.212,132,3.45,134,3.185,135,1.746,142,3.908,149,2.733,150,2.712,151,2.712,152,1.487,172,3.734,233,2.202,258,3.506,998,3.494,1038,3.77,1044,3.494,1045,3.494,1071,5.013,1072,3.908,1073,3.908,1074,3.908,1079,3.908,1082,3.908,1085,3.908,1092,2.712,1093,2.712,1112,2.712,1113,2.712,1114,4.536,1115,3.147,1116,3.147,1117,3.147,1118,4.536,1119,3.147,1120,3.147,1121,3.147,1122,3.147,1123,3.147,1124,3.147,1125,4.536,1126,4.536,1127,3.147,1128,3.147,1129,3.147,1130,3.147,1131,4.536,1132,4.536,1133,3.494,1134,3.147,1135,3.147,1136,3.147,1137,3.147,1138,3.147,1139,4.536,1140,3.147,1141,3.147]],["title/coverage.html",[1142,3.961]],["body/coverage.html",[0,2.593,1,1.895,5,0.098,6,3.256,7,2.325,16,1.748,18,0.018,24,0.655,36,1.626,40,1.895,42,1.895,43,1.511,44,2.863,48,0.245,60,0.009,61,0.009,62,1.592,64,2.325,75,1.091,80,1.748,81,1.521,95,1.275,111,2.325,135,1.039,153,2.325,175,1.88,176,1.895,178,2.325,179,2.325,185,1.626,186,1.626,189,2.741,199,2.079,206,3.256,207,1.039,208,2.391,209,3.437,228,1.091,230,1.147,235,1.147,237,1.147,243,1.147,245,1.147,247,1.348,255,2.079,258,1.626,260,2.325,261,3.12,290,1.521,291,3.5,304,1.521,311,1.521,334,5.072,355,1.521,400,1.348,414,1.521,427,2.079,428,1.748,430,2.325,453,1.748,454,3.12,455,3.12,459,1.748,470,1.895,471,2.325,475,1.626,488,2.325,495,2.079,498,1.521,501,2.624,531,2.325,544,2.079,553,2.079,554,2.325,555,2.325,628,1.895,629,2.325,645,2.325,662,2.079,670,1.895,672,2.079,687,2.325,732,2.325,767,2.325,775,2.079,848,1.748,849,2.325,868,1.895,869,2.325,876,2.079,912,1.895,913,2.325,916,1.626,926,2.325,994,2.325,1038,1.748,1039,2.325,1046,2.325,1069,1.895,1070,2.325,1113,2.325,1142,2.079,1143,2.325,1144,2.698,1145,2.698,1146,6.307,1147,7.375,1148,5.791,1149,7.03,1150,4.05,1151,4.05,1152,4.05,1153,4.862,1154,2.698,1155,4.05,1156,5.791,1157,4.862,1158,4.05,1159,2.325,1160,2.698,1161,3.489,1162,4.05,1163,4.189,1164,4.862,1165,2.325,1166,2.325,1167,2.325,1168,2.325,1169,2.325,1170,2.325,1171,2.325,1172,2.325,1173,2.325,1174,2.325,1175,2.325,1176,2.325,1177,2.325,1178,2.698]],["title/dependencies.html",[72,1.831,1179,2.705]],["body/dependencies.html",[18,0.018,35,0.758,48,0.211,60,0.013,61,0.013,68,3.202,72,1.844,87,3.513,91,2.954,94,2.571,126,3.513,163,5.031,164,3.929,183,3.513,187,5.55,188,3.929,238,2.044,289,3.513,310,2.954,578,3.513,640,3.513,657,2.571,875,3.513,1042,3.929,1043,3.929,1180,4.561,1181,4.561,1182,4.561,1183,4.561,1184,4.561,1185,4.561,1186,4.561,1187,4.561,1188,4.561,1189,4.561,1190,4.561,1191,5.84,1192,4.561,1193,6.792,1194,4.561,1195,4.561,1196,4.561,1197,4.561,1198,4.561,1199,5.84,1200,4.561,1201,4.561,1202,4.561,1203,5.84,1204,4.561,1205,4.561,1206,4.561,1207,4.561,1208,4.561,1209,4.561,1210,4.561,1211,4.561,1212,4.561,1213,4.561,1214,4.561,1215,4.561,1216,4.561,1217,4.561,1218,4.561,1219,4.561,1220,4.561,1221,4.561,1222,4.561]],["title/miscellaneous/functions.html",[1223,1.892,1224,3.901]],["body/miscellaneous/functions.html",[10,0.619,18,0.017,22,2.083,23,1.99,24,0.88,25,1.447,27,1.586,60,0.015,61,0.015,75,2.825,119,2.515,176,5.082,491,3.935,1163,4.708,1165,5.627,1166,5.627,1223,3.293,1224,4.708,1225,6.986,1226,5.465,1227,5.465]],["title/index.html",[10,0.356,1228,3.14,1229,3.14]],["body/index.html",[4,0.144,14,4.193,18,0.017,60,0.011,61,0.011,84,2.823,216,1.842,439,4.193,472,5.114,491,2.094,492,2.995,584,2.995,590,2.995,639,5.992,657,1.96,931,4.193,1142,2.678,1143,4.193,1230,3.476,1231,3.476,1232,5.617,1233,4.868,1234,3.476,1235,3.476,1236,3.476,1237,4.868,1238,2.995,1239,5.617,1240,3.476,1241,3.476,1242,6.085,1243,3.476,1244,6.085,1245,6.955,1246,3.476,1247,6.816,1248,3.476,1249,3.476,1250,3.476,1251,4.868,1252,3.476,1253,3.476,1254,5.617,1255,3.476,1256,3.476,1257,3.476,1258,3.476,1259,3.476,1260,6.085,1261,6.639,1262,4.868,1263,3.476,1264,3.476,1265,3.476,1266,3.476,1267,3.476,1268,4.868,1269,6.085,1270,4.868,1271,3.476,1272,3.476,1273,6.639,1274,6.085,1275,3.476,1276,4.868,1277,3.476,1278,3.476,1279,3.476,1280,3.476,1281,6.085,1282,3.476,1283,3.476,1284,3.476,1285,3.476,1286,4.868,1287,3.476,1288,3.476,1289,3.476,1290,3.476,1291,3.476,1292,4.868,1293,3.476,1294,3.476,1295,3.476,1296,4.868,1297,3.476,1298,3.476,1299,5.243,1300,4.868,1301,3.476,1302,3.476,1303,3.476,1304,3.476,1305,3.476,1306,3.476,1307,3.476,1308,3.476,1309,4.868,1310,3.476,1311,2.995,1312,3.476,1313,3.476,1314,5.617,1315,3.476,1316,3.476,1317,3.476,1318,3.476,1319,3.476,1320,3.476,1321,4.868,1322,3.476,1323,3.476,1324,3.476,1325,3.476,1326,3.476,1327,4.868,1328,3.476,1329,3.476,1330,3.476,1331,4.868,1332,4.868,1333,3.476,1334,3.476,1335,3.476,1336,3.476,1337,3.476,1338,3.476,1339,3.476,1340,3.476,1341,3.476,1342,3.476,1343,2.995,1344,3.476,1345,3.476,1346,3.476,1347,3.476,1348,3.476,1349,3.476,1350,2.995]],["title/modules.html",[71,1.8]],["body/modules.html",[18,0.014,60,0.014,61,0.014,70,2.55,71,1.786,192,3.584,195,2.704,196,2.704,197,2.704,198,2.55,256,3.075,482,3.075,496,3.075,500,3.075,503,3.075,505,3.584,507,3.584,1299,6.602,1311,5.842,1351,7.663,1352,7.663,1353,7.763,1354,6.781]],["title/overview.html",[1355,4.43]],["body/overview.html",[2,1.636,18,0.018,36,3.475,60,0.011,61,0.011,63,1.554,69,0.773,70,3.68,71,1.279,72,1.478,73,1.636,74,1.636,75,1.478,76,1.478,77,1.478,78,3.148,79,3.148,80,3.736,81,3.969,82,2.257,83,1.636,84,1.554,177,1.636,186,4.163,192,5.172,193,3.148,194,3.148,195,3.995,196,3.995,197,3.995,198,3.369,256,3.93,259,1.636,427,2.815,475,3.475,482,3.746,483,3.148,484,3.148,496,3.93,498,3.895,500,3.93,503,3.93,727,3.148,728,3.148,729,3.148,777,2.566,916,4.163,921,3.148,922,3.148,923,3.148,964,3.148,989,3.148,990,3.148,991,3.148,1107,3.148,1109,3.148,1133,3.882,1355,3.148,1356,3.654,1357,3.654]],["title/properties.html",[180,1.099,1179,2.705]],["body/properties.html",[18,0.017,60,0.016,61,0.016,180,1.437,467,3.565,1238,5.098,1343,5.098,1350,5.098,1358,5.917,1359,5.917]],["title/miscellaneous/typealiases.html",[1223,1.892,1360,4.528]],["body/miscellaneous/typealiases.html",[10,0.637,18,0.017,24,1.018,43,1.135,60,0.015,61,0.015,208,1.879,209,3.746,245,2.825,247,3.319,627,5.743,1223,3.389,1361,5.624,1362,5.724]],["title/miscellaneous/variables.html",[778,3.488,1223,1.892]],["body/miscellaneous/variables.html",[5,0.104,8,2.208,10,0.325,11,0.696,12,1.159,18,0.018,24,0.958,33,2.208,42,2.975,43,1.017,44,1.519,54,0.728,60,0.01,61,0.01,70,1.432,90,1.857,95,2.002,99,1.432,101,1.727,102,1.857,121,0.896,122,1.683,137,2.47,152,3.391,169,2.881,185,1.727,189,1.616,195,1.519,196,1.519,197,1.519,198,1.432,199,2.208,206,3.979,208,0.958,227,2.269,231,1.219,232,1.159,234,1.219,236,0.958,248,1.355,250,1.519,251,1.355,255,2.208,256,1.727,299,3.391,376,1.727,379,1.857,465,2.013,482,1.727,495,2.208,496,2.553,498,2.388,500,1.727,503,1.727,509,2.47,510,2.47,511,2.47,512,2.47,513,2.47,514,2.47,515,3.65,516,2.47,517,2.47,518,2.47,519,2.47,520,2.47,521,2.47,522,2.47,523,2.47,524,2.47,525,2.47,526,2.47,527,2.47,528,2.47,529,2.47,530,2.47,544,2.208,630,2.47,640,2.208,662,3.264,672,3.264,673,2.47,733,2.208,734,2.208,735,2.208,736,2.208,737,2.208,738,2.208,739,2.208,740,2.208,741,2.208,742,2.208,743,2.208,744,2.208,745,2.208,746,2.208,747,2.208,748,2.208,749,2.208,750,2.208,751,2.208,752,2.208,753,2.208,754,2.208,755,2.208,756,2.208,757,2.208,758,2.208,759,2.208,760,2.208,761,2.208,762,2.208,763,2.208,764,2.208,765,2.208,766,2.208,775,3.264,777,2.013,778,2.208,876,3.882,888,2.47,1090,2.47,1133,2.208,1159,3.65,1161,4.342,1167,2.47,1168,3.65,1169,2.47,1170,3.65,1171,3.65,1172,2.47,1173,3.65,1174,2.47,1175,3.65,1176,2.47,1177,3.65,1223,1.727,1362,4.796,1363,2.867,1364,2.867,1365,2.867,1366,2.867,1367,2.867,1368,2.867,1369,2.867,1370,2.867,1371,2.867,1372,2.867,1373,2.867,1374,2.867,1375,2.867,1376,2.867,1377,2.867,1378,2.867,1379,2.867,1380,2.867,1381,2.867,1382,2.867,1383,5.04,1384,4.237,1385,2.867,1386,2.867,1387,2.867,1388,2.867,1389,2.867,1390,2.867,1391,2.867,1392,2.867,1393,2.867,1394,4.237,1395,2.867,1396,2.867,1397,2.867,1398,2.867,1399,2.867,1400,2.867,1401,2.867,1402,2.867,1403,2.867,1404,2.867,1405,2.867,1406,2.867,1407,2.867,1408,2.867,1409,2.867,1410,2.867,1411,2.867,1412,2.867,1413,2.867,1414,2.867,1415,2.867,1416,2.867]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":334,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"coverage.html":{}}}],["0.0.0",{"_index":951,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["0.0.0.0",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1358,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":777,"title":{},"body":{"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":340,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["1000",{"_index":379,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":1357,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["11.1.6",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1356,"title":{},"body":{"overview.html":{}}}],["13.0.1",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":965,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["1e9",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":109,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["2",{"_index":369,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["2.1.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["3.1.10",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":964,"title":{},"body":{"injectables/SuperServerService.html":{},"overview.html":{}}}],["5.7.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["587",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["6.37.7",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":512,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["6379",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":950,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["8.1.0",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["8.16.3",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["8000",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.3",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["_context",{"_index":435,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["accessors",{"_index":561,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperConfigService.html":{}}}],["accesstoken",{"_index":147,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["address1",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["address2",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["advance",{"_index":720,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["aftertime",{"_index":850,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["aftertime.gettime",{"_index":886,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["alias",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1361,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":1287,"title":{},"body":{"index.html":{}}}],["allownull",{"_index":647,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["already",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["alter",{"_index":908,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["amazing",{"_index":1337,"title":{},"body":{"index.html":{}}}],["any).catch(err",{"_index":890,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["api",{"_index":465,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"miscellaneous/variables.html":{}}}],["api/v",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":181,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{}}}],["app_caches",{"_index":659,"title":{},"body":{"classes/SuperCache.html":{}}}],["app_client_url",{"_index":733,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_debug",{"_index":734,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_env",{"_index":735,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_host",{"_index":736,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":901,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["app_name",{"_index":737,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_performance_logs",{"_index":862,"title":{},"body":{"classes/SuperObserve.html":{}}}],["app_port",{"_index":738,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_secret",{"_index":739,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_timezone",{"_index":740,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1261,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1237,"title":{},"body":{"index.html":{}}}],["arch",{"_index":932,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["async",{"_index":12,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attributes",{"_index":1062,"title":{},"body":{"classes/User.html":{}}}],["auth",{"_index":9,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/SuperConfigService.html":{}}}],["auth.controller",{"_index":92,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.controller.ts",{"_index":7,"title":{},"body":{"controllers/BasicAuthController.html":{},"coverage.html":{}}}],["auth.controller.ts:13",{"_index":21,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.controller.ts:21",{"_index":30,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.guard",{"_index":41,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.guard.ts",{"_index":64,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"coverage.html":{}}}],["auth.module",{"_index":201,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["auth.module.ts",{"_index":85,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.service",{"_index":38,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{}}}],["auth.service.ts",{"_index":111,"title":{},"body":{"injectables/BasicAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:16",{"_index":123,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:26",{"_index":118,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:9",{"_index":116,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.strategy",{"_index":98,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.strategy.ts",{"_index":153,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:16",{"_index":159,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["auth.strategy.ts:7",{"_index":157,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["auth/basic",{"_index":200,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["auth_lifetime",{"_index":741,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["auth_saltround",{"_index":742,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":67,"title":{},"body":{"injectables/BasicAuthGuard.html":{}}}],["authguard('basic",{"_index":66,"title":{},"body":{"injectables/BasicAuthGuard.html":{}}}],["author",{"_index":1343,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":51,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["autoincrement",{"_index":1056,"title":{},"body":{"classes/User.html":{}}}],["autoloadmodels",{"_index":524,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["autosync",{"_index":241,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["available",{"_index":1354,"title":{},"body":{"modules.html":{}}}],["averages",{"_index":967,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["await",{"_index":132,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":1276,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1338,"title":{},"body":{"index.html":{}}}],["based",{"_index":1272,"title":{},"body":{"index.html":{}}}],["basic",{"_index":37,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{}}}],["basicauthcontroller",{"_index":1,"title":{"controllers/BasicAuthController.html":{}},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"coverage.html":{}}}],["basicauthguard",{"_index":40,"title":{"injectables/BasicAuthGuard.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"coverage.html":{}}}],["basicauthmodule",{"_index":70,"title":{"modules/BasicAuthModule.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["basicauthservice",{"_index":36,"title":{"injectables/BasicAuthService.html":{}},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["basicauthstrategy",{"_index":80,"title":{"injectables/BasicAuthStrategy.html":{}},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["bcrypt",{"_index":126,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":139,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["beforetime",{"_index":851,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["beforetime.gettime",{"_index":887,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["birthday",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["board",{"_index":1330,"title":{},"body":{"index.html":{}}}],["body",{"_index":32,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapfunctionargs",{"_index":176,"title":{"interfaces/BootstrapFunctionArgs.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrapmodule",{"_index":192,"title":{"modules/BootstrapModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules.html":{},"overview.html":{}}}],["browse",{"_index":1353,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1351,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1233,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":724,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache",{"_index":399,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.driver",{"_index":669,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.driver.ts",{"_index":291,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"coverage.html":{}}}],["cache.driver.ts:10",{"_index":546,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:112",{"_index":451,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:124",{"_index":446,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:132",{"_index":449,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:148",{"_index":447,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:163",{"_index":294,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:174",{"_index":300,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:188",{"_index":303,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:201",{"_index":297,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:205",{"_index":301,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:21",{"_index":550,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:227",{"_index":298,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:238",{"_index":535,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:239",{"_index":536,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:240",{"_index":534,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:247",{"_index":539,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:257",{"_index":541,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:268",{"_index":537,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:272",{"_index":540,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:286",{"_index":538,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:31",{"_index":552,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:41",{"_index":548,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:45",{"_index":551,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:66",{"_index":549,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:77",{"_index":445,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:78",{"_index":444,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:85",{"_index":450,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:9",{"_index":547,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:94",{"_index":452,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:98",{"_index":448,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.entity",{"_index":305,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.entity.ts",{"_index":645,"title":{},"body":{"classes/SuperCache.html":{},"coverage.html":{}}}],["cache.entity.ts:10",{"_index":652,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.entity.ts:13",{"_index":648,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.entity.ts:7",{"_index":650,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.interface",{"_index":307,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{}}}],["cache.interface.ts",{"_index":209,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cache.interface.ts:40",{"_index":223,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:41",{"_index":229,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:42",{"_index":215,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:43",{"_index":225,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:44",{"_index":218,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.json",{"_index":359,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.module",{"_index":506,"title":{},"body":{"modules/InfraModule.html":{}}}],["cache.module.ts",{"_index":662,"title":{},"body":{"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.module.ts:19",{"_index":666,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.service",{"_index":671,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.service.ts",{"_index":687,"title":{},"body":{"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:11",{"_index":694,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:15",{"_index":699,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:19",{"_index":702,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:29",{"_index":697,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:33",{"_index":705,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:37",{"_index":695,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:41",{"_index":704,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:47",{"_index":701,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:5",{"_index":693,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:57",{"_index":698,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:61",{"_index":696,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache/super",{"_index":208,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cachedriver",{"_index":207,"title":{"interfaces/CacheDriver.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["cachedvalue",{"_index":721,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cacheserviceprovider",{"_index":684,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["callhandler",{"_index":569,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["canactivate",{"_index":431,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["canactivate(_context",{"_index":432,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["case",{"_index":679,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["catch",{"_index":324,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["channel",{"_index":1302,"title":{},"body":{"index.html":{}}}],["check",{"_index":472,"title":{},"body":{"controllers/HealthController.html":{},"injectables/HealthService.html":{},"index.html":{}}}],["city",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["class",{"_index":48,"title":{"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":688,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["clicks",{"_index":1286,"title":{},"body":{"index.html":{}}}],["client",{"_index":312,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["clienttimezone",{"_index":456,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["clientversion",{"_index":457,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["cloud",{"_index":1271,"title":{},"body":{"index.html":{}}}],["cluster_basicauthmodule",{"_index":78,"title":{},"body":{"modules/BasicAuthModule.html":{},"overview.html":{}}}],["cluster_basicauthmodule_providers",{"_index":79,"title":{},"body":{"modules/BasicAuthModule.html":{},"overview.html":{}}}],["cluster_bootstrapmodule",{"_index":193,"title":{},"body":{"modules/BootstrapModule.html":{},"overview.html":{}}}],["cluster_bootstrapmodule_imports",{"_index":194,"title":{},"body":{"modules/BootstrapModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":254,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_healthmodule",{"_index":483,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":484,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_inframodule",{"_index":493,"title":{},"body":{"modules/InfraModule.html":{}}}],["cluster_inframodule_imports",{"_index":494,"title":{},"body":{"modules/InfraModule.html":{}}}],["cluster_pluginmodule",{"_index":542,"title":{},"body":{"modules/PluginModule.html":{}}}],["cluster_pluginmodule_imports",{"_index":543,"title":{},"body":{"modules/PluginModule.html":{}}}],["cluster_superconfigmodule",{"_index":727,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superconfigmodule_exports",{"_index":728,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superconfigmodule_providers",{"_index":729,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superservermodule",{"_index":921,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_superservermodule_exports",{"_index":922,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_superservermodule_providers",{"_index":923,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_umzugmodule",{"_index":989,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_umzugmodule_exports",{"_index":991,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_umzugmodule_providers",{"_index":990,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1107,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1109,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1108,"title":{},"body":{"modules/UserModule.html":{}}}],["column",{"_index":653,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["column({type",{"_index":646,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["come",{"_index":1293,"title":{},"body":{"index.html":{}}}],["computedspeed",{"_index":852,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["config",{"_index":103,"title":{},"body":{"modules/BasicAuthModule.html":{},"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["config.default",{"_index":776,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.default.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.get('app_secret",{"_index":105,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["config.interface",{"_index":190,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{}}}],["config.interface.ts",{"_index":732,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"coverage.html":{}}}],["config.module",{"_index":497,"title":{},"body":{"modules/InfraModule.html":{}}}],["config.module.ts",{"_index":730,"title":{},"body":{"modules/SuperConfigModule.html":{}}}],["config.service",{"_index":499,"title":{},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{}}}],["config.service.ts",{"_index":767,"title":{},"body":{"injectables/SuperConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":772,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.service.ts:14",{"_index":774,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.service.ts:7",{"_index":770,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config/super",{"_index":189,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":89,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/SuperConfigModule.html":{}}}],["configmodule.forroot",{"_index":731,"title":{},"body":{"modules/SuperConfigModule.html":{}}}],["configservice",{"_index":90,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"modules/InfraModule.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_debug",{"_index":523,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_host",{"_index":516,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_name",{"_index":521,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_password",{"_index":520,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_port",{"_index":517,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_username",{"_index":519,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('app_secret",{"_index":171,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["conflictexception",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('user",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["console",{"_index":1027,"title":{},"body":{"injectables/UmzugService.html":{}}}],["console.error('[supercache",{"_index":396,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["const",{"_index":131,"title":{},"body":{"injectables/BasicAuthService.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":156,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"injectables/SuperConfigService.html":{}}}],["constructor(driver",{"_index":692,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["constructor(options",{"_index":293,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["constructor(private",{"_index":49,"title":{},"body":{"controllers/BasicAuthController.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":870,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["constructor(sequelize",{"_index":999,"title":{},"body":{"injectables/UmzugService.html":{}}}],["constructor(usermodel",{"_index":114,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["content",{"_index":361,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["context",{"_index":571,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{}}}],["context.gethandler",{"_index":881,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":605,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":615,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["continue",{"_index":386,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["controller",{"_index":0,"title":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/RouteController.html":{},"controllers/SuperServerController.html":{},"controllers/UserController.html":{}},"body":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/RouteController.html":{},"controllers/SuperServerController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":46,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["controller('user",{"_index":1094,"title":{},"body":{"controllers/UserController.html":{}}}],["controller(['health",{"_index":478,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(['super",{"_index":918,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convertboolean",{"_index":768,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["convertboolean(value",{"_index":771,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["core/core.module",{"_index":204,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["coremodule",{"_index":195,"title":{"modules/CoreModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["corsconfig",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":339,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["country",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["courses",{"_index":1308,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1142,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpu.model",{"_index":971,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpu.speed",{"_index":973,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpus",{"_index":936,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpus.map(cpu",{"_index":970,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["create",{"_index":1044,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":1095,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":1074,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto",{"_index":258,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credentials",{"_index":137,"title":{},"body":{"injectables/BasicAuthService.html":{},"miscellaneous/variables.html":{}}}],["currentstore",{"_index":390,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["currentstore[key",{"_index":391,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cursor",{"_index":333,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["data",{"_index":464,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["database",{"_index":251,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database/migrations/*.js",{"_index":1012,"title":{},"body":{"injectables/UmzugService.html":{}}}],["database_debug",{"_index":743,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":744,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":745,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":746,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":747,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_ssl",{"_index":748,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":749,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":750,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["databasedriver",{"_index":290,"title":{"classes/DatabaseDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["databasedriver(options.driveroptions",{"_index":681,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["databaseoptions",{"_index":237,"title":{"interfaces/DatabaseOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["datatype",{"_index":656,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["datatype.bigint",{"_index":661,"title":{},"body":{"classes/SuperCache.html":{}}}],["datatype.date",{"_index":864,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.dateonly",{"_index":1068,"title":{},"body":{"classes/User.html":{}}}],["datatype.enum('male",{"_index":1067,"title":{},"body":{"classes/User.html":{}}}],["datatype.float",{"_index":865,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.integer",{"_index":866,"title":{},"body":{"classes/SuperObserve.html":{},"classes/User.html":{}}}],["datatype.now",{"_index":867,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.string",{"_index":863,"title":{},"body":{"classes/SuperObserve.html":{},"classes/User.html":{}}}],["date",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":616,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["date.now",{"_index":375,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["datetime",{"_index":468,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/BasicAuthController.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"controllers/SuperServerController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":1304,"title":{},"body":{"index.html":{}}}],["default",{"_index":299,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["default_db",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":1061,"title":{},"body":{"classes/User.html":{}}}],["defaultsecret",{"_index":106,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{}}}],["defaultvalue",{"_index":858,"title":{},"body":{"classes/SuperObserve.html":{}}}],["defaultversion",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["del",{"_index":210,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["del(key",{"_index":214,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["delall",{"_index":211,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["delall(pattern",{"_index":217,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["delete",{"_index":376,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":1104,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@useperformance",{"_index":1083,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1260,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1275,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1268,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1285,"title":{},"body":{"index.html":{}}}],["description",{"_index":1238,"title":{},"body":{"index.html":{},"properties.html":{}}}],["detected",{"_index":592,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["development",{"_index":1248,"title":{},"body":{"index.html":{}}}],["developmentguard",{"_index":428,"title":{"guards/DevelopmentGuard.html":{}},"body":{"guards/DevelopmentGuard.html":{},"controllers/HealthController.html":{},"controllers/SuperServerController.html":{},"coverage.html":{}}}],["devtools",{"_index":1316,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":514,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["dialectoptions",{"_index":526,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":442,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["discord",{"_index":1301,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1303,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1143,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["down",{"_index":1021,"title":{},"body":{"injectables/UmzugService.html":{}}}],["driver",{"_index":248,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"miscellaneous/variables.html":{}}}],["driver_token",{"_index":672,"title":{},"body":{"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["driveroptions",{"_index":250,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["driverprovider",{"_index":675,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["dto",{"_index":26,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":142,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":1092,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":39,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["dto/update",{"_index":1093,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":885,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["dynamicmodule",{"_index":667,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["e12b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v3w4x5y6z7a8",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":1256,"title":{},"body":{"index.html":{}}}],["effectivettl",{"_index":325,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["efficient",{"_index":1234,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1266,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":640,"title":{},"body":{"controllers/RouteController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":124,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["emitter",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["enable_compression",{"_index":751,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_cors",{"_index":752,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_helmet",{"_index":753,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_shutdown_hooks",{"_index":754,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_under_pressure",{"_index":755,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_view",{"_index":756,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensure",{"_index":1264,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1320,"title":{},"body":{"index.html":{}}}],["entries",{"_index":410,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry",{"_index":372,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.destroy",{"_index":402,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.expiresat",{"_index":374,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.value",{"_index":378,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["env",{"_index":769,"title":{},"body":{"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["err",{"_index":365,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["error",{"_index":599,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["error(`migration",{"_index":1015,"title":{},"body":{"injectables/UmzugService.html":{}}}],["etc",{"_index":988,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["ex",{"_index":330,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["example",{"_index":1244,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":1063,"title":{},"body":{"classes/User.html":{}}}],["executeconfig",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["executeconfig(server",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["executed",{"_index":1032,"title":{},"body":{"injectables/UmzugService.html":{}}}],["executeserver",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["executeserver(server",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["executioncontext",{"_index":433,"title":{},"body":{"guards/DevelopmentGuard.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["existinguser",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["experience",{"_index":1306,"title":{},"body":{"index.html":{}}}],["expiresat",{"_index":246,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{}}}],["expiresin",{"_index":108,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["export",{"_index":47,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":77,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":65,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthStrategy.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["extractjwt",{"_index":161,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":167,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["extrasetoption",{"_index":302,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoption.ttl",{"_index":326,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoption?.ttl",{"_index":404,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoptions",{"_index":228,"title":{"interfaces/ExtraSetOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["extrasetoptions.ttl",{"_index":420,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["failed",{"_index":397,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["fallbackvalue",{"_index":562,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["false",{"_index":169,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1279,"title":{},"body":{"index.html":{}}}],["fastify",{"_index":188,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"dependencies.html":{}}}],["fastify/compress",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["fastify/cors",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["fastify/helmet",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["fastify/under",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["fastify/view",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["fastifycorsoptions",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyunderpressureoptions",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyviewoptions",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":1289,"title":{},"body":{"index.html":{}}}],["female",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["few",{"_index":1281,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filedriver",{"_index":355,"title":{"classes/FileDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["filedriver(options.driveroptions",{"_index":682,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["fileoptions",{"_index":235,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["filepath",{"_index":356,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["findall",{"_index":1071,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":1072,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":1099,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":1079,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstkey",{"_index":422,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["firstname",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["focus",{"_index":1288,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1324,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":436,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["forbiddenexception('this",{"_index":440,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["forbidnonwhitelisted",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidunknownvalues",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.interceptor.ts",{"_index":555,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["format.interceptor.ts:18",{"_index":574,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:20",{"_index":576,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:27",{"_index":565,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:32",{"_index":566,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:36",{"_index":563,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:45",{"_index":564,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:54",{"_index":570,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interface",{"_index":586,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interface.ts",{"_index":455,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["forroot",{"_index":664,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["forroot(options",{"_index":665,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["found",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["foundkeys",{"_index":336,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["framework",{"_index":1232,"title":{},"body":{"index.html":{}}}],["freememory",{"_index":935,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["fs",{"_index":309,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["fs.existssync(packagepath",{"_index":946,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["fs.readfile(this.filepath",{"_index":362,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["fs.writefile(this.filepath",{"_index":367,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["full",{"_index":1319,"title":{},"body":{"index.html":{}}}],["function",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["function.interface.ts",{"_index":179,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{}}}],["functions",{"_index":1224,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1284,"title":{},"body":{"index.html":{}}}],["gender",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["get('')@useguards(developmentguard",{"_index":473,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id",{"_index":1098,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id')@useperformance",{"_index":1080,"title":{},"body":{"controllers/UserController.html":{}}}],["get('test",{"_index":56,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["get('test')@useperformance()@useguards(basicauthguard",{"_index":29,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["get()@useperformance",{"_index":1077,"title":{},"body":{"controllers/UserController.html":{}}}],["get(key",{"_index":222,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["getall",{"_index":212,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["getall(pattern",{"_index":224,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["getapiservice",{"_index":556,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getapiversion",{"_index":557,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getconnectiontoken",{"_index":899,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["getdriver",{"_index":689,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getenv",{"_index":773,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["getexecuted",{"_index":995,"title":{},"body":{"injectables/UmzugService.html":{}}}],["getfallbackvalue",{"_index":575,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getmetrics",{"_index":914,"title":{},"body":{"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{}}}],["getorset",{"_index":690,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getorset(key",{"_index":700,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getpackagedata",{"_index":558,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getpending",{"_index":996,"title":{},"body":{"injectables/UmzugService.html":{}}}],["getstats",{"_index":691,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["gettimezone",{"_index":559,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getting",{"_index":1228,"title":{"index.html":{}},"body":{}}],["glob",{"_index":1010,"title":{},"body":{"injectables/UmzugService.html":{}}}],["global",{"_index":486,"title":{},"body":{"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{}}}],["graph",{"_index":1311,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1334,"title":{},"body":{"index.html":{}}}],["guard",{"_index":427,"title":{"guards/DevelopmentGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":429,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["hands",{"_index":1305,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1294,"title":{},"body":{"index.html":{}}}],["has(key",{"_index":703,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["hashedpassword",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["head",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headersettings",{"_index":606,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.clienttimezone",{"_index":626,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.clientversion",{"_index":624,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.withtemplate",{"_index":614,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettingsoptions",{"_index":453,"title":{"interfaces/HeaderSettingsOptions.html":{}},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["health.controller",{"_index":487,"title":{},"body":{"modules/HealthModule.html":{}}}],["health.service",{"_index":476,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["health/health.module",{"_index":545,"title":{},"body":{"modules/PluginModule.html":{}}}],["healthcheck",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthcheckinterval",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthcontroller",{"_index":470,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":482,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["healthservice",{"_index":475,"title":{"injectables/HealthService.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"coverage.html":{},"overview.html":{}}}],["heaptotal",{"_index":981,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["heapused",{"_index":980,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["hello",{"_index":641,"title":{},"body":{"controllers/RouteController.html":{}}}],["help",{"_index":1309,"title":{},"body":{"index.html":{}}}],["here",{"_index":1341,"title":{},"body":{"index.html":{}}}],["home",{"_index":636,"title":{},"body":{"controllers/RouteController.html":{}}}],["home'])@render('index",{"_index":631,"title":{},"body":{"controllers/RouteController.html":{}}}],["host",{"_index":231,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["hostname",{"_index":930,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["http://localhost:3000",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1347,"title":{},"body":{"index.html":{}}}],["id",{"_index":172,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":168,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["implements",{"_index":292,"title":{},"body":{"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('sequelize",{"_index":239,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["imports",{"_index":99,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1065,"title":{},"body":{"classes/User.html":{}}}],["includeviewextension",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":590,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"index.html":{}}}],["infra/infra.module",{"_index":203,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["inframodule",{"_index":196,"title":{"modules/InfraModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["infrastructure",{"_index":1291,"title":{},"body":{"index.html":{}}}],["inject",{"_index":101,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"miscellaneous/variables.html":{}}}],["inject('super_cache_driver",{"_index":706,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["injectable",{"_index":62,"title":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/HealthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"guards/DevelopmentGuard.html":{},"injectables/HealthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/HealthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":127,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["injectmodel(user",{"_index":128,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["install",{"_index":1283,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1246,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1312,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":560,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["intercept(context",{"_index":567,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["interceptorprovider",{"_index":903,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["interface",{"_index":175,"title":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":177,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"overview.html":{}}}],["interfaces/response",{"_index":585,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":597,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["invalid",{"_index":1016,"title":{},"body":{"injectables/UmzugService.html":{}}}],["ioredis",{"_index":310,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"dependencies.html":{}}}],["isdatestring",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isenum",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(['male",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ismatch",{"_index":138,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["isobserved",{"_index":879,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["isoptional",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["item",{"_index":383,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["item.expiresat",{"_index":387,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["item.value",{"_index":388,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["job",{"_index":1327,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1329,"title":{},"body":{"index.html":{}}}],["join",{"_index":584,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"index.html":{}}}],["join(__dirname",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join(process.cwd",{"_index":594,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["json",{"_index":327,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(content",{"_index":364,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(entry.value",{"_index":403,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(fs.readfilesync(packagepath",{"_index":948,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["json.parse(raw",{"_index":323,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(readfilesync(packagejsonpath",{"_index":596,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["json.parse(values[i",{"_index":348,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.stringify(executed",{"_index":1035,"title":{},"body":{"injectables/UmzugService.html":{}}}],["json.stringify(pendings",{"_index":1031,"title":{},"body":{"injectables/UmzugService.html":{}}}],["json.stringify(store",{"_index":368,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.stringify(value",{"_index":328,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["jwt",{"_index":164,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":166,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["jwtmodule",{"_index":86,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":100,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["jwtsecretconfigured",{"_index":939,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["jwtservice",{"_index":115,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["kamil",{"_index":1344,"title":{},"body":{"index.html":{}}}],["key",{"_index":216,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"index.html":{}}}],["keylist",{"_index":351,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keylist.length",{"_index":353,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys",{"_index":332,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["keys.foreach((key",{"_index":346,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys.length",{"_index":342,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys.push(...foundkeys",{"_index":341,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["lastname",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["layout",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["learn",{"_index":1297,"title":{},"body":{"index.html":{}}}],["legend",{"_index":73,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":1350,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1332,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1326,"title":{},"body":{"index.html":{}}}],["literal",{"_index":627,"title":{},"body":{"interfaces/ResponseFormatResponse.html":{},"injectables/SuperServerService.html":{},"miscellaneous/typealiases.html":{}}}],["loadaverage",{"_index":933,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["local",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local').touppercase",{"_index":438,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["localhost",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":892,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["loggedat",{"_index":853,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["logger",{"_index":182,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{}}}],["logger(responseformatinterceptor.name",{"_index":573,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["logger(superobserveinterceptor.name",{"_index":874,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["logger(superobservemodule.name",{"_index":902,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["logger(superserverservice.name",{"_index":941,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["logger(umzugservice.name",{"_index":1005,"title":{},"body":{"injectables/UmzugService.html":{}}}],["logging",{"_index":522,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":13,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["login(@body",{"_index":53,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["login(dto",{"_index":15,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["logindto",{"_index":16,"title":{"classes/LoginDto.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["looking",{"_index":1270,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1322,"title":{},"body":{"index.html":{}}}],["mailer",{"_index":825,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["mailer_host",{"_index":757,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_password",{"_index":758,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_port",{"_index":759,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_secure",{"_index":760,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_username",{"_index":761,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["maintenance",{"_index":707,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["makes",{"_index":1277,"title":{},"body":{"index.html":{}}}],["management",{"_index":716,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["managing",{"_index":1290,"title":{},"body":{"index.html":{}}}],["map",{"_index":415,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["map((data",{"_index":613,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["match",{"_index":338,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["matching",{"_index":61,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1273,"title":{},"body":{"index.html":{}}}],["maxeventloopdelay",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxheapusedbytes",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxrssbytes",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":244,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{}}}],["memory",{"_index":252,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{}}}],["memorydriver",{"_index":414,"title":{"classes/MemoryDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["memorydriver(options.driveroptions",{"_index":683,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["memoryoptions",{"_index":243,"title":{"interfaces/MemoryOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["memoryusage",{"_index":978,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["message",{"_index":58,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/HealthService.html":{},"controllers/RouteController.html":{}}}],["metadata",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":463,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["methods",{"_index":11,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":919,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["migration",{"_index":1017,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migration.down(context.queryinterface",{"_index":1022,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migration.up(context.queryinterface",{"_index":1020,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migrationpath",{"_index":1014,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migrations",{"_index":1009,"title":{},"body":{"injectables/UmzugService.html":{}}}],["min",{"_index":966,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["miscellaneous",{"_index":1223,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1331,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1251,"title":{},"body":{"index.html":{}}}],["model",{"_index":654,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"injectables/SuperServerService.html":{},"classes/User.html":{}}}],["models",{"_index":530,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":69,"title":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module_loader",{"_index":206,"title":{},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":71,"title":{"modules.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1269,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1345,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1317,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1239,"title":{},"body":{"index.html":{}}}],["nestfastifyapplication",{"_index":184,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{}}}],["nestframework",{"_index":1349,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":577,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["nestjs",{"_index":639,"title":{},"body":{"controllers/RouteController.html":{},"index.html":{}}}],["nestjs/common",{"_index":35,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"guards/DevelopmentGuard.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":91,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":875,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":87,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1042,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":68,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":187,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":94,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":954,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["networkinterfaces",{"_index":937,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["new",{"_index":135,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":568,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["next.handle",{"_index":882,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["next.handle().pipe",{"_index":612,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["nextcursor",{"_index":335,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["no_client_info",{"_index":591,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["no_server_info",{"_index":587,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["node",{"_index":985,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["node.js",{"_index":1231,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":938,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["notfoundexception",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1245,"title":{},"body":{"index.html":{}}}],["null",{"_index":321,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["number",{"_index":233,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object.entries(store",{"_index":384,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["object.keys(items",{"_index":715,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["object.keys(items).length",{"_index":714,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["object.keys(keys",{"_index":352,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["object.keys(store",{"_index":389,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["observable",{"_index":572,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["observe.decorator",{"_index":45,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/UserController.html":{}}}],["observe.decorator.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observe.interceptor",{"_index":900,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.interceptor.ts",{"_index":869,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"coverage.html":{}}}],["observe.interceptor.ts:16",{"_index":872,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["observe.interceptor.ts:20",{"_index":873,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["observe.model",{"_index":877,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["observe.model.ts",{"_index":849,"title":{},"body":{"classes/SuperObserve.html":{},"coverage.html":{}}}],["observe.model.ts:12",{"_index":856,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:15",{"_index":855,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:18",{"_index":857,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:21",{"_index":860,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:24",{"_index":859,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:9",{"_index":861,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.module",{"_index":508,"title":{},"body":{"modules/InfraModule.html":{}}}],["observe.module.ts",{"_index":894,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.module.ts:14",{"_index":895,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.module.ts:29",{"_index":897,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe/super",{"_index":44,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/InfraModule.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":1328,"title":{},"body":{"index.html":{}}}],["official",{"_index":1274,"title":{},"body":{"index.html":{}}}],["ok",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":896,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["op",{"_index":306,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["op.in",{"_index":413,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["op.like",{"_index":409,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["open",{"_index":1333,"title":{},"body":{"index.html":{}}}],["openssl",{"_index":987,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":295,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{}}}],["options.autosync",{"_index":394,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.driver",{"_index":678,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["options.host",{"_index":314,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.maxsize",{"_index":417,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.password",{"_index":316,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.port",{"_index":315,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.sequelize.addmodels([supercache",{"_index":393,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.ttl",{"_index":318,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["origin",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os",{"_index":943,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.arch",{"_index":960,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.cpus",{"_index":953,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.freemem",{"_index":969,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.hostname",{"_index":958,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.loadavg",{"_index":963,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.networkinterfaces",{"_index":955,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.platform",{"_index":959,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.totalmem",{"_index":968,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.uptime",{"_index":961,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1355,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1179,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":595,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["packagejson",{"_index":927,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["packagejsonpath",{"_index":593,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["packagepath",{"_index":944,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["param",{"_index":1088,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":1102,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":1089,"title":{},"body":{"controllers/UserController.html":{}}}],["part",{"_index":1318,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1041,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":1040,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":163,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":88,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["passportstrategy",{"_index":160,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["passportstrategy(strategy",{"_index":154,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["password",{"_index":122,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":236,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["path.join(process.cwd",{"_index":1011,"title":{},"body":{"injectables/UmzugService.html":{}}}],["path.resolve(__dirname",{"_index":945,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["path.resolve(options.path",{"_index":358,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["pattern",{"_index":220,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["pattern.replace(/\\*/g",{"_index":382,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["payload",{"_index":143,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{}}}],["payload.email",{"_index":174,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["payload.sub",{"_index":173,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["pendings",{"_index":1028,"title":{},"body":{"injectables/UmzugService.html":{}}}],["performance",{"_index":893,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["pg",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["pgpattern",{"_index":407,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["pid",{"_index":976,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["ping",{"_index":479,"title":{},"body":{"controllers/HealthController.html":{}}}],["plain",{"_index":151,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":931,"title":{},"body":{"injectables/SuperServerService.html":{},"index.html":{}}}],["please",{"_index":1300,"title":{},"body":{"index.html":{}}}],["pluginmodule",{"_index":197,"title":{"modules/PluginModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["plugins/plugin.module",{"_index":202,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["port",{"_index":232,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperServerService.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1267,"title":{},"body":{"index.html":{}}}],["post",{"_index":33,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["post('login",{"_index":52,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["post('login')@useperformance",{"_index":19,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["post()@useperformance",{"_index":1075,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":515,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":8,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["pressure",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["pressure.config.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["primarykey",{"_index":655,"title":{},"body":{"classes/SuperCache.html":{},"classes/User.html":{}}}],["primarykey()@column",{"_index":649,"title":{},"body":{"classes/SuperCache.html":{}}}],["private",{"_index":129,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":940,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.env.app_env",{"_index":437,"title":{},"body":{"guards/DevelopmentGuard.html":{},"injectables/SuperServerService.html":{}}}],["process.env.app_port",{"_index":974,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.env.app_secret",{"_index":975,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.memoryusage",{"_index":979,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.pid",{"_index":977,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.uptime",{"_index":623,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["process.versions",{"_index":984,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["production",{"_index":439,"title":{},"body":{"guards/DevelopmentGuard.html":{},"index.html":{}}}],["progressive",{"_index":1230,"title":{},"body":{"index.html":{}}}],["project",{"_index":1242,"title":{},"body":{"index.html":{}}}],["promise",{"_index":119,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promises",{"_index":308,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["properties",{"_index":180,"title":{"properties.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":676,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["provider",{"_index":668,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":1090,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["put(':id",{"_index":1101,"title":{},"body":{"controllers/UserController.html":{}}}],["put(':id')@useperformance",{"_index":1086,"title":{},"body":{"controllers/UserController.html":{}}}],["queryinterface",{"_index":1023,"title":{},"body":{"injectables/UmzugService.html":{}}}],["questions",{"_index":1298,"title":{},"body":{"index.html":{}}}],["raw",{"_index":319,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["read",{"_index":1340,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":583,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["reading",{"_index":601,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["readonly",{"_index":50,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"controllers/HealthController.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{}}}],["readstore",{"_index":360,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["ready",{"_index":492,"title":{},"body":{"injectables/HealthService.html":{},"index.html":{}}}],["real",{"_index":1313,"title":{},"body":{"index.html":{}}}],["record",{"_index":345,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["redis",{"_index":249,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperConfigService.html":{}}}],["redis_host",{"_index":762,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_password",{"_index":763,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":764,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_ttl",{"_index":765,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_username",{"_index":766,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redisdriver",{"_index":311,"title":{"classes/RedisDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["redisdriver(options.driveroptions",{"_index":680,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["redisoptions",{"_index":230,"title":{"interfaces/RedisOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["reflect",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":871,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["regex",{"_index":380,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["regex.test(key",{"_index":385,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["regexp",{"_index":381,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["rejectunauthorized",{"_index":529,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":1073,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":1105,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":1082,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["render",{"_index":634,"title":{},"body":{"controllers/RouteController.html":{}}}],["render('index",{"_index":637,"title":{},"body":{"controllers/RouteController.html":{}}}],["repository",{"_index":1241,"title":{},"body":{"index.html":{}}}],["req",{"_index":883,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["req.url",{"_index":884,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["request",{"_index":604,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['no",{"_index":609,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['response",{"_index":607,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['x",{"_index":611,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.method",{"_index":617,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.url",{"_index":618,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["require",{"_index":528,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["require('ejs",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require(migrationpath",{"_index":1018,"title":{},"body":{"injectables/UmzugService.html":{}}}],["requiring",{"_index":1280,"title":{},"body":{"index.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve",{"_index":1013,"title":{},"body":{"injectables/UmzugService.html":{}}}],["resource",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":1292,"title":{},"body":{"index.html":{}}}],["response",{"_index":610,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["responseformatinterceptor",{"_index":553,"title":{"injectables/ResponseFormatInterceptor.html":{}},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["responseformatresponse",{"_index":459,"title":{"interfaces/ResponseFormatResponse.html":{}},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["responsestatus",{"_index":854,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["result",{"_index":149,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/UserService.html":{}}}],["result[entry.key",{"_index":412,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["result[key",{"_index":347,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["results",{"_index":60,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":589,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":997,"title":{},"body":{"injectables/UmzugService.html":{}}}],["root",{"_index":630,"title":{},"body":{"controllers/RouteController.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":441,"title":{},"body":{"guards/DevelopmentGuard.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["route.controller",{"_index":644,"title":{},"body":{"modules/RouteModule.html":{}}}],["routecontroller",{"_index":628,"title":{"controllers/RouteController.html":{}},"body":{"controllers/RouteController.html":{},"modules/RouteModule.html":{},"coverage.html":{}}}],["routemodule",{"_index":198,"title":{"modules/RouteModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RouteModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rss",{"_index":982,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["run",{"_index":1247,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1265,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":578,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":579,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["scalable",{"_index":1235,"title":{},"body":{"index.html":{}}}],["scopes",{"_index":1060,"title":{},"body":{"classes/User.html":{}}}],["seconds",{"_index":962,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["secret",{"_index":104,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["secretorkey",{"_index":170,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["sequelize",{"_index":238,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":93,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{}}}],["sequelizemodule.forfeature([superobserve",{"_index":905,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":110,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/UserModule.html":{}}}],["sequelizemodule.forrootasync",{"_index":513,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["sequelizemoduleoptions",{"_index":898,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["sequelizestorage",{"_index":1007,"title":{},"body":{"injectables/UmzugService.html":{}}}],["server",{"_index":491,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["server.controller",{"_index":925,"title":{},"body":{"modules/SuperServerModule.html":{}}}],["server.controller.ts",{"_index":913,"title":{},"body":{"controllers/SuperServerController.html":{},"coverage.html":{}}}],["server.controller.ts:11",{"_index":915,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["server.module",{"_index":502,"title":{},"body":{"modules/InfraModule.html":{}}}],["server.module.ts",{"_index":924,"title":{},"body":{"modules/SuperServerModule.html":{}}}],["server.service",{"_index":917,"title":{},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{}}}],["server.service.ts",{"_index":926,"title":{},"body":{"injectables/SuperServerService.html":{},"coverage.html":{}}}],["server.service.ts:10",{"_index":928,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server.service.ts:21",{"_index":929,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server.service.ts:8",{"_index":942,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server/super",{"_index":501,"title":{},"body":{"modules/InfraModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"coverage.html":{}}}],["service",{"_index":466,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["set",{"_index":213,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["set(key",{"_index":226,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["setmetadata(super_observe_key",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1243,"title":{},"body":{"index.html":{}}}],["side",{"_index":1236,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":107,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["simple",{"_index":1282,"title":{},"body":{"index.html":{}}}],["size",{"_index":712,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["smtp.example.com",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["speed",{"_index":972,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["sponsors",{"_index":1336,"title":{},"body":{"index.html":{}}}],["src/.../bootstrap.module.ts",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.ts",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../infra.module.ts",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../plugin.module.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../super",{"_index":1362,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../under",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validation.config.ts",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../version.config.ts",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.config.ts",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/basic",{"_index":6,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":531,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:5",{"_index":532,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":533,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/bootstrap.module.ts",{"_index":199,"title":{},"body":{"modules/BootstrapModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":255,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/user/dto/create",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/core/user/dto/update",{"_index":1039,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/core/user/user.controller.ts",{"_index":1070,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/core/user/user.controller.ts:22",{"_index":1076,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:28",{"_index":1078,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:34",{"_index":1081,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:40",{"_index":1087,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:49",{"_index":1084,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.model",{"_index":96,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{}}}],["src/core/user/user.model.ts",{"_index":1046,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/core/user/user.model.ts:18",{"_index":1057,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:21",{"_index":1054,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:24",{"_index":1058,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:27",{"_index":1055,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:30",{"_index":1049,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:33",{"_index":1047,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:36",{"_index":1048,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:39",{"_index":1050,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:42",{"_index":1051,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:45",{"_index":1053,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:48",{"_index":1059,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.module.ts",{"_index":1110,"title":{},"body":{"modules/UserModule.html":{}}}],["src/core/user/user.service",{"_index":97,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["src/core/user/user.service.ts",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/core/user/user.service.ts:15",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:31",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:35",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:41",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:45",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:54",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:9",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["src/infra/infra.module.ts",{"_index":495,"title":{},"body":{"modules/InfraModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infra/super",{"_index":43,"title":{},"body":{"controllers/BasicAuthController.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infra/umzug/umzug.module.ts",{"_index":992,"title":{},"body":{"modules/UmzugModule.html":{}}}],["src/infra/umzug/umzug.service",{"_index":191,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{}}}],["src/infra/umzug/umzug.service.ts",{"_index":994,"title":{},"body":{"injectables/UmzugService.html":{},"coverage.html":{}}}],["src/infra/umzug/umzug.service.ts:35",{"_index":1002,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:41",{"_index":1001,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:47",{"_index":1004,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:51",{"_index":1003,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:8",{"_index":1006,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:9",{"_index":1000,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/main.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/plugins/health/health.controller.ts",{"_index":471,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/plugins/health/health.controller.ts:11",{"_index":474,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/plugins/health/health.module.ts",{"_index":485,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/plugins/health/health.service.ts",{"_index":488,"title":{},"body":{"injectables/HealthService.html":{},"coverage.html":{}}}],["src/plugins/health/health.service.ts:4",{"_index":489,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/plugins/health/health.service.ts:7",{"_index":490,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/plugins/plugin.module.ts",{"_index":544,"title":{},"body":{"modules/PluginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/cors.config.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/under",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/validation.config.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/version.config.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/view.config.ts",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/guards/development.guard",{"_index":477,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["src/shared/guards/development.guard.ts",{"_index":430,"title":{},"body":{"guards/DevelopmentGuard.html":{},"coverage.html":{}}}],["src/shared/guards/development.guard.ts:5",{"_index":434,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["src/shared/interceptors/response",{"_index":554,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["src/shared/interfaces/bootstrap",{"_index":178,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{}}}],["src/shared/interfaces/response",{"_index":454,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["src/views/route.controller.ts",{"_index":629,"title":{},"body":{"controllers/RouteController.html":{},"coverage.html":{}}}],["src/views/route.controller.ts:7",{"_index":632,"title":{},"body":{"controllers/RouteController.html":{}}}],["src/views/route.module.ts",{"_index":643,"title":{},"body":{"modules/RouteModule.html":{}}}],["ssl",{"_index":527,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1249,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1252,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1253,"title":{},"body":{"index.html":{}}}],["started",{"_index":1229,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1240,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":663,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["status",{"_index":888,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":461,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["stay",{"_index":1321,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1262,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1025,"title":{},"body":{"injectables/UmzugService.html":{}}}],["storage/cache.json",{"_index":511,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":370,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["store[key",{"_index":373,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["straightforward",{"_index":1278,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":162,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["string",{"_index":121,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":144,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["successful",{"_index":59,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["successfully",{"_index":911,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["super",{"_index":165,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{}}}],["super_cache_${options.driver.touppercase()}_driver",{"_index":685,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["super_cache_driver",{"_index":673,"title":{},"body":{"modules/SuperCacheModule.html":{},"miscellaneous/variables.html":{}}}],["super_cache_driver::${options.driver.touppercase",{"_index":674,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["super_observe_key",{"_index":876,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["supercache",{"_index":304,"title":{"classes/SuperCache.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"coverage.html":{}}}],["supercache.destroy",{"_index":406,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.findall",{"_index":411,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.findbypk(key",{"_index":401,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.sync().catch(err",{"_index":395,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.upsert",{"_index":405,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercachemodule",{"_index":505,"title":{"modules/SuperCacheModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"modules.html":{}}}],["supercachemodule.forroot",{"_index":510,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["supercachemoduleoptions",{"_index":247,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["supercacheservice",{"_index":670,"title":{"injectables/SuperCacheService.html":{}},"body":{"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["supercacheservice(driver",{"_index":686,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["superconfigdefaults",{"_index":775,"title":{},"body":{"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["superconfigdefaults.app_client_url",{"_index":794,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_debug",{"_index":788,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_env",{"_index":782,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_host",{"_index":784,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_name",{"_index":780,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_port",{"_index":786,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_secret",{"_index":790,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_timezone",{"_index":792,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.auth_lifetime",{"_index":796,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.auth_saltround",{"_index":798,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_debug",{"_index":814,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_host",{"_index":802,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_name",{"_index":806,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_password",{"_index":810,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_port",{"_index":804,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_ssl",{"_index":812,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_type",{"_index":800,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_username",{"_index":808,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_compression",{"_index":841,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_cors",{"_index":839,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_helmet",{"_index":837,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_shutdown_hooks",{"_index":845,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_under_pressure",{"_index":843,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_view",{"_index":847,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_host",{"_index":827,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_password",{"_index":833,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_port",{"_index":829,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_secure",{"_index":835,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_username",{"_index":831,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_host",{"_index":816,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_password",{"_index":822,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_port",{"_index":818,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_ttl",{"_index":824,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_username",{"_index":820,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigmodule",{"_index":496,"title":{"modules/SuperConfigModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superconfigoptions",{"_index":185,"title":{"interfaces/SuperConfigOptions.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["superconfigservice",{"_index":498,"title":{"injectables/SuperConfigService.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superobserve",{"_index":848,"title":{"classes/SuperObserve.html":{}},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"coverage.html":{}}}],["superobserve.create",{"_index":889,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["superobserveinterceptor",{"_index":868,"title":{"injectables/SuperObserveInterceptor.html":{}},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"coverage.html":{}}}],["superobserveinterceptor(reflector",{"_index":904,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["superobservemodule",{"_index":507,"title":{"modules/SuperObserveModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules.html":{}}}],["superobservemodule.forroot",{"_index":509,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["superservercontroller",{"_index":912,"title":{"controllers/SuperServerController.html":{}},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"coverage.html":{}}}],["superservermodule",{"_index":500,"title":{"modules/SuperServerModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperServerModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superserverservice",{"_index":916,"title":{"injectables/SuperServerService.html":{}},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"coverage.html":{},"overview.html":{}}}],["support",{"_index":1299,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1352,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":677,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["sync",{"_index":398,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperObserveModule.html":{}}}],["synced",{"_index":910,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["synchronize",{"_index":525,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":219,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["table",{"_index":400,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablename",{"_index":658,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1263,"title":{},"body":{"index.html":{}}}],["tap",{"_index":878,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["template",{"_index":608,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["test",{"_index":14,"title":{},"body":{"controllers/BasicAuthController.html":{},"index.html":{}}}],["test:covdeployment",{"_index":1258,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1257,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1254,"title":{},"body":{"index.html":{}}}],["text",{"_index":651,"title":{},"body":{"classes/SuperCache.html":{}}}],["thanks",{"_index":1335,"title":{},"body":{"index.html":{}}}],["this.authservice.login(dto",{"_index":55,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["this.client",{"_index":313,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.del(...keylist",{"_index":354,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.del(key",{"_index":331,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.get(key",{"_index":320,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.mget(...keys",{"_index":344,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.scan(cursor",{"_index":337,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.set(key",{"_index":329,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.configservice.get('app_client_url",{"_index":793,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_env",{"_index":781,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_host",{"_index":783,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_name",{"_index":779,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_port",{"_index":785,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_secret",{"_index":789,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_timezone",{"_index":791,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('auth_lifetime",{"_index":795,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('auth_saltround",{"_index":797,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_host",{"_index":801,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_name",{"_index":805,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_password",{"_index":809,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_port",{"_index":803,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_type",{"_index":799,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_username",{"_index":807,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_host",{"_index":826,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_password",{"_index":832,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_port",{"_index":828,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_username",{"_index":830,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_host",{"_index":815,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_password",{"_index":821,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_port",{"_index":817,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_ttl",{"_index":823,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_username",{"_index":819,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('app_debug",{"_index":787,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('database_debug",{"_index":813,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('database_ssl",{"_index":811,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_compression",{"_index":840,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_cors",{"_index":838,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_helmet",{"_index":836,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_shutdown_hooks",{"_index":844,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_under_pressure",{"_index":842,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_view",{"_index":846,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('mailer_secure",{"_index":834,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.driver",{"_index":709,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.constructor.name",{"_index":710,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.del(key",{"_index":719,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.delall",{"_index":708,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.delall(pattern",{"_index":726,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.get(key",{"_index":717,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.getall().then(items",{"_index":713,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.getall(pattern",{"_index":725,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.set(key",{"_index":718,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver['options",{"_index":711,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.fallbackvalue.no_client_info",{"_index":625,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.fallbackvalue.no_server_info",{"_index":602,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.filepath",{"_index":357,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.findone(id",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["this.get(key",{"_index":722,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.getall(pattern",{"_index":350,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.getapiservice",{"_index":619,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getapiversion",{"_index":620,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getpackagedata().name",{"_index":598,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getpackagedata().version",{"_index":603,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.gettimezone",{"_index":621,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.healthservice.check",{"_index":481,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":148,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.logger.debug('fetching",{"_index":952,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.logger.error('error",{"_index":600,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.logger.error('failed",{"_index":891,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["this.logger.log('superobserve",{"_index":909,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.logger.log(`executed",{"_index":1034,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.logger.log(`pending",{"_index":1030,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.maxsize",{"_index":416,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.packagejson",{"_index":947,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.packagejson.name",{"_index":956,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.packagejson.version",{"_index":957,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.readstore",{"_index":371,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.reflector.get",{"_index":880,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["this.sequelize",{"_index":1026,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.sequelize.addmodels([superobserve",{"_index":906,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.sequelize.getqueryinterface",{"_index":1024,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.sequelize.sync",{"_index":907,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.set(key",{"_index":723,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.store.delete(firstkey",{"_index":424,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.delete(key",{"_index":419,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.entries",{"_index":426,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.get(key",{"_index":418,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.keys().next().value",{"_index":423,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.set(key",{"_index":425,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.size",{"_index":421,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.superserverservice.getmetrics",{"_index":920,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["this.ttl",{"_index":317,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.umzug",{"_index":1008,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.down",{"_index":1037,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.executed",{"_index":1033,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.pending",{"_index":1029,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.up",{"_index":1036,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.usermodel.create",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findall",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbypk(id",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.scope('withpassword').findone",{"_index":133,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.userservice.create(dto",{"_index":1096,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1097,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":1100,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":1106,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":1103,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser(dto.email",{"_index":141,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.writestore(currentstore",{"_index":392,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.writestore(store",{"_index":377,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["throw",{"_index":134,"title":{},"body":{"injectables/BasicAuthService.html":{},"guards/DevelopmentGuard.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":1314,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":462,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["timestamps",{"_index":660,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{}}}],["timezone",{"_index":469,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["title",{"_index":633,"title":{},"body":{"controllers/RouteController.html":{}}}],["totalmemory",{"_index":934,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["touch",{"_index":1342,"title":{},"body":{"index.html":{}}}],["traceid",{"_index":460,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["transform",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":152,"title":{},"body":{"injectables/BasicAuthService.html":{},"guards/DevelopmentGuard.html":{},"modules/InfraModule.html":{},"classes/SuperCache.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":322,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["ttl",{"_index":234,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1348,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1360,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":130,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["types",{"_index":1043,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":657,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["typescript').sequelize",{"_index":240,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["umzug",{"_index":183,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/UmzugService.html":{},"dependencies.html":{}}}],["umzug.service",{"_index":993,"title":{},"body":{"modules/UmzugModule.html":{}}}],["umzug/umzug.module",{"_index":504,"title":{},"body":{"modules/InfraModule.html":{}}}],["umzugmodule",{"_index":503,"title":{"modules/UmzugModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/UmzugModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["umzugservice",{"_index":186,"title":{"injectables/UmzugService.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"coverage.html":{},"overview.html":{}}}],["unable",{"_index":588,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["unauthorizedexception",{"_index":125,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":136,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["underpressureconfig",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":1052,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1255,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":28,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{}}}],["unlicensed",{"_index":1359,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1019,"title":{},"body":{"injectables/UmzugService.html":{}}}],["update",{"_index":998,"title":{},"body":{"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1085,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":1323,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":1038,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uptime",{"_index":622,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["usefactory",{"_index":102,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":34,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["useguards(basicauthguard",{"_index":57,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["useguards(developmentguard",{"_index":480,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["useperformance",{"_index":42,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":95,"title":{"classes/User.html":{}},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1111,"title":{},"body":{"modules/UserModule.html":{}}}],["user.destroy",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":1045,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":146,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.get",{"_index":150,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":145,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.model",{"_index":1112,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":140,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.service",{"_index":1091,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.update(dto",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.module",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{}}}],["user@example.com",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1069,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":117,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":256,"title":{"modules/UserModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":518,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":1066,"title":{},"body":{"classes/User.html":{}}}],["userservice",{"_index":81,"title":{"injectables/UserService.html":{}},"body":{"modules/BasicAuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1315,"title":{},"body":{"index.html":{}}}],["utc",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utf",{"_index":949,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["utf8",{"_index":363,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["uuid",{"_index":582,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["uuidv4",{"_index":581,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["v4",{"_index":580,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["v8",{"_index":986,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["validate",{"_index":155,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["validate(payload",{"_index":158,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["validateuser",{"_index":112,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["validateuser(email",{"_index":120,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["validationpipeconfig",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipeoptions",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":227,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":343,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["values[i",{"_index":349,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["variable",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":778,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":467,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"injectables/SuperServerService.html":{},"properties.html":{}}}],["version_neutral",{"_index":635,"title":{},"body":{"controllers/RouteController.html":{}}}],["versionconfig",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versioningoptions",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":983,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["video",{"_index":1307,"title":{},"body":{"index.html":{}}}],["viewconfig",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["views/route.module",{"_index":205,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["visit",{"_index":1296,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1310,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1250,"title":{},"body":{"index.html":{}}}],["website",{"_index":1346,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":638,"title":{},"body":{"controllers/RouteController.html":{}}}],["where.key",{"_index":408,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["whitelist",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withpassword",{"_index":1064,"title":{},"body":{"classes/User.html":{}}}],["withtemplate",{"_index":458,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["working",{"_index":1295,"title":{},"body":{"index.html":{}}}],["world",{"_index":642,"title":{},"body":{"controllers/RouteController.html":{}}}],["writestore",{"_index":443,"title":{},"body":{"classes/FileDriver.html":{}}}],["writestore(store",{"_index":366,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["x",{"_index":1325,"title":{},"body":{"index.html":{}}}],["xstoreditem",{"_index":245,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["yes",{"_index":221,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"injectables/SuperCacheService.html":{}}}],["you'd",{"_index":1339,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1259,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/BasicAuthController.html":{"url":"controllers/BasicAuthController.html","title":"controller - BasicAuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BasicAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/basic-auth.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')@UsePerformance()@UseGuards(BasicAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/basic-auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { BasicAuthService } from './basic-auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { BasicAuthGuard } from './basic-auth.guard';\nimport { UsePerformance } from 'src/infra/super-observe/super-observe.decorator';\n\n@Controller('auth')\nexport class BasicAuthController {\n    constructor(private readonly authService: BasicAuthService) { }\n\n    @Post('login')\n    @UsePerformance()\n    async login(@Body() dto: LoginDto) {\n        return this.authService.login(dto);\n    }\n\n    @Get('test')\n\n    @UsePerformance()\n    @UseGuards(BasicAuthGuard)\n    async test() {\n        return { message: 'Test successful' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthGuard.html":{"url":"injectables/BasicAuthGuard.html","title":"injectable - BasicAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('basic-auth')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class BasicAuthGuard extends AuthGuard('basic-auth') { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BasicAuthModule.html":{"url":"modules/BasicAuthModule.html","title":"module - BasicAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    BasicAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicAuthModule\n\n\n\ncluster_BasicAuthModule_providers\n\n\n\n\nBasicAuthService\n\nBasicAuthService\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\nBasicAuthModule -->\n\nBasicAuthService->BasicAuthModule\n\n\n\n\n\nBasicAuthStrategy\n\nBasicAuthStrategy\n\nBasicAuthModule -->\n\nBasicAuthStrategy->BasicAuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nBasicAuthModule -->\n\nUserService->BasicAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/basic-auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BasicAuthService\n                        \n                        \n                            BasicAuthStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BasicAuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BasicAuthService } from './basic-auth.service';\nimport { BasicAuthController } from './basic-auth.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from 'src/core/user/user.model';\nimport { UserService } from 'src/core/user/user.service';\nimport { BasicAuthStrategy } from './basic-auth.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.get('APP_SECRET') || 'defaultSecret',\n        signOptions: { expiresIn: '1h' },\n      }),\n    }),\n    SequelizeModule.forFeature([User]),\n  ],\n  controllers: [BasicAuthController],\n  providers: [BasicAuthService, UserService, BasicAuthStrategy],\n})\nexport class BasicAuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthService.html":{"url":"injectables/BasicAuthService.html","title":"injectable - BasicAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/basic-auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from 'src/core/user/user.model';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class BasicAuthService {\n    constructor(\n        @InjectModel(User)\n        private readonly userModel: typeof User,\n        private readonly jwtService: JwtService,\n    ) { }\n\n    async validateUser(email: string, password: string): Promise {\n        const user = await this.userModel.scope('withPassword').findOne({ where: { email } });\n        if (!user) throw new UnauthorizedException('Invalid credentials');\n\n        const isMatch = await bcrypt.compare(password, user.password);\n        if (!isMatch) throw new UnauthorizedException('Invalid credentials');\n\n        return user;\n    }\n\n    async login(dto: LoginDto): Promise {\n        const user = await this.validateUser(dto.email, dto.password);\n\n        const payload = { sub: user.id, email: user.email };\n        const accessToken = this.jwtService.sign(payload);\n\n        const { password, ...result } = user.get({ plain: true });\n        return { accessToken, user: result };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthStrategy.html":{"url":"injectables/BasicAuthStrategy.html","title":"injectable - BasicAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'basic-auth')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/basic-auth.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class BasicAuthStrategy extends PassportStrategy(Strategy, 'basic-auth') {\n    constructor(configService: ConfigService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get('APP_SECRET') || 'defaultSecret',\n        });\n    }\n\n    async validate(payload: any) {\n        return { id: payload.sub, email: payload.email };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BootstrapFunctionArgs.html":{"url":"interfaces/BootstrapFunctionArgs.html","title":"interface - BootstrapFunctionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BootstrapFunctionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/bootstrap-function.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                                \n                                        \n                                            umzug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app:     NestFastifyApplication\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NestFastifyApplication\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         SuperConfigOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SuperConfigOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:     Logger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Logger\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        umzug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        umzug:         UmzugService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UmzugService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { NestFastifyApplication } from \"@nestjs/platform-fastify\";\nimport { SuperConfigOptions } from \"src/infra/super-config/super-config.interface\";\nimport { UmzugService } from \"src/infra/umzug/umzug.service\";\n\nexport interface BootstrapFunctionArgs {\n    app: NestFastifyApplication;\n    config?: SuperConfigOptions;\n    logger: Logger;\n    umzug: UmzugService\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BootstrapModule.html":{"url":"modules/BootstrapModule.html","title":"module - BootstrapModule","body":"\n                   \n\n\n\n\n    Modules\n    BootstrapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BootstrapModule\n\n\n\ncluster_BootstrapModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nBootstrapModule\n\nBootstrapModule\n\nBootstrapModule -->\n\nBasicAuthModule->BootstrapModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nBootstrapModule -->\n\nCoreModule->BootstrapModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nBootstrapModule -->\n\nInfraModule->BootstrapModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nBootstrapModule -->\n\nPluginModule->BootstrapModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nBootstrapModule -->\n\nRouteModule->BootstrapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bootstrap.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BasicAuthModule } from './auth/basic-auth.module';\nimport { PluginModule } from './plugins/plugin.module';\nimport { InfraModule } from './infra/infra.module';\nimport { CoreModule } from './core/core.module';\nimport { RouteModule } from './views/route.module';\n\nconst MODULE_LOADER = [\n  BasicAuthModule,\n  InfraModule,\n  CoreModule,\n  PluginModule,\n  RouteModule\n]\n\n@Module({\n  imports: MODULE_LOADER,\n})\nexport class BootstrapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheDriver.html":{"url":"interfaces/CacheDriver.html","title":"interface - CacheDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        del\n                                    \n                                \n                                \n                                    \n                                        delAll\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        set\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        del\n                        \n                    \n                \n            \n            \n                \ndel(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delAll\n                        \n                    \n                \n            \n            \n                \ndelAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: T, ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ExtraSetOptions\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nBasicAuthModule->CoreModule\n\n\n\nCoreModule -->\n\nCoreModule->CoreModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nCoreModule -->\n\nInfraModule->CoreModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nCoreModule -->\n\nPluginModule->CoreModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nCoreModule -->\n\nRouteModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\n\nconst MODULE_LOADER = [\n    UserModule\n]\n\n@Module({\n    imports: MODULE_LOADER,\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address1\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['male', 'female', 'other'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, IsEnum, IsDateString, IsOptional } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString() firstName: string;\n    @IsString() lastName: string;\n\n    @IsEnum(['male', 'female', 'other'])\n    gender: string;\n\n    @IsDateString()\n    birthday: Date;\n\n    @IsString()\n    address1: string;\n\n    @IsOptional()\n    @IsString()\n    address2?: string;\n\n    @IsString()\n    city: string;\n\n    @IsString()\n    country: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseDriver.html":{"url":"classes/DatabaseDriver.html","title":"class - DatabaseDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:163\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:163\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:227\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '%'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:174\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:205\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '%'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOption?: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:188\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOption\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseOptions.html":{"url":"interfaces/DatabaseOptions.html","title":"interface - DatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autoSync\n                                        \n                                \n                                \n                                        \n                                            sequelize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoSync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sequelize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sequelize:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DevelopmentGuard.html":{"url":"guards/DevelopmentGuard.html","title":"guard - DevelopmentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DevelopmentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/development.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/development.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, ForbiddenException } from '@nestjs/common';\n\n@Injectable()\nexport class DevelopmentGuard implements CanActivate {\n    canActivate(_context: ExecutionContext): boolean {\n        if ((process.env.APP_ENV || 'local').toUpperCase() === 'PRODUCTION') {\n            throw new ForbiddenException('This route is disabled.');\n        }\n        return true;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtraSetOptions.html":{"url":"interfaces/ExtraSetOptions.html","title":"interface - ExtraSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtraSetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDriver.html":{"url":"classes/FileDriver.html","title":"class - FileDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                    Optional\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Private\n                                    Async\n                                readStore\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                    Private\n                                    Async\n                                writeStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: FileOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        FileOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:78\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:148\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:98\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:132\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        readStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    readStore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:112\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        writeStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeStore(store: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                store\n                                            \n                                                            Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderSettingsOptions.html":{"url":"interfaces/HeaderSettingsOptions.html","title":"interface - HeaderSettingsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeaderSettingsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/response-format.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientTimezone\n                                        \n                                \n                                \n                                        \n                                            clientVersion\n                                        \n                                \n                                \n                                        \n                                            withTemplate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientTimezone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientTimezone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withTemplate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseFormatResponse {\n    traceId: string;\n    statusCode: number;\n    timestamp: string;\n    method: string;\n    path: string;\n    data: any;\n    api: {\n        service: string;\n        version: string;\n        datetime: string;\n        timezone: string;\n    };\n    client: {\n        version: string;\n        timezone: string;\n    };\n}\n\nexport interface HeaderSettingsOptions {\n    withTemplate: boolean;\n    clientVersion: string;\n    clientTimezone: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/health/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@UseGuards(DevelopmentGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/plugins/health/health.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { HealthService } from './health.service';\nimport { DevelopmentGuard } from 'src/shared/guards/development.guard';\n\n@Controller(['health', 'ping'])\nexport class HealthController {\n  constructor(private readonly healthService: HealthService) { }\n\n  @Get('')\n  @UseGuards(DevelopmentGuard)\n  async check() {\n    return this.healthService.check();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plugins/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { HealthService } from './health.service';\n\n@Global()\n@Module({\n  controllers: [HealthController],\n  providers: [HealthService],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthService.html":{"url":"injectables/HealthService.html","title":"injectable - HealthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/health/health.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/plugins/health/health.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/plugins/health/health.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HealthService {\n  constructor() { }\n\n  check() {\n    return {\n      message: 'Server is ready.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfraModule.html":{"url":"modules/InfraModule.html","title":"module - InfraModule","body":"\n                   \n\n\n\n\n    Modules\n    InfraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfraModule\n\n\n\ncluster_InfraModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nInfraModule\n\nInfraModule\n\nInfraModule -->\n\nBasicAuthModule->InfraModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nInfraModule -->\n\nCoreModule->InfraModule\n\n\n\nInfraModule -->\n\nInfraModule->InfraModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nInfraModule -->\n\nPluginModule->InfraModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nInfraModule -->\n\nRouteModule->InfraModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/infra.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { SuperConfigModule } from './super-config/super-config.module';\nimport { SuperConfigService } from './super-config/super-config.service';\nimport { SuperServerModule } from './super-server/super-server.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UmzugModule } from './umzug/umzug.module';\nimport { SuperCacheModule } from './super-cache/super-cache.module';\nimport { User } from 'src/core/user/user.model';\nimport { SuperObserveModule } from './super-observe/super-observe.module';\n\nconst MODULE_LOADER = [\n    SuperObserveModule.forRoot(),\n    SuperConfigModule,\n    SuperCacheModule.forRoot({\n        driver: 'file',\n        driverOptions: {\n            path: './storage/cache.json',\n            ttl: 60\n        }\n    }),\n    SequelizeModule.forRootAsync({\n        imports: [SuperConfigModule],\n        inject: [SuperConfigService],\n        useFactory: (configService: SuperConfigService) => ({\n            dialect: 'postgres',\n            host: configService.env.DATABASE_HOST,\n            port: configService.env.DATABASE_PORT,\n            username: configService.env.DATABASE_USERNAME,\n            password: configService.env.DATABASE_PASSWORD,\n            database: configService.env.DATABASE_NAME,\n            logging: configService.env.DATABASE_DEBUG,\n            autoLoadModels: false,\n            synchronize: false,\n            dialectOptions: {\n                ssl: {\n                    require: true,\n                    rejectUnauthorized: false,\n                },\n            },\n            models: [User],\n        }),\n    }),\n    SuperServerModule,\n    UmzugModule,\n]\n\n@Global()\n@Module({\n    imports: MODULE_LOADER,\n})\nexport class InfraModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class LoginDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MemoryDriver.html":{"url":"classes/MemoryDriver.html","title":"class - MemoryDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MemoryDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                    Private\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MemoryOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:240\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MemoryOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:238\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:239\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:286\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:247\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:272\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:257\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemoryOptions.html":{"url":"interfaces/MemoryOptions.html","title":"interface - MemoryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MemoryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            maxSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginModule.html":{"url":"modules/PluginModule.html","title":"module - PluginModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginModule\n\n\n\ncluster_PluginModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nPluginModule\n\nPluginModule\n\nPluginModule -->\n\nBasicAuthModule->PluginModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPluginModule -->\n\nCoreModule->PluginModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nPluginModule -->\n\nInfraModule->PluginModule\n\n\n\nPluginModule -->\n\nPluginModule->PluginModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nPluginModule -->\n\nRouteModule->PluginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plugins/plugin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthModule } from './health/health.module';\n\nconst MODULE_LOADER = [\n  HealthModule\n]\n\n@Module({\n  imports: MODULE_LOADER,\n})\nexport class PluginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisDriver.html":{"url":"classes/RedisDriver.html","title":"class - RedisDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                    Optional\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: RedisOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        RedisOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:66\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:45\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOption: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOption\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisOptions.html":{"url":"interfaces/RedisOptions.html","title":"interface - RedisOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseFormatInterceptor.html":{"url":"injectables/ResponseFormatInterceptor.html","title":"injectable - ResponseFormatInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseFormatInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/response-format.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getApiService\n                            \n                            \n                                    Private\n                                getApiVersion\n                            \n                            \n                                    Private\n                                getPackageData\n                            \n                            \n                                    Private\n                                getTimeZone\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fallbackValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getApiService\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiService()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getApiVersion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPackageData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPackageData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTimeZone\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimeZone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ResponseFormatInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/shared/interceptors/response-format.interceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fallbackValue\n                    \n                \n\n                \n                    \n                        getfallbackValue()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/interceptors/response-format.interceptor.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    Logger,\n    NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\nimport { HeaderSettingsOptions, ResponseFormatResponse } from '../interfaces/response-format.interface';\n\n@Injectable()\nexport class ResponseFormatInterceptor\n    implements NestInterceptor {\n    private readonly logger = new Logger(ResponseFormatInterceptor.name);\n\n    private get fallbackValue() {\n        return {\n            NO_SERVER_INFO: 'Unable to retrieve server information',\n            NO_CLIENT_INFO: 'No client detected',\n        };\n    }\n\n    private getPackageData(): any {\n        const packageJsonPath = join(process.cwd(), 'package.json');\n        return JSON.parse(readFileSync(packageJsonPath, 'utf8'));\n    }\n\n    private getTimeZone(): string {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    private getApiService(): string {\n        try {\n            return this.getPackageData().name;\n        } catch (error) {\n            this.logger.error('Error reading package.json:', error);\n            return this.fallbackValue.NO_SERVER_INFO;\n        }\n    }\n\n    private getApiVersion(): string {\n        try {\n            return this.getPackageData().version;\n        } catch (error) {\n            this.logger.error('Error reading package.json:', error);\n            return this.fallbackValue.NO_SERVER_INFO;\n        }\n    }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable {\n        const request = context.switchToHttp().getRequest();\n\n        const headerSettings: HeaderSettingsOptions = {\n            withTemplate:\n                request.headers['response-template'] !== 'false' &&\n                !request.headers['no-response-template'],\n            clientVersion: request.headers['x-client-version'],\n            clientTimezone: request.headers['x-client-timezone'],\n        };\n\n        return next.handle().pipe(\n            map((data) => {\n                if (!headerSettings.withTemplate) {\n                    return data;\n                }\n\n                return {\n                    traceId: uuidv4(),\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    timestamp: new Date().toISOString(),\n                    method: request.method,\n                    path: request.url,\n                    data,\n                    api: {\n                        service: this.getApiService() || this.fallbackValue.NO_SERVER_INFO,\n                        version: this.getApiVersion() || this.fallbackValue.NO_SERVER_INFO,\n                        datetime: new Date().toISOString() || this.fallbackValue.NO_SERVER_INFO,\n                        timezone: this.getTimeZone() || this.fallbackValue.NO_SERVER_INFO,\n                        uptime: process.uptime(),\n                    },\n                    client: {\n                        version:\n                            headerSettings.clientVersion ||\n                            this.fallbackValue.NO_CLIENT_INFO,\n                        timezone:\n                            headerSettings.clientTimezone ||\n                            this.fallbackValue.NO_CLIENT_INFO,\n                    },\n                } as ResponseFormatResponse;\n            }),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseFormatResponse.html":{"url":"interfaces/ResponseFormatResponse.html","title":"interface - ResponseFormatResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseFormatResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/response-format.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            api\n                                        \n                                \n                                \n                                        \n                                            client\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            traceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        api:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        client:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        traceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseFormatResponse {\n    traceId: string;\n    statusCode: number;\n    timestamp: string;\n    method: string;\n    path: string;\n    data: any;\n    api: {\n        service: string;\n        version: string;\n        datetime: string;\n        timezone: string;\n    };\n    client: {\n        version: string;\n        timezone: string;\n    };\n}\n\nexport interface HeaderSettingsOptions {\n    withTemplate: boolean;\n    clientVersion: string;\n    clientTimezone: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RouteController.html":{"url":"controllers/RouteController.html","title":"controller - RouteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RouteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/route.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        root\n                        \n                    \n                \n            \n            \n                \n                        \n                    root()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(['/', '/home'])@Render('index')\n                \n            \n\n                    \n                        \n                            Defined in src/views/route.controller.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { title: string; message: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, VERSION_NEUTRAL } from '@nestjs/common';\n\n@Controller({ version: VERSION_NEUTRAL })\nexport class RouteController {\n    @Get(['/', '/home'])\n    @Render('index')\n    root() {\n        return { title: 'Welcome to NestJS + EJS', message: 'Hello, World!' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RouteModule.html":{"url":"modules/RouteModule.html","title":"module - RouteModule","body":"\n                   \n\n\n\n\n    Modules\n    RouteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/route.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            RouteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RouteController } from './route.controller';\n\n@Module({\n    controllers: [RouteController],\n})\nexport class RouteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuperCache.html":{"url":"classes/SuperCache.html","title":"class - SuperCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuperCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                expiresAt\n                            \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'TEXT'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, PrimaryKey, DataType } from 'sequelize-typescript';\n\n@Table({ tableName: 'app_caches', timestamps: false })\nexport class SuperCache extends Model {\n    @PrimaryKey\n    @Column\n    key!: string;\n\n    @Column({ type: 'TEXT' })\n    value!: string;\n\n    @Column({ type: DataType.BIGINT, allowNull: true })\n    expiresAt?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperCacheModule.html":{"url":"modules/SuperCacheModule.html","title":"module - SuperCacheModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperCacheModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: SuperCacheModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.module.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            SuperCacheModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module, Provider } from '@nestjs/common';\nimport {\n  RedisDriver,\n  MemoryDriver,\n  FileDriver,\n  DatabaseDriver,\n} from './super-cache.driver';\nimport {\n  CacheDriver,\n  SuperCacheModuleOptions,\n} from './super-cache.interface';\nimport { SuperCacheService } from './super-cache.service';\n\nconst DRIVER_TOKEN = 'SUPER_CACHE_DRIVER';\n\n@Global()\n@Module({})\nexport class SuperCacheModule {\n  static forRoot(options: SuperCacheModuleOptions): DynamicModule {\n    const DRIVER_TOKEN = `SUPER_CACHE_DRIVER::${options.driver.toUpperCase()}`;\n\n    const driverProvider: Provider = {\n      provide: DRIVER_TOKEN,\n      useFactory: () => {\n        switch (options.driver) {\n          case 'redis':\n            return new RedisDriver(options.driverOptions);\n          case 'database':\n            return new DatabaseDriver(options.driverOptions);\n          case 'file':\n            return new FileDriver(options.driverOptions);\n          case 'memory':\n          default:\n            return new MemoryDriver(options.driverOptions);\n        }\n      },\n    };\n\n    const cacheServiceProvider: Provider = {\n      provide: `SUPER_CACHE_${options.driver.toUpperCase()}_DRIVER`,\n      useFactory: (driver: CacheDriver) => new SuperCacheService(driver),\n      inject: [DRIVER_TOKEN],\n    };\n\n    return {\n      module: SuperCacheModule,\n      providers: [driverProvider, cacheServiceProvider],\n      exports: [cacheServiceProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperCacheService.html":{"url":"injectables/SuperCacheService.html","title":"injectable - SuperCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getDriver\n                            \n                            \n                                    Async\n                                getOrSet\n                            \n                            \n                                    Async\n                                getStats\n                            \n                            \n                                    Async\n                                has\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driver: CacheDriver)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                        CacheDriver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:61\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:57\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDriver\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDriver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrSet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrSet(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        has\n                        \n                    \n                \n            \n            \n                \n                        \n                    has(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CacheDriver, ExtraSetOptions } from './super-cache.interface';\n\n@Injectable()\nexport class SuperCacheService {\n  constructor(\n    @Inject('SUPER_CACHE_DRIVER') private readonly driver: CacheDriver,\n  ) { }\n\n  //** MAINTENANCE */\n  async clear(): Promise> {\n    return this.driver.delAll('*');\n  }\n\n  async getDriver(): Promise {\n    return this.driver;\n  }\n\n  async getStats(): Promise> {\n    return {\n      driver: this.driver.constructor.name,\n      options: this.driver['options'] || {},\n      size: await this.driver.getAll().then(items => Object.keys(items).length),\n      keys: await this.driver.getAll().then(items => Object.keys(items))\n    };\n  }\n\n  //** KEY MANAGEMENT */\n  async get(key: string): Promise {\n    return this.driver.get(key);\n  }\n\n  async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n    return this.driver.set(key, value, extraSetOptions);\n  }\n\n  async del(key: string): Promise {\n    return this.driver.del(key);\n  }\n\n  async has(key: string): Promise {\n    const value = await this.driver.get(key);\n    return value !== null;\n  }\n\n  //** ADVANCE KEY MANAGEMENT */\n  async getOrSet(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n    const cachedValue = await this.get(key);\n    if (cachedValue !== null) {\n      return cachedValue;\n    }\n    await this.set(key, value, extraSetOptions);\n    return value;\n  }\n\n  //** BULK KEY MANAGEMENT */\n  async getAll(pattern?: string): Promise> {\n    return this.driver.getAll(pattern);\n  }\n\n  async delAll(pattern?: string): Promise> {\n    return this.driver.delAll(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperConfigModule.html":{"url":"modules/SuperConfigModule.html","title":"module - SuperConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SuperConfigModule\n\n\n\ncluster_SuperConfigModule_exports\n\n\n\ncluster_SuperConfigModule_providers\n\n\n\n\nSuperConfigService \n\nSuperConfigService \n\n\n\nSuperConfigModule\n\nSuperConfigModule\n\nSuperConfigService  -->\n\nSuperConfigModule->SuperConfigService \n\n\n\n\n\nSuperConfigService\n\nSuperConfigService\n\nSuperConfigModule -->\n\nSuperConfigService->SuperConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-config/super-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SuperConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SuperConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SuperConfigService } from './super-config.service';\n\n@Global()\n@Module({\n    imports: [ConfigModule.forRoot()],\n    providers: [SuperConfigService],\n    exports: [SuperConfigService],\n})\nexport class SuperConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuperConfigOptions.html":{"url":"interfaces/SuperConfigOptions.html","title":"interface - SuperConfigOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuperConfigOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-config/super-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            APP_CLIENT_URL\n                                        \n                                \n                                \n                                        \n                                            APP_DEBUG\n                                        \n                                \n                                \n                                        \n                                            APP_ENV\n                                        \n                                \n                                \n                                        \n                                            APP_HOST\n                                        \n                                \n                                \n                                        \n                                            APP_NAME\n                                        \n                                \n                                \n                                        \n                                            APP_PORT\n                                        \n                                \n                                \n                                        \n                                            APP_SECRET\n                                        \n                                \n                                \n                                        \n                                            APP_TIMEZONE\n                                        \n                                \n                                \n                                        \n                                            AUTH_LIFETIME\n                                        \n                                \n                                \n                                        \n                                            AUTH_SALTROUND\n                                        \n                                \n                                \n                                        \n                                            DATABASE_DEBUG\n                                        \n                                \n                                \n                                        \n                                            DATABASE_HOST\n                                        \n                                \n                                \n                                        \n                                            DATABASE_NAME\n                                        \n                                \n                                \n                                        \n                                            DATABASE_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DATABASE_PORT\n                                        \n                                \n                                \n                                        \n                                            DATABASE_SSL\n                                        \n                                \n                                \n                                        \n                                            DATABASE_TYPE\n                                        \n                                \n                                \n                                        \n                                            DATABASE_USERNAME\n                                        \n                                \n                                \n                                        \n                                            ENABLE_COMPRESSION\n                                        \n                                \n                                \n                                        \n                                            ENABLE_CORS\n                                        \n                                \n                                \n                                        \n                                            ENABLE_HELMET\n                                        \n                                \n                                \n                                        \n                                            ENABLE_SHUTDOWN_HOOKS\n                                        \n                                \n                                \n                                        \n                                            ENABLE_UNDER_PRESSURE\n                                        \n                                \n                                \n                                        \n                                            ENABLE_VIEW\n                                        \n                                \n                                \n                                        \n                                            MAILER_HOST\n                                        \n                                \n                                \n                                        \n                                            MAILER_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            MAILER_PORT\n                                        \n                                \n                                \n                                        \n                                            MAILER_SECURE\n                                        \n                                \n                                \n                                        \n                                            MAILER_USERNAME\n                                        \n                                \n                                \n                                        \n                                            REDIS_HOST\n                                        \n                                \n                                \n                                        \n                                            REDIS_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            REDIS_PORT\n                                        \n                                \n                                \n                                        \n                                            REDIS_TTL\n                                        \n                                \n                                \n                                        \n                                            REDIS_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        APP_CLIENT_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_CLIENT_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_DEBUG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_DEBUG:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_ENV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_ENV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_SECRET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_SECRET:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_TIMEZONE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_TIMEZONE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AUTH_LIFETIME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AUTH_LIFETIME:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AUTH_SALTROUND\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AUTH_SALTROUND:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_DEBUG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_DEBUG:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_SSL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_SSL:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_TYPE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_COMPRESSION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_COMPRESSION:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_CORS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_CORS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_HELMET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_HELMET:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_SHUTDOWN_HOOKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_SHUTDOWN_HOOKS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_UNDER_PRESSURE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_UNDER_PRESSURE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_VIEW\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_VIEW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_SECURE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_SECURE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_TTL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_TTL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SuperConfigOptions {\n    APP_NAME: string;\n    APP_ENV: string;\n    APP_HOST: string;\n    APP_PORT: number;\n    APP_DEBUG: boolean;\n    APP_SECRET: string;\n    APP_TIMEZONE: string;\n    APP_CLIENT_URL: string;\n\n    AUTH_LIFETIME: number;\n    AUTH_SALTROUND: number;\n\n    DATABASE_TYPE: string;\n    DATABASE_HOST: string;\n    DATABASE_PORT: number;\n    DATABASE_NAME: string;\n    DATABASE_USERNAME: string;\n    DATABASE_PASSWORD: string;\n    DATABASE_SSL: boolean;\n    DATABASE_DEBUG: boolean;\n\n    REDIS_HOST: string;\n    REDIS_PORT: number;\n    REDIS_USERNAME: string;\n    REDIS_PASSWORD: string;\n    REDIS_TTL: number;\n\n    MAILER_HOST: string;\n    MAILER_PORT: number;\n    MAILER_USERNAME: string;\n    MAILER_PASSWORD: string;\n    MAILER_SECURE: boolean;\n\n    ENABLE_HELMET: boolean;\n    ENABLE_CORS: boolean;\n    ENABLE_COMPRESSION: boolean;\n    ENABLE_UNDER_PRESSURE: boolean;\n    ENABLE_SHUTDOWN_HOOKS: boolean;\n    ENABLE_VIEW: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperConfigService.html":{"url":"injectables/SuperConfigService.html","title":"injectable - SuperConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-config/super-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertBoolean\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    env\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-config/super-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertBoolean(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-config/super-config.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        env\n                    \n                \n\n                \n                    \n                        getenv()\n                    \n                \n                            \n                                \n                                    Defined in src/infra/super-config/super-config.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { SuperConfigOptions } from './super-config.interface';\nimport { SuperConfigDefaults } from './super-config.default';\n\n@Injectable()\nexport class SuperConfigService {\n    constructor(private readonly configService: ConfigService) { }\n\n    private convertBoolean(value: any): boolean {\n        return value === true || value === 'true' || value === 1 || value === '1';\n    }\n\n    get env(): SuperConfigOptions {\n        return {\n            // App VARIABLES\n            APP_NAME: this.configService.get('APP_NAME', SuperConfigDefaults.APP_NAME),\n            APP_ENV: this.configService.get('APP_ENV', SuperConfigDefaults.APP_ENV),\n            APP_HOST: this.configService.get('APP_HOST', SuperConfigDefaults.APP_HOST),\n            APP_PORT: this.configService.get('APP_PORT', SuperConfigDefaults.APP_PORT),\n            APP_DEBUG: this.convertBoolean(this.configService.get('APP_DEBUG', SuperConfigDefaults.APP_DEBUG)),\n            APP_SECRET: this.configService.get('APP_SECRET', SuperConfigDefaults.APP_SECRET),\n            APP_TIMEZONE: this.configService.get('APP_TIMEZONE', SuperConfigDefaults.APP_TIMEZONE),\n            APP_CLIENT_URL: this.configService.get('APP_CLIENT_URL', SuperConfigDefaults.APP_CLIENT_URL),\n\n            // Auth Variables\n            AUTH_LIFETIME: this.configService.get('AUTH_LIFETIME', SuperConfigDefaults.AUTH_LIFETIME),\n            AUTH_SALTROUND: this.configService.get('AUTH_SALTROUND', SuperConfigDefaults.AUTH_SALTROUND),\n\n            // Database Variables\n            DATABASE_TYPE: this.configService.get('DATABASE_TYPE', SuperConfigDefaults.DATABASE_TYPE),\n            DATABASE_HOST: this.configService.get('DATABASE_HOST', SuperConfigDefaults.DATABASE_HOST),\n            DATABASE_PORT: this.configService.get('DATABASE_PORT', SuperConfigDefaults.DATABASE_PORT),\n            DATABASE_NAME: this.configService.get('DATABASE_NAME', SuperConfigDefaults.DATABASE_NAME),\n            DATABASE_USERNAME: this.configService.get('DATABASE_USERNAME', SuperConfigDefaults.DATABASE_USERNAME),\n            DATABASE_PASSWORD: this.configService.get('DATABASE_PASSWORD', SuperConfigDefaults.DATABASE_PASSWORD),\n            DATABASE_SSL: this.convertBoolean(this.configService.get('DATABASE_SSL', SuperConfigDefaults.DATABASE_SSL)),\n            DATABASE_DEBUG: this.convertBoolean(this.configService.get('DATABASE_DEBUG', SuperConfigDefaults.DATABASE_DEBUG)),\n\n            // Redis Variables\n            REDIS_HOST: this.configService.get('REDIS_HOST', SuperConfigDefaults.REDIS_HOST),\n            REDIS_PORT: this.configService.get('REDIS_PORT', SuperConfigDefaults.REDIS_PORT),\n            REDIS_USERNAME: this.configService.get('REDIS_USERNAME', SuperConfigDefaults.REDIS_USERNAME),\n            REDIS_PASSWORD: this.configService.get('REDIS_PASSWORD', SuperConfigDefaults.REDIS_PASSWORD),\n            REDIS_TTL: this.configService.get('REDIS_TTL', SuperConfigDefaults.REDIS_TTL),\n\n            // Mailer Variables\n            MAILER_HOST: this.configService.get('MAILER_HOST', SuperConfigDefaults.MAILER_HOST),\n            MAILER_PORT: this.configService.get('MAILER_PORT', SuperConfigDefaults.MAILER_PORT),\n            MAILER_USERNAME: this.configService.get('MAILER_USERNAME', SuperConfigDefaults.MAILER_USERNAME),\n            MAILER_PASSWORD: this.configService.get('MAILER_PASSWORD', SuperConfigDefaults.MAILER_PASSWORD),\n            MAILER_SECURE: this.convertBoolean(this.configService.get('MAILER_SECURE', SuperConfigDefaults.MAILER_SECURE)),\n\n            // Config Variables\n            ENABLE_HELMET: this.convertBoolean(this.configService.get('ENABLE_HELMET', SuperConfigDefaults.ENABLE_HELMET)),\n            ENABLE_CORS: this.convertBoolean(this.configService.get('ENABLE_CORS', SuperConfigDefaults.ENABLE_CORS)),\n            ENABLE_COMPRESSION: this.convertBoolean(this.configService.get('ENABLE_COMPRESSION', SuperConfigDefaults.ENABLE_COMPRESSION)),\n            ENABLE_UNDER_PRESSURE: this.convertBoolean(this.configService.get('ENABLE_UNDER_PRESSURE', SuperConfigDefaults.ENABLE_UNDER_PRESSURE)),\n            ENABLE_SHUTDOWN_HOOKS: this.convertBoolean(this.configService.get('ENABLE_SHUTDOWN_HOOKS', SuperConfigDefaults.ENABLE_SHUTDOWN_HOOKS)),\n            ENABLE_VIEW: this.convertBoolean(this.configService.get('ENABLE_VIEW', SuperConfigDefaults.ENABLE_VIEW)),\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuperObserve.html":{"url":"classes/SuperObserve.html","title":"class - SuperObserve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuperObserve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                afterTime\n                            \n                            \n                                    \n                                beforeTime\n                            \n                            \n                                    \n                                computedSpeed\n                            \n                            \n                                    \n                                loggedAt\n                            \n                            \n                                    \n                                responseStatus\n                            \n                            \n                                    \n                                route\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        afterTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        beforeTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        computedSpeed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, defaultValue: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        responseStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Model, Table } from 'sequelize-typescript';\n\n@Table({\n    tableName: 'app_performance_logs',\n    timestamps: true,\n})\nexport class SuperObserve extends Model {\n    @Column({ type: DataType.STRING, allowNull: false })\n    route: string;\n\n    @Column({ type: DataType.DATE, allowNull: false })\n    beforeTime: Date;\n\n    @Column({ type: DataType.DATE, allowNull: false })\n    afterTime: Date;\n\n    @Column({ type: DataType.FLOAT, allowNull: false })\n    computedSpeed: number;\n\n    @Column({ type: DataType.INTEGER, allowNull: false })\n    responseStatus: number;\n\n    @Column({ type: DataType.DATE, allowNull: false, defaultValue: DataType.NOW })\n    loggedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperObserveInterceptor.html":{"url":"injectables/SuperObserveInterceptor.html","title":"injectable - SuperObserveInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperObserveInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-observe/super-observe.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SuperObserveInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.interceptor.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    NestInterceptor,\n    Logger,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { SUPER_OBSERVE_KEY } from './super-observe.decorator';\nimport { SuperObserve } from './super-observe.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class SuperObserveInterceptor implements NestInterceptor {\n    private readonly logger = new Logger(SuperObserveInterceptor.name);\n\n    constructor(private readonly reflector: Reflector) { }\n\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        const isObserved = this.reflector.get(\n            SUPER_OBSERVE_KEY,\n            context.getHandler(),\n        );\n\n        if (!isObserved) return next.handle();\n\n        const req = context.switchToHttp().getRequest();\n        const route = req.url;\n        const beforeTime = new Date();\n\n        return next.handle().pipe(\n            tap(() => {\n                const afterTime = new Date();\n                const duration = afterTime.getTime() - beforeTime.getTime();\n                const status = context.switchToHttp().getResponse().statusCode;\n                SuperObserve.create({\n                    route,\n                    beforeTime,\n                    afterTime,\n                    computedSpeed: duration,\n                    responseStatus: status,\n                    loggedAt: new Date(),\n                } as any).catch(err => this.logger.error('Failed to log performance', err));\n            }),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperObserveModule.html":{"url":"modules/SuperObserveModule.html","title":"module - SuperObserveModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperObserveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider, OnModuleInit, Logger } from '@nestjs/common';\nimport { SequelizeModule, SequelizeModuleOptions, getConnectionToken } from '@nestjs/sequelize';\nimport { SuperObserveInterceptor } from './super-observe.interceptor';\nimport { APP_INTERCEPTOR, Reflector } from '@nestjs/core';\nimport { Sequelize } from 'sequelize-typescript';\nimport { SuperObserve } from './super-observe.model';\n\n@Module({})\nexport class SuperObserveModule implements OnModuleInit {\n    private readonly logger = new Logger(SuperObserveModule.name);\n\n    constructor(private readonly sequelize: Sequelize) { }\n\n    static forRoot(): DynamicModule {\n        const interceptorProvider: Provider = {\n            provide: APP_INTERCEPTOR,\n            useFactory: (reflector: Reflector) => new SuperObserveInterceptor(reflector),\n            inject: [Reflector],\n        };\n\n        return {\n            module: SuperObserveModule,\n            imports: [SequelizeModule.forFeature([SuperObserve])],\n            providers: [interceptorProvider],\n            exports: [],\n        };\n    }\n\n    async onModuleInit() {\n        try {\n            await this.sequelize.addModels([SuperObserve]);\n            await this.sequelize.sync({ alter: true });\n            this.logger.log('SuperObserve table synced successfully.');\n        } catch (err) {\n            this.logger.error('Failed to sync SuperObserve table', err);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SuperServerController.html":{"url":"controllers/SuperServerController.html","title":"controller - SuperServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SuperServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-server/super-server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getMetrics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getMetrics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetrics()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/infra/super-server/super-server.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Injectable, Logger, UseGuards } from '@nestjs/common';\nimport { SuperServerService } from './super-server.service';\nimport { DevelopmentGuard } from 'src/shared/guards/development.guard';\n\n@Controller(['super-server', 'metrics'])\n@UseGuards(DevelopmentGuard)\nexport class SuperServerController {\n    constructor(private readonly superServerService: SuperServerService) { }\n\n    @Get()\n    getMetrics() {\n        return this.superServerService.getMetrics();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperServerModule.html":{"url":"modules/SuperServerModule.html","title":"module - SuperServerModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SuperServerModule\n\n\n\ncluster_SuperServerModule_exports\n\n\n\ncluster_SuperServerModule_providers\n\n\n\n\nSuperServerService \n\nSuperServerService \n\n\n\nSuperServerModule\n\nSuperServerModule\n\nSuperServerService  -->\n\nSuperServerModule->SuperServerService \n\n\n\n\n\nSuperServerService\n\nSuperServerService\n\nSuperServerModule -->\n\nSuperServerService->SuperServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-server/super-server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SuperServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SuperServerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SuperServerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { SuperServerService } from './super-server.service';\nimport { SuperServerController } from './super-server.controller';\n\n@Module({\n    controllers: [SuperServerController],\n    providers: [SuperServerService],\n    exports: [SuperServerService],\n})\nexport class SuperServerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperServerService.html":{"url":"injectables/SuperServerService.html","title":"injectable - SuperServerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-server/super-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetrics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-server/super-server.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetrics\n                        \n                    \n                \n            \n            \n                \ngetMetrics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-server/super-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: string; version: string; server: { hostname: any; platform: any; arch: any; uptime: any; loadAverage: any; totalMemory: any; freeMemory: any; cpus: any; networkInterfaces: any; }; env: { nodeEnv: any; port: any; jwtSecretConfigured: boolean; }; process: { ...; }; }\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SuperServerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-server/super-server.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        packageJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-server/super-server.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\n@Injectable()\nexport class SuperServerService {\n    private readonly logger = new Logger(SuperServerService.name);\n\n    private readonly packageJson: { name: string; version: string };\n\n    constructor() {\n        const packagePath = path.resolve(__dirname, '../../../package.json');\n        if (fs.existsSync(packagePath)) {\n            this.packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf-8'));\n        } else {\n            this.packageJson = { name: 'Unknown', version: '0.0.0' };\n        }\n    }\n\n    getMetrics() {\n        this.logger.debug('Fetching server config...');\n\n        const cpus = os.cpus();\n        const network = os.networkInterfaces();\n\n        return {\n            name: this.packageJson.name,\n            version: this.packageJson.version,\n            server: {\n                hostname: os.hostname(),\n                platform: os.platform(),\n                arch: os.arch(),\n                uptime: os.uptime(), // in seconds\n                loadAverage: os.loadavg(), // 1, 5, 15 min averages\n                totalMemory: os.totalmem(),\n                freeMemory: os.freemem(),\n                cpus: cpus.map(cpu => ({ model: cpu.model, speed: cpu.speed })),\n                networkInterfaces: network,\n            },\n            env: {\n                nodeEnv: process.env.APP_ENV,\n                port: process.env.APP_PORT,\n                jwtSecretConfigured: !!process.env.APP_SECRET,\n            },\n            process: {\n                pid: process.pid,\n                memoryUsage: process.memoryUsage(), // heapUsed, heapTotal, rss\n                versions: process.versions, // node, v8, openssl, etc.\n                uptime: process.uptime(),\n            }\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UmzugModule.html":{"url":"modules/UmzugModule.html","title":"module - UmzugModule","body":"\n                   \n\n\n\n\n    Modules\n    UmzugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UmzugModule\n\n\n\ncluster_UmzugModule_providers\n\n\n\ncluster_UmzugModule_exports\n\n\n\n\nUmzugService \n\nUmzugService \n\n\n\nUmzugModule\n\nUmzugModule\n\nUmzugService  -->\n\nUmzugModule->UmzugService \n\n\n\n\n\nUmzugService\n\nUmzugService\n\nUmzugModule -->\n\nUmzugService->UmzugModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/umzug/umzug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UmzugService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UmzugService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UmzugService } from './umzug.service';\n\n@Module({\n    providers: [UmzugService],\n    exports: [UmzugService],\n})\nexport class UmzugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UmzugService.html":{"url":"injectables/UmzugService.html","title":"injectable - UmzugService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UmzugService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/umzug/umzug.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                umzug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getExecuted\n                            \n                            \n                                    Async\n                                getPending\n                            \n                            \n                                    Async\n                                rollback\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sequelize: Sequelize)\n                    \n                \n                        \n                            \n                                Defined in src/infra/umzug/umzug.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sequelize\n                                                  \n                                                        \n                                                                    Sequelize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getExecuted\n                        \n                    \n                \n            \n            \n                \n                        \n                    getExecuted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPending\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPending()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rollback\n                        \n                    \n                \n            \n            \n                \n                        \n                    rollback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UmzugService.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/umzug/umzug.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        umzug\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Umzug\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/umzug/umzug.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Sequelize } from 'sequelize-typescript';\nimport { Umzug, SequelizeStorage } from 'umzug';\nimport * as path from 'path';\n\n@Injectable()\nexport class UmzugService {\n    private readonly logger = new Logger(UmzugService.name);\n    private umzug: Umzug;\n\n    constructor(private readonly sequelize: Sequelize) {\n        this.umzug = new Umzug({\n            migrations: {\n                glob: path.join(process.cwd(), '/database/migrations/*.js'),\n                resolve: ({ name, path: migrationPath, context }) => {\n                    if (!migrationPath || typeof migrationPath !== 'string') {\n                        throw new Error(`Migration path is invalid: ${migrationPath}`);\n                    }\n                    const migration = require(migrationPath);\n                    return {\n                        name,\n                        up: async () => migration.up(context.queryInterface, Sequelize),\n                        down: async () => migration.down(context.queryInterface, Sequelize),\n                    };\n                },\n            },\n            context: {\n                queryInterface: this.sequelize.getQueryInterface(),\n            },\n            storage: new SequelizeStorage({ sequelize: this.sequelize }),\n            logger: console,\n        });\n    }\n\n    async getPending() {\n        const pendings = await this.umzug.pending();\n        this.logger.log(`Pending migrations: ${JSON.stringify(pendings)}`);\n        return pendings;\n    }\n\n    async getExecuted() {\n        const executed = await this.umzug.executed();\n        this.logger.log(`Executed migrations: ${JSON.stringify(executed)}`);\n        return executed;\n    }\n\n    async update() {\n        await this.umzug.up();\n    }\n\n    async rollback() {\n        await this.umzug.down();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address1\n                            \n                            \n                                    \n                                address2\n                            \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, autoIncrement: true, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, Scopes, DefaultScope } from 'sequelize-typescript';\n\n@DefaultScope(() => ({\n    attributes: { exclude: ['password'] },\n}))\n@Scopes(() => ({\n    withPassword: {\n        attributes: { include: ['password'] },\n    },\n}))\n@Table({ tableName: 'users' })\nexport class User extends Model {\n    @Column({\n        type: DataType.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n    })\n    id: number;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    firstName: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    lastName: string;\n\n    @Column({ type: DataType.ENUM('male', 'female', 'other'), allowNull: false })\n    gender: string;\n\n    @Column({ type: DataType.DATEONLY, allowNull: false })\n    birthday: Date;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    address1: string;\n\n    @Column({ type: DataType.STRING, allowNull: true })\n    address2: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    city: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    country: string;\n\n    @Column({ type: DataType.STRING, allowNull: false, unique: true })\n    email: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UsePerformance } from 'src/infra/super-observe/super-observe.decorator';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) { }\n\n    @Post()\n    @UsePerformance()\n    create(@Body() dto: CreateUserDto) {\n        return this.userService.create(dto);\n    }\n\n    @Get()\n    @UsePerformance()\n    findAll() {\n        return this.userService.findAll();\n    }\n\n    @Get(':id')\n    @UsePerformance()\n    findOne(@Param('id', ParseIntPipe) id: number) {\n        return this.userService.findOne(id);\n    }\n\n    @Put(':id')\n    @UsePerformance()\n    update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() dto: UpdateUserDto,\n    ) {\n        return this.userService.update(id, dto);\n    }\n\n    @Delete(':id')\n    @UsePerformance()\n    remove(@Param('id', ParseIntPipe) id: number) {\n        return this.userService.remove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { User } from './user.model';\n\n@Module({\n    imports: [SequelizeModule.forFeature([User])],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [UserService],\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/core/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from './user.model';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel(User)\n        private userModel: typeof User,\n    ) { }\n\n    async create(dto: CreateUserDto): Promise {\n        const existingUser = await this.userModel.findOne({\n            where: { email: dto.email },\n        });\n        if (existingUser) {\n            throw new ConflictException('User with this email already exists');\n        }\n        const hashedPassword = await bcrypt.hash(dto.password, 10);\n        const user = await this.userModel.create({\n            ...dto,\n            password: hashedPassword,\n        } as any);\n        const { password, ...result } = user.get({ plain: true });\n        return result as User;\n    }\n\n    async findAll(): Promise {\n        return this.userModel.findAll();\n    }\n\n    async findOne(id: number): Promise {\n        const user = await this.userModel.findByPk(id);\n        if (!user) throw new NotFoundException('User not found');\n        return user;\n    }\n\n    async findByEmail(email: string): Promise {\n        return this.userModel.findOne({ where: { email } });\n    }\n\n    async update(id: number, dto: UpdateUserDto): Promise {\n        const user = await this.findOne(id);\n        if (dto.password) {\n            dto.password = await bcrypt.hash(dto.password, 10);\n        }\n        await user.update(dto);\n        return user;\n    }\n\n    async remove(id: number): Promise {\n        const user = await this.findOne(id);\n        await user.destroy();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/basic-auth.controller.ts\n            \n            controller\n            BasicAuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.guard.ts\n            \n            injectable\n            BasicAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.service.ts\n            \n            injectable\n            BasicAuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.strategy.ts\n            \n            injectable\n            BasicAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/bootstrap.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/core/core.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/user/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/core/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/infra/infra.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            DatabaseDriver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            FileDriver\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            MemoryDriver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            RedisDriver\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.entity.ts\n            \n            class\n            SuperCache\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            CacheDriver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            DatabaseOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            ExtraSetOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            FileOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            MemoryOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            RedisOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.interface.ts\n            \n            type alias\n            SuperCacheModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.interface.ts\n            \n            type alias\n            XStoredItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.module.ts\n            \n            variable\n            DRIVER_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.service.ts\n            \n            injectable\n            SuperCacheService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/infra/super-config/super-config.default.ts\n            \n            variable\n            SuperConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-config/super-config.interface.ts\n            \n            interface\n            SuperConfigOptions\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/infra/super-config/super-config.service.ts\n            \n            injectable\n            SuperConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/infra/super-observe/super-observe.decorator.ts\n            \n            variable\n            SUPER_OBSERVE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-observe/super-observe.decorator.ts\n            \n            variable\n            UsePerformance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-observe/super-observe.interceptor.ts\n            \n            injectable\n            SuperObserveInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-observe/super-observe.model.ts\n            \n            class\n            SuperObserve\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infra/super-server/super-server.controller.ts\n            \n            controller\n            SuperServerController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/super-server/super-server.service.ts\n            \n            injectable\n            SuperServerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infra/umzug/umzug.service.ts\n            \n            injectable\n            UmzugService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            executeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            executeServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/plugins/health/health.service.ts\n            \n            injectable\n            HealthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/plugins/plugin.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/cors.config.ts\n            \n            variable\n            CorsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/under-pressure.config.ts\n            \n            variable\n            UnderPressureConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/validation.config.ts\n            \n            variable\n            ValidationPipeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/version.config.ts\n            \n            variable\n            VersionConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/view.config.ts\n            \n            variable\n            ViewConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/guards/development.guard.ts\n            \n            guard\n            DevelopmentGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/response-format.interceptor.ts\n            \n            injectable\n            ResponseFormatInterceptor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interfaces/bootstrap-function.interface.ts\n            \n            interface\n            BootstrapFunctionArgs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/response-format.interface.ts\n            \n            interface\n            HeaderSettingsOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/interfaces/response-format.interface.ts\n            \n            interface\n            ResponseFormatResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/views/route.controller.ts\n            \n            controller\n            RouteController\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/compress : ^8.1.0\n        \n            @fastify/cors : ^11.1.0\n        \n            @fastify/helmet : ^13.0.1\n        \n            @fastify/under-pressure : ^9.0.3\n        \n            @fastify/view : ^11.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.1.6\n        \n            @nestjs/cqrs : ^11.0.3\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/platform-fastify : ^11.1.6\n        \n            @nestjs/platform-socket.io : ^11.1.6\n        \n            @nestjs/sequelize : ^11.0.0\n        \n            @nestjs/websockets : ^11.1.6\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            ejs : ^3.1.10\n        \n            ioredis : ^5.7.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.16.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.37.7\n        \n            sequelize-typescript : ^2.1.6\n        \n            socket.io : ^4.8.1\n        \n            umzug : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            executeConfig   (src/.../main.ts)\n                        \n                        \n                            executeServer   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeConfig\n                        \n                    \n                \n            \n            \n                \nexecuteConfig(server: BootstrapFunctionArgs)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            BootstrapFunctionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeServer\n                        \n                    \n                \n            \n            \n                \nexecuteServer(server: BootstrapFunctionArgs)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            BootstrapFunctionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BasicAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BootstrapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RouteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperCacheModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperObserveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UmzugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicAuthModule\n\n\n\ncluster_BasicAuthModule_providers\n\n\n\ncluster_BootstrapModule\n\n\n\ncluster_BootstrapModule_imports\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_SuperConfigModule\n\n\n\ncluster_SuperConfigModule_exports\n\n\n\ncluster_SuperConfigModule_providers\n\n\n\ncluster_SuperServerModule\n\n\n\ncluster_SuperServerModule_exports\n\n\n\ncluster_SuperServerModule_providers\n\n\n\ncluster_UmzugModule\n\n\n\ncluster_UmzugModule_exports\n\n\n\ncluster_UmzugModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nBasicAuthService\n\nBasicAuthService\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\nBasicAuthModule -->\n\nBasicAuthService->BasicAuthModule\n\n\n\n\n\nBasicAuthStrategy\n\nBasicAuthStrategy\n\nBasicAuthModule -->\n\nBasicAuthStrategy->BasicAuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nBasicAuthModule -->\n\nUserService->BasicAuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nBasicAuthModule->CoreModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nInfraModule -->\n\nBasicAuthModule->InfraModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nPluginModule -->\n\nBasicAuthModule->PluginModule\n\n\n\n\n\nBootstrapModule\n\nBootstrapModule\n\nBootstrapModule -->\n\nBasicAuthModule->BootstrapModule\n\n\n\nCoreModule -->\n\nCoreModule->CoreModule\n\n\n\nInfraModule -->\n\nCoreModule->InfraModule\n\n\n\nPluginModule -->\n\nCoreModule->PluginModule\n\n\n\nBootstrapModule -->\n\nCoreModule->BootstrapModule\n\n\n\nCoreModule -->\n\nInfraModule->CoreModule\n\n\n\nInfraModule -->\n\nInfraModule->InfraModule\n\n\n\nPluginModule -->\n\nInfraModule->PluginModule\n\n\n\nBootstrapModule -->\n\nInfraModule->BootstrapModule\n\n\n\nCoreModule -->\n\nPluginModule->CoreModule\n\n\n\nInfraModule -->\n\nPluginModule->InfraModule\n\n\n\nPluginModule -->\n\nPluginModule->PluginModule\n\n\n\nBootstrapModule -->\n\nPluginModule->BootstrapModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nCoreModule -->\n\nRouteModule->CoreModule\n\n\n\nInfraModule -->\n\nRouteModule->InfraModule\n\n\n\nPluginModule -->\n\nRouteModule->PluginModule\n\n\n\nBootstrapModule -->\n\nRouteModule->BootstrapModule\n\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\nSuperConfigService \n\nSuperConfigService \n\n\n\nSuperConfigModule\n\nSuperConfigModule\n\nSuperConfigService  -->\n\nSuperConfigModule->SuperConfigService \n\n\n\n\n\nSuperConfigService\n\nSuperConfigService\n\nSuperConfigModule -->\n\nSuperConfigService->SuperConfigModule\n\n\n\n\n\nSuperServerService \n\nSuperServerService \n\n\n\nSuperServerModule\n\nSuperServerModule\n\nSuperServerService  -->\n\nSuperServerModule->SuperServerService \n\n\n\n\n\nSuperServerService\n\nSuperServerService\n\nSuperServerModule -->\n\nSuperServerService->SuperServerModule\n\n\n\n\n\nUmzugService \n\nUmzugService \n\n\n\nUmzugModule\n\nUmzugModule\n\nUmzugService  -->\n\nUmzugModule->UmzugService \n\n\n\n\n\nUmzugService\n\nUmzugService\n\nUmzugModule -->\n\nUmzugService->UmzugModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SuperCacheModuleOptions   (src/.../super-cache.interface.ts)\n                        \n                        \n                            XStoredItem   (src/.../super-cache.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infra/super-cache/super-cache.interface.ts\n    \n    \n        \n            \n                \n                    \n                    SuperCacheModuleOptions\n                \n            \n            \n                \n                        literal type | literal type | literal type | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XStoredItem\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CorsConfig   (src/.../cors.config.ts)\n                        \n                        \n                            DRIVER_TOKEN   (src/.../super-cache.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../bootstrap.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../core.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../infra.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../plugin.module.ts)\n                        \n                        \n                            SUPER_OBSERVE_KEY   (src/.../super-observe.decorator.ts)\n                        \n                        \n                            SuperConfigDefaults   (src/.../super-config.default.ts)\n                        \n                        \n                            UnderPressureConfig   (src/.../under-pressure.config.ts)\n                        \n                        \n                            UsePerformance   (src/.../super-observe.decorator.ts)\n                        \n                        \n                            ValidationPipeConfig   (src/.../validation.config.ts)\n                        \n                        \n                            VersionConfig   (src/.../version.config.ts)\n                        \n                        \n                            ViewConfig   (src/.../view.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/configs/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CorsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyCorsOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    origin: 'http://localhost:3000',\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE'],\n    credentials: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/infra/super-cache/super-cache.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DRIVER_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_CACHE_DRIVER'\n                    \n                \n\n\n        \n    \n\n    src/bootstrap.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  BasicAuthModule,\n  InfraModule,\n  CoreModule,\n  PluginModule,\n  RouteModule\n]\n                    \n                \n\n\n        \n    \n\n    src/core/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    UserModule\n]\n                    \n                \n\n\n        \n    \n\n    src/infra/infra.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    SuperObserveModule.forRoot(),\n    SuperConfigModule,\n    SuperCacheModule.forRoot({\n        driver: 'file',\n        driverOptions: {\n            path: './storage/cache.json',\n            ttl: 60\n        }\n    }),\n    SequelizeModule.forRootAsync({\n        imports: [SuperConfigModule],\n        inject: [SuperConfigService],\n        useFactory: (configService: SuperConfigService) => ({\n            dialect: 'postgres',\n            host: configService.env.DATABASE_HOST,\n            port: configService.env.DATABASE_PORT,\n            username: configService.env.DATABASE_USERNAME,\n            password: configService.env.DATABASE_PASSWORD,\n            database: configService.env.DATABASE_NAME,\n            logging: configService.env.DATABASE_DEBUG,\n            autoLoadModels: false,\n            synchronize: false,\n            dialectOptions: {\n                ssl: {\n                    require: true,\n                    rejectUnauthorized: false,\n                },\n            },\n            models: [User],\n        }),\n    }),\n    SuperServerModule,\n    UmzugModule,\n]\n                    \n                \n\n\n        \n    \n\n    src/plugins/plugin.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HealthModule\n]\n                    \n                \n\n\n        \n    \n\n    src/infra/super-observe/super-observe.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SUPER_OBSERVE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_OBSERVE_KEY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsePerformance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(SUPER_OBSERVE_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/infra/super-config/super-config.default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SuperConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SuperConfigOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    APP_NAME: 'default-api',\n    APP_ENV: 'local',\n    APP_HOST: '0.0.0.0',\n    APP_PORT: 8000,\n    APP_DEBUG: false,\n    APP_SECRET: 'e12b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v3w4x5y6z7a8',\n    APP_TIMEZONE: 'UTC',\n    APP_CLIENT_URL: 'localhost',\n\n    AUTH_LIFETIME: 3600,\n    AUTH_SALTROUND: 10,\n\n    DATABASE_TYPE: 'postgres',\n    DATABASE_HOST: 'localhost',\n    DATABASE_PORT: 5432,\n    DATABASE_NAME: 'default_db',\n    DATABASE_USERNAME: 'user',\n    DATABASE_PASSWORD: 'password',\n    DATABASE_SSL: false,\n    DATABASE_DEBUG: false,\n\n    REDIS_HOST: 'localhost',\n    REDIS_PORT: 6379,\n    REDIS_USERNAME: '',\n    REDIS_PASSWORD: '',\n    REDIS_TTL: 3600,\n\n    MAILER_HOST: 'smtp.example.com',\n    MAILER_PORT: 587,\n    MAILER_USERNAME: 'user@example.com',\n    MAILER_PASSWORD: 'password',\n    MAILER_SECURE: false,\n\n    ENABLE_HELMET: true,\n    ENABLE_CORS: true,\n    ENABLE_COMPRESSION: true,\n    ENABLE_UNDER_PRESSURE: true,\n    ENABLE_SHUTDOWN_HOOKS: true,\n    ENABLE_VIEW: true\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/under-pressure.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UnderPressureConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyUnderPressureOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    maxEventLoopDelay: 1000,\n    maxHeapUsedBytes: 1e9,\n    maxRssBytes: 1e9,\n    healthCheck: async () => {\n        return { status: 'ok' };\n    },\n    healthCheckInterval: 5000,\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/validation.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidationPipeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    transform: true,\n    whitelist: true,\n    forbidNonWhitelisted: true,\n    forbidUnknownValues: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/version.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VersionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     VersioningOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: VersioningType.URI,\n  defaultVersion: '1',\n  prefix: 'api/v',\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/view.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyViewOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    engine: {\n        ejs: require('ejs'),\n    },\n    root: join(__dirname, '..', '..', 'views', 'resource'),\n    layout: '',\n    includeViewExtension: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
