var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/BasicAuthController.html",[0,1.718,1,2.674]],["body/controllers/BasicAuthController.html",[0,2.038,1,4.095,2,2.038,3,0.201,4,0.178,5,0.156,6,3.898,7,3.884,8,3.477,9,3.173,10,0.515,11,1.387,12,2.951,13,5.012,14,6.07,15,3.884,16,4.424,17,2.63,18,0.017,19,4.502,20,1.159,21,4.502,22,1.463,23,1.399,24,0.641,25,1.028,26,4.095,27,1.387,28,2.928,29,4.502,30,4.502,31,0.67,32,3.884,33,3.477,34,3.477,35,0.709,36,3.521,37,4.487,38,3.884,39,3.884,40,3.173,41,4.502,42,4.534,43,0.94,44,2.404,45,3.477,46,4.502,47,0.201,48,0.156,49,1.937,50,1.844,51,4.502,52,4.502,53,4.502,54,1.514,55,4.502,56,4.502,57,4.502,58,3.477,59,3.884,60,0.013,61,0.013]],["title/injectables/BasicAuthGuard.html",[40,2.674,62,0.829]],["body/injectables/BasicAuthGuard.html",[3,0.252,4,0.224,5,0.196,6,3.422,9,4.711,18,0.017,31,0.636,35,0.889,40,4.711,47,0.252,48,0.196,60,0.015,61,0.015,62,1.46,63,2.313,64,4.872,65,4.05,66,6.684,67,5.647,68,3.98]],["title/modules/BasicAuthModule.html",[69,0.757,70,1.913]],["body/modules/BasicAuthModule.html",[1,4.41,2,2.534,3,0.19,4,0.168,5,0.147,6,2.577,18,0.017,31,0.714,35,0.67,36,4.298,37,4.832,38,3.668,47,0.19,48,0.147,60,0.012,61,0.012,68,2.997,69,1.249,70,3.777,71,1.445,72,1.66,73,1.829,74,1.829,75,1.66,76,2.443,77,1.66,78,3.668,79,3.668,80,4.617,81,4.026,82,2.408,83,1.829,84,1.742,85,4.252,86,4.252,87,3.284,88,5.597,89,5.398,90,4.073,91,2.767,92,4.252,93,2.997,94,2.413,95,2.029,96,3.284,97,4.252,98,4.252,99,2.671,100,4.252,101,2.577,102,2.767,103,2.997,104,4.252,105,4.252,106,3.668,107,4.252,108,4.252,109,4.252,110,3.668]],["title/injectables/BasicAuthService.html",[36,2.299,62,0.829]],["body/injectables/BasicAuthService.html",[3,0.17,4,0.151,5,0.132,6,3.852,10,0.435,11,1.24,12,2.813,13,4.481,15,4.481,16,4.137,18,0.017,20,1.18,22,1.922,23,1.838,24,0.842,25,1.351,26,2.68,27,1.24,31,0.654,35,0.599,36,3.147,39,3.281,47,0.17,48,0.132,50,2.127,54,1.354,60,0.011,61,0.011,62,1.134,63,1.558,87,2.937,94,2.158,95,3.354,96,2.937,111,3.281,112,5.194,113,2.127,114,3.281,115,7.03,116,3.803,117,4.481,118,3.803,119,2.481,120,5.194,121,1.5,122,2.16,123,3.803,124,3.584,125,3.803,126,4.011,127,3.281,128,3.281,129,2.028,130,2.158,131,2.334,132,2.981,133,3.803,134,3.661,135,1.935,136,5.194,137,4.481,138,5.194,139,3.803,140,3.803,141,3.803,142,3.281,143,3.281,144,3.803,145,3.803,146,3.803,147,5.194,148,3.803,149,3.147,150,3.281,151,3.281,152,1.815]],["title/injectables/BasicAuthStrategy.html",[62,0.829,80,2.47]],["body/injectables/BasicAuthStrategy.html",[3,0.208,4,0.184,5,0.161,6,3.96,9,4.184,10,0.533,11,1.417,12,2.677,18,0.017,20,1.185,22,1.929,23,1.845,24,0.845,25,1.356,27,1.111,28,2.347,31,0.655,35,0.733,37,4.585,47,0.208,48,0.161,54,1.214,60,0.013,61,0.013,62,1.297,63,1.907,65,3.597,68,3.281,80,3.864,90,4.627,91,3.03,106,4.017,113,1.907,124,2.821,143,4.017,153,4.017,154,5.936,155,5.936,156,5.121,157,4.656,158,5.936,159,4.656,160,4.656,161,4.656,162,4.656,163,4.017,164,4.017,165,1.818,166,4.656,167,4.656,168,4.656,169,2.108,170,4.656,171,4.656,172,3.281,173,4.656,174,4.656]],["title/interfaces/BootstrapFunctionArgs.html",[175,1.08,176,2.674]],["body/interfaces/BootstrapFunctionArgs.html",[3,0.222,4,0.196,5,0.172,10,0.567,18,0.017,24,1.002,25,1.411,31,0.67,35,0.781,43,1.035,47,0.222,60,0.013,61,0.013,103,4.963,175,1.411,176,4.353,177,2.244,178,4.277,179,4.277,180,1.474,181,6.075,182,3.816,183,5.438,184,7.041,185,4.267,186,4.267,187,4.277,188,4.277,189,2.814,190,4.277,191,4.958]],["title/modules/BootstrapModule.html",[69,0.757,192,2.674]],["body/modules/BootstrapModule.html",[3,0.205,4,0.182,5,0.159,18,0.017,31,0.689,35,0.723,47,0.205,48,0.159,60,0.013,61,0.013,69,1.295,70,3.65,71,1.56,72,1.791,73,1.974,74,1.974,75,1.791,76,1.791,77,1.791,82,2.531,83,1.974,84,1.88,99,2.806,131,1.56,192,5.465,193,3.959,194,3.959,195,3.866,196,3.866,197,3.866,198,3.65,199,3.544,200,4.589,201,4.589,202,4.589,203,4.589,204,4.589,205,4.589,206,3.564]],["title/interfaces/CacheDriver.html",[175,1.08,207,1.481]],["body/interfaces/CacheDriver.html",[3,0.156,4,0.139,5,0.17,10,0.4,11,1.17,18,0.017,20,1.288,22,2.315,23,2.006,24,1.039,25,1.474,27,1.541,43,1.397,47,0.313,60,0.011,61,0.011,119,2.818,121,1.664,122,1.188,175,1.904,177,1.583,207,1.913,208,2.274,209,1.867,210,2.97,211,2.97,212,2.97,213,2.97,214,2.218,215,3.497,216,3.021,217,2.218,218,3.497,219,3.11,220,2.97,221,3.454,222,2.218,223,3.497,224,2.218,225,3.497,226,2.218,227,1.906,228,2.511,229,3.497,230,2.109,231,1.505,232,1.432,233,2.279,234,2.778,235,2.109,236,1.188,237,2.109,238,1.244,239,2.119,240,2.119,241,2.119,242,1.505,243,2.109,244,1.668,245,1.505,246,1.583,247,1.762,248,2.926,249,1.505,250,3.274,251,1.668,252,1.985]],["title/modules/CoreModule.html",[69,0.757,195,2.026]],["body/modules/CoreModule.html",[3,0.219,4,0.194,5,0.17,18,0.017,31,0.584,35,0.773,47,0.219,48,0.17,60,0.013,61,0.013,69,1.336,70,3.536,71,1.668,72,1.916,73,2.111,74,2.111,75,1.916,76,1.916,77,1.916,82,2.64,83,2.111,84,2.01,99,2.928,131,1.668,195,4.196,196,3.745,197,3.745,198,3.536,206,3.719,253,4.907,254,4.907,255,3.79,256,3.719,257,4.907]],["title/classes/CreateUserDto.html",[48,0.131,258,2.299]],["body/classes/CreateUserDto.html",[3,0.178,4,0.158,5,0.138,10,0.456,17,3.353,18,0.017,20,1.478,24,1.054,25,1.224,31,0.379,47,0.178,48,0.186,60,0.012,61,0.012,121,1.69,122,2.059,124,3.671,180,1.28,258,3.249,259,1.804,260,6.446,261,3.078,262,5.227,263,5.227,264,5.227,265,5.227,266,5.227,267,5.227,268,5.227,269,5.227,270,6.569,271,3.986,272,3.986,273,3.986,274,3.779,275,6.058,276,3.986,277,3.986,278,3.986,279,5.227,280,3.986,281,3.986,282,5.361,283,4.625,284,3.986,285,3.986,286,3.986,287,3.986,288,5.361,289,3.078]],["title/classes/DatabaseDriver.html",[48,0.131,290,2.154]],["body/classes/DatabaseDriver.html",[3,0.062,4,0.055,5,0.048,10,0.158,11,0.565,12,2.906,18,0.018,20,0.959,22,1.783,23,1.398,24,0.805,25,1.027,27,0.985,28,1.85,31,0.428,43,1.058,47,0.164,48,0.127,49,1.579,54,1.771,60,0.005,61,0.005,113,0.566,119,2.703,121,1.484,122,0.47,129,2.266,130,1.759,131,2.491,132,3.545,135,1.367,149,3.071,165,0.923,169,0.626,180,0.565,207,1.756,208,1.723,210,1.433,211,1.433,212,1.433,213,1.433,214,1.867,216,3.02,217,1.867,219,2.974,220,2.5,221,0.974,222,1.867,224,1.867,226,1.867,227,1.758,228,1.969,230,1.018,231,0.595,232,0.566,233,1.838,234,2.181,235,1.018,236,0.804,237,1.579,238,0.492,243,1.018,244,0.659,245,0.595,246,2.294,249,1.334,259,0.626,290,1.342,291,0.9,292,2.202,293,0.974,294,2.365,295,2.5,296,3.003,297,1.382,298,1.382,299,1.071,300,1.382,301,1.382,302,2.586,303,1.382,304,0.784,305,0.974,306,0.974,307,0.837,308,0.974,309,1.433,310,0.9,311,0.784,312,0.784,313,0.974,314,0.974,315,0.974,316,0.974,317,3.73,318,2.586,319,2.185,320,0.974,321,3.299,322,2.5,323,0.974,324,2.5,325,3.73,326,0.974,327,2.185,328,1.667,329,1.667,330,0.974,331,0.974,332,3.444,333,2.185,334,2.927,335,1.667,336,0.974,337,0.974,338,0.974,339,0.974,340,0.974,341,0.974,342,1.667,343,0.974,344,0.974,345,2.907,346,0.974,347,2.586,348,0.974,349,0.974,350,2.586,351,2.907,352,2.185,353,1.667,354,0.974,355,0.784,356,0.974,357,0.974,358,0.974,359,0.974,360,0.974,361,0.974,362,0.974,363,1.539,364,0.974,365,1.433,366,0.974,367,0.974,368,0.974,369,0.974,370,3.572,371,2.907,372,2.907,373,2.907,374,3.169,375,3.73,376,2.224,377,2.586,378,2.185,379,2.017,380,1.667,381,1.667,382,2.185,383,2.586,384,0.974,385,1.667,386,2.907,387,3.169,388,2.185,389,0.974,390,0.974,391,0.974,392,0.974,393,0.974,394,0.974,395,0.974,396,0.974,397,0.9,398,0.9,399,0.974,400,0.697,401,0.974,402,1.667,403,1.667,404,0.974,405,0.974,406,1.667,407,1.667,408,0.974,409,0.974,410,1.667,411,0.974,412,1.667,413,0.974,414,0.784,415,0.9,416,2.185,417,0.974,418,0.974,419,2.586,420,1.667,421,0.974,422,1.667,423,0.974,424,0.974,425,0.974,426,0.974]],["title/interfaces/DatabaseOptions.html",[175,1.08,237,1.633]],["body/interfaces/DatabaseOptions.html",[3,0.188,4,0.166,5,0.192,10,0.48,18,0.017,24,0.942,25,1.511,43,0.876,47,0.327,60,0.012,61,0.012,119,2.686,121,1.598,122,1.426,175,2.011,177,1.899,180,1.324,207,1.638,208,1.426,209,2.24,214,1.899,217,1.899,219,1.899,222,1.899,224,1.899,226,1.899,227,1.724,228,2.273,230,2.387,231,1.805,232,1.719,233,2.429,234,3.149,235,2.387,236,1.426,237,2.675,238,2.353,239,2.543,240,2.543,241,4.008,242,2.675,243,2.387,244,2.002,245,1.805,246,1.899,247,2.115,248,3.156,249,1.805,250,3.532,251,2.002,252,2.381]],["title/guards/DevelopmentGuard.html",[427,2.931,428,2.47]],["body/guards/DevelopmentGuard.html",[3,0.231,4,0.205,5,0.179,10,0.592,11,1.514,18,0.017,20,1.032,22,1.681,23,1.608,24,0.736,25,1.181,27,1.235,31,0.493,35,0.815,47,0.231,48,0.179,54,1.348,60,0.014,61,0.014,62,1.385,134,3.646,135,1.927,152,2.468,242,2.728,292,2.762,428,4.127,429,5.173,430,4.463,431,7.146,432,6.34,433,5.519,434,5.173,435,5.173,436,5.173,437,4.463,438,5.173,439,4.463,440,5.173,441,3.995,442,5.173]],["title/interfaces/ExtraSetOptions.html",[175,1.08,228,1.554]],["body/interfaces/ExtraSetOptions.html",[3,0.193,4,0.171,5,0.196,10,0.493,18,0.017,24,0.897,25,1.29,43,0.9,47,0.329,60,0.012,61,0.012,119,2.709,121,1.608,122,1.465,175,2.026,177,1.951,180,1.348,207,1.682,208,1.465,209,2.301,214,1.951,217,1.951,219,1.951,222,1.951,224,1.951,226,1.951,227,1.755,228,2.58,230,2.43,231,1.854,232,1.765,233,2.441,234,3.167,235,2.43,236,1.465,237,2.43,238,1.533,239,2.611,240,2.611,241,2.611,242,1.854,243,2.43,244,2.056,245,1.854,246,1.951,247,2.172,248,3.189,249,1.854,250,3.569,251,2.056,252,2.446]],["title/classes/FileDriver.html",[48,0.131,355,2.154]],["body/classes/FileDriver.html",[3,0.06,4,0.053,5,0.046,10,0.153,11,0.549,12,2.936,18,0.018,20,1.08,22,1.815,23,1.469,24,0.836,25,1.191,27,1.128,28,1.809,31,0.42,43,1.166,47,0.16,48,0.124,49,1.544,54,1.759,60,0.005,61,0.005,113,0.547,119,2.716,121,1.484,122,0.454,129,2.488,130,1.716,131,2.48,132,3.525,135,1.337,149,3.024,165,0.897,169,0.605,180,0.549,207,1.724,208,1.898,210,1.393,211,1.393,212,1.393,213,1.393,214,1.83,216,2.982,217,1.83,219,2.95,220,2.45,221,0.942,222,1.83,224,1.83,226,1.83,227,1.736,228,1.656,230,0.989,231,0.575,232,0.547,233,1.908,234,2.329,235,1.544,236,0.781,237,0.989,238,0.475,243,0.989,244,0.638,245,0.575,246,2.259,249,1.301,259,0.605,290,0.759,291,0.87,292,2.159,293,0.942,295,2.45,296,2.832,299,1.04,302,1.62,304,0.759,305,0.942,306,0.942,307,0.81,308,0.942,309,1.393,310,0.87,311,0.759,312,0.759,313,0.942,314,0.942,315,0.942,316,0.942,317,3.677,318,2.529,319,2.13,320,0.942,321,3.248,322,2.45,323,0.942,324,2.45,325,3.677,326,0.942,327,2.13,328,1.62,329,1.62,330,0.942,331,0.942,332,3.395,333,2.13,334,2.874,335,1.62,336,0.942,337,0.942,338,0.942,339,0.942,340,0.942,341,0.942,342,1.62,343,0.942,344,0.942,345,3.331,346,0.942,347,2.529,348,0.942,349,0.942,350,2.529,351,2.849,352,2.13,353,1.62,354,0.942,355,1.304,356,2.13,357,0.942,358,0.942,359,0.942,360,2.529,361,0.942,362,0.942,363,1.496,364,0.942,365,1.393,366,1.62,367,0.942,368,0.942,369,0.942,370,3.677,371,2.849,372,2.849,373,2.849,374,3.112,375,3.677,376,2.175,377,2.529,378,2.13,379,1.967,380,1.62,381,1.62,382,2.13,383,2.529,384,0.942,385,1.62,386,2.849,387,3.112,388,2.13,389,0.942,390,0.942,391,0.942,392,0.942,393,0.942,394,0.942,395,0.942,396,0.942,397,0.87,398,0.87,399,0.942,400,0.674,401,0.942,402,1.62,403,1.62,404,0.942,405,0.942,406,1.62,407,1.62,408,0.942,409,0.942,410,1.62,411,0.942,412,1.62,413,0.942,414,0.759,415,0.87,416,2.13,417,0.942,418,0.942,419,2.529,420,1.62,421,0.942,422,1.62,423,0.942,424,0.942,425,0.942,426,0.942,443,2.298,444,2.298,445,1.337,446,1.337,447,1.337,448,1.337,449,1.337,450,1.337,451,1.337,452,1.337]],["title/interfaces/FileOptions.html",[175,1.08,235,1.633]],["body/interfaces/FileOptions.html",[3,0.19,4,0.168,5,0.194,10,0.485,18,0.017,24,0.946,25,1.276,43,0.886,47,0.328,60,0.012,61,0.012,119,2.695,121,1.636,122,1.442,175,2.017,177,1.92,180,1.334,207,1.656,208,1.442,209,2.265,214,1.92,217,1.92,219,1.92,222,1.92,224,1.92,226,1.92,227,1.737,228,2.289,230,2.405,231,1.825,232,1.738,233,2.434,234,3.156,235,2.689,236,2.258,237,2.405,238,1.509,239,2.571,240,2.571,241,2.571,242,1.825,243,2.405,244,2.024,245,1.825,246,1.92,247,2.138,248,3.17,249,1.825,250,3.547,251,2.024,252,2.408]],["title/interfaces/HeaderSettingsOptions.html",[175,1.08,453,2.47]],["body/interfaces/HeaderSettingsOptions.html",[3,0.222,4,0.196,5,0.172,10,0.567,18,0.017,24,0.958,47,0.276,60,0.013,61,0.013,121,1.719,175,1.758,177,2.244,180,1.474,233,1.611,236,1.685,242,2.895,312,2.814,453,4.02,454,3.829,455,3.829,456,5.438,457,5.438,458,5.438,459,3.227,460,3.829,461,3.829,462,3.829,463,3.829,464,3.829,465,3.494,466,3.829,467,3.743,468,3.829,469,4.77]],["title/controllers/HealthController.html",[0,1.718,470,2.674]],["body/controllers/HealthController.html",[0,2.354,2,2.354,3,0.232,4,0.206,5,0.18,10,0.595,11,1.519,12,2.815,17,2.354,18,0.017,20,1.038,27,1.242,28,2.621,31,0.654,34,4.017,35,0.819,47,0.232,48,0.18,49,2.238,50,2.13,54,1.356,60,0.014,61,0.014,428,3.385,470,4.483,471,4.487,472,5.53,473,5.201,474,5.201,475,4.164,476,4.487,477,4.487,478,5.201,479,4.487,480,4.487,481,5.201]],["title/modules/HealthModule.html",[69,0.757,482,2.299]],["body/modules/HealthModule.html",[2,2.875,3,0.232,4,0.205,5,0.18,18,0.017,31,0.654,35,0.817,47,0.232,48,0.18,60,0.014,61,0.014,69,1.37,71,1.763,72,2.025,73,2.232,74,2.232,75,2.025,76,2.68,77,2.025,82,2.733,83,2.232,84,2.125,470,4.838,475,4.525,476,4.475,482,4.525,483,4.475,484,4.475,485,5.187,486,4.133,487,5.187]],["title/injectables/HealthService.html",[62,0.829,475,2.299]],["body/injectables/HealthService.html",[3,0.24,4,0.212,5,0.186,10,0.613,11,1.547,18,0.017,20,1.293,27,1.28,31,0.511,35,0.844,47,0.24,48,0.186,54,1.398,58,5.005,60,0.014,61,0.014,62,1.415,63,2.196,113,2.853,121,1.171,472,5.587,475,3.927,488,4.625,489,5.361,490,5.361,491,3.249,492,4.625]],["title/modules/InfraModule.html",[69,0.757,196,2.026]],["body/modules/InfraModule.html",[3,0.173,4,0.154,5,0.182,18,0.017,31,0.694,35,0.611,44,2.072,47,0.173,48,0.134,60,0.011,61,0.011,69,1.193,70,3.23,71,1.319,72,1.515,73,1.67,74,1.67,75,1.515,76,1.515,77,1.515,82,2.266,83,1.67,84,1.589,90,2.526,93,2.735,94,2.202,95,2.512,96,2.997,99,2.852,101,2.351,102,2.526,122,1.319,131,1.319,152,1.851,165,2.616,169,2.705,189,2.988,195,3.422,196,4.088,197,3.422,198,3.23,206,3.191,208,1.319,231,1.67,232,1.589,234,1.67,236,1.319,248,1.851,250,2.072,251,1.851,486,3.427,493,3.88,494,3.88,495,2.997,496,3.622,497,3.88,498,3.392,499,3.348,500,3.191,501,2.526,502,3.88,503,3.191,504,3.88,505,2.735,506,3.88,507,2.735,508,3.88,509,3.348,510,3.348,511,3.348,512,3.348,513,3.348,514,3.348,515,3.348,516,3.348,517,3.348,518,3.348,519,3.348,520,3.348,521,3.348,522,3.348,523,3.348,524,3.348,525,3.348,526,3.348,527,3.348,528,3.348,529,3.348,530,3.348]],["title/classes/LoginDto.html",[16,2.47,48,0.131]],["body/classes/LoginDto.html",[3,0.24,4,0.212,5,0.186,10,0.613,16,4.218,17,2.933,18,0.017,20,1.293,24,0.922,31,0.511,47,0.24,48,0.224,60,0.014,61,0.014,121,1.58,122,2.367,124,4.22,180,1.547,259,2.427,270,6.008,279,6.008,289,4.141,531,4.625,532,5.361,533,5.361]],["title/classes/MemoryDriver.html",[48,0.131,414,2.154]],["body/classes/MemoryDriver.html",[3,0.061,4,0.054,5,0.047,10,0.155,11,0.556,12,2.898,18,0.018,20,1.048,22,1.77,23,1.384,24,0.821,25,1.017,27,0.974,28,1.828,31,0.424,43,1.138,47,0.162,48,0.126,49,1.56,54,1.764,60,0.005,61,0.005,113,0.556,119,2.694,121,1.479,122,0.461,129,2.432,130,1.736,131,2.485,132,3.534,135,1.52,149,3.046,165,0.909,169,0.614,180,0.556,207,1.739,208,1.851,210,1.411,211,1.411,212,1.411,213,1.411,214,1.847,216,2.999,217,1.847,219,2.961,220,2.473,222,1.847,224,1.847,226,1.847,227,1.793,228,2.151,230,1.002,231,0.584,232,0.556,233,1.875,234,2.163,235,1.002,236,0.792,237,1.002,238,0.483,243,1.56,244,1.459,245,0.584,246,2.275,249,1.316,259,0.614,290,0.77,291,0.884,292,2.179,293,0.957,295,2.473,296,3.091,299,1.384,302,1.641,304,0.77,305,0.957,306,0.957,307,0.823,308,0.957,309,1.411,310,0.884,311,0.77,312,0.77,313,0.957,314,0.957,315,0.957,316,0.957,317,3.701,318,2.556,319,2.155,320,0.957,321,3.272,322,2.473,323,0.957,324,2.473,325,3.701,326,0.957,327,2.155,328,1.641,329,1.641,330,0.957,331,0.957,332,3.418,333,2.155,334,2.898,335,1.641,336,0.957,337,0.957,338,0.957,339,0.957,340,0.957,341,0.957,342,1.641,343,0.957,344,0.957,345,2.876,346,0.957,347,2.556,348,0.957,349,0.957,350,2.556,351,2.876,352,2.155,353,1.641,354,0.957,355,0.77,356,0.957,357,0.957,358,0.957,359,0.957,360,0.957,361,0.957,362,0.957,363,1.516,364,0.957,365,1.411,366,0.957,367,0.957,368,0.957,369,0.957,370,3.839,371,2.876,372,2.876,373,2.876,374,3.139,375,3.701,376,2.197,377,2.556,378,2.155,379,1.991,380,1.641,381,1.641,382,2.155,383,2.556,384,0.957,385,1.641,386,2.876,387,3.139,388,2.155,389,0.957,390,0.957,391,0.957,392,0.957,393,0.957,394,0.957,395,0.957,396,0.957,397,0.884,398,0.884,399,0.957,400,0.684,401,0.957,402,1.641,403,1.641,404,0.957,405,0.957,406,1.641,407,1.641,408,0.957,409,0.957,410,1.641,411,0.957,412,1.641,413,0.957,414,1.322,415,1.516,416,2.155,417,0.957,418,0.957,419,2.556,420,1.641,421,0.957,422,1.641,423,0.957,424,0.957,425,0.957,426,0.957,534,2.329,535,1.357,536,1.357,537,1.357,538,1.357,539,1.357,540,1.357,541,1.357]],["title/interfaces/MemoryOptions.html",[175,1.08,243,1.633]],["body/interfaces/MemoryOptions.html",[3,0.189,4,0.167,5,0.193,10,0.483,18,0.017,24,0.944,25,1.515,43,0.882,47,0.327,60,0.012,61,0.012,119,2.691,121,1.601,122,1.435,175,2.015,177,1.912,180,1.33,207,1.649,208,1.435,209,2.255,214,1.912,217,1.912,219,1.912,222,1.912,224,1.912,226,1.912,227,1.732,228,2.283,230,2.398,231,1.817,232,1.73,233,2.468,234,3.153,235,2.398,236,1.435,237,2.398,238,1.502,239,2.559,240,2.559,241,2.559,242,1.817,243,2.683,244,3.164,245,1.817,246,1.912,247,2.129,248,3.164,249,1.817,250,3.541,251,2.015,252,2.397]],["title/modules/PluginModule.html",[69,0.757,197,2.026]],["body/modules/PluginModule.html",[3,0.216,4,0.191,5,0.167,18,0.017,31,0.633,35,0.761,47,0.216,48,0.167,60,0.013,61,0.013,69,1.327,70,3.516,71,1.642,72,1.887,73,2.079,74,2.079,75,1.887,76,1.887,77,1.887,82,2.615,83,2.079,84,1.979,99,2.9,131,1.642,195,3.725,196,3.725,197,4.19,198,3.516,206,3.683,482,3.683,542,4.832,543,4.832,544,3.732,545,4.832,546,3.683,547,4.832]],["title/classes/RedisDriver.html",[48,0.131,311,2.154]],["body/classes/RedisDriver.html",[3,0.061,4,0.054,5,0.048,10,0.157,11,0.561,12,2.903,18,0.018,20,1.008,22,1.778,23,1.392,24,0.824,25,1.154,27,0.98,28,1.841,31,0.427,43,1.102,47,0.163,48,0.127,49,1.571,54,1.768,60,0.005,61,0.005,113,0.562,119,2.7,121,1.482,122,0.466,129,2.359,130,1.75,131,2.489,132,3.541,135,1.36,149,3.061,165,0.918,169,0.621,180,0.561,207,1.749,208,1.793,210,1.424,211,1.424,212,1.424,213,1.424,214,1.859,216,3.012,217,1.859,219,2.969,220,2.489,222,1.859,224,1.859,226,1.859,227,1.753,228,1.962,230,1.571,231,0.59,232,0.562,233,1.833,234,2.173,235,1.011,236,0.799,237,1.011,238,0.488,243,1.011,244,0.655,245,0.59,246,2.287,249,1.571,259,0.621,290,0.779,291,0.893,292,2.193,293,0.967,295,2.489,296,2.867,299,1.064,302,2.574,304,0.779,305,0.967,306,0.967,307,0.831,308,0.967,309,1.424,310,0.893,311,1.334,312,1.75,313,0.967,314,0.967,315,0.967,316,0.967,317,3.718,318,2.574,319,2.173,320,0.967,321,3.288,322,2.489,323,0.967,324,2.489,325,3.718,326,0.967,327,2.173,328,1.656,329,1.656,330,0.967,331,0.967,332,3.434,333,2.173,334,2.915,335,1.656,336,0.967,337,0.967,338,0.967,339,0.967,340,0.967,341,0.967,342,1.656,343,0.967,344,0.967,345,2.895,346,0.967,347,2.574,348,0.967,349,0.967,350,2.574,351,2.895,352,2.173,353,1.656,354,0.967,355,0.779,356,0.967,357,0.967,358,0.967,359,0.967,360,0.967,361,0.967,362,0.967,363,1.53,364,0.967,365,1.424,366,0.967,367,0.967,368,0.967,369,0.967,370,3.56,371,2.895,372,2.895,373,2.895,374,3.157,375,3.718,376,2.213,377,2.574,378,2.173,379,2.007,380,1.656,381,1.656,382,2.173,383,2.574,384,0.967,385,1.656,386,2.895,387,3.157,388,2.173,389,0.967,390,0.967,391,0.967,392,0.967,393,0.967,394,0.967,395,0.967,396,0.967,397,0.893,398,0.893,399,0.967,400,0.692,401,0.967,402,1.656,403,1.656,404,0.967,405,0.967,406,1.656,407,1.656,408,0.967,409,0.967,410,1.656,411,0.967,412,1.656,413,0.967,414,0.779,415,0.893,416,2.173,417,0.967,418,0.967,419,2.574,420,1.656,421,0.967,422,1.656,423,0.967,424,0.967,425,0.967,426,0.967,548,2.35,549,1.372,550,1.372,551,1.372,552,1.372,553,1.372,554,1.372]],["title/interfaces/RedisOptions.html",[175,1.08,230,1.633]],["body/interfaces/RedisOptions.html",[3,0.183,4,0.162,5,0.189,10,0.469,18,0.017,24,0.999,25,1.496,43,0.856,47,0.325,60,0.012,61,0.012,119,2.664,121,1.651,122,2.227,175,1.998,177,1.855,180,1.304,207,1.599,208,1.392,209,2.187,214,1.855,217,1.855,219,1.855,222,1.855,224,1.855,226,1.855,227,1.697,228,2.237,230,2.643,231,2.819,232,2.684,233,2.456,234,3.132,235,2.35,236,1.392,237,2.35,238,1.457,239,2.483,240,2.483,241,2.483,242,1.763,243,2.35,244,1.955,245,1.763,246,1.855,247,2.065,248,3.126,249,1.763,250,3.498,251,1.955,252,2.325]],["title/modules/RenderModule.html",[69,0.757,546,2.299]],["body/modules/RenderModule.html",[3,0.233,4,0.207,5,0.181,18,0.017,31,0.655,35,0.821,47,0.233,48,0.181,60,0.014,61,0.014,69,1.373,71,1.772,72,2.036,73,2.244,74,2.244,75,2.036,76,2.686,77,2.036,82,2.742,83,2.244,84,2.136,99,2.488,486,4.147,546,4.531,555,4.499,556,4.499,557,4.867,558,5.215,559,5.215,560,4.028,561,5.215,562,5.215]],["title/injectables/RenderService.html",[62,0.829,557,2.47]],["body/injectables/RenderService.html",[3,0.218,4,0.193,5,0.169,10,0.557,11,1.458,17,2.204,18,0.017,20,1.219,27,1.162,31,0.581,35,0.767,47,0.218,48,0.169,50,2.733,59,4.201,60,0.013,61,0.013,62,1.334,63,1.995,129,2.605,135,2.275,180,1.458,182,3.526,227,1.513,299,2.204,397,3.169,479,5.756,557,3.975,560,3.761,563,4.201,564,6.996,565,6.107,566,4.869,567,4.869,568,6.107,569,4.869,570,4.201,571,4.869,572,4.869,573,4.869,574,4.869,575,4.869,576,4.869,577,4.869,578,4.201,579,4.869,580,4.869,581,4.869,582,4.869,583,4.869,584,4.201]],["title/injectables/ResponseFormatInterceptor.html",[62,0.829,585,2.931]],["body/injectables/ResponseFormatInterceptor.html",[3,0.135,4,0.119,5,0.104,10,0.345,11,1.051,18,0.017,20,1.312,22,0.979,23,0.936,24,0.429,25,0.688,27,1.455,31,0.626,35,0.474,47,0.135,48,0.104,50,2.132,54,1.821,60,0.01,61,0.01,62,0.962,63,1.234,121,1.39,129,2.887,131,1.769,135,2.133,169,1.363,180,1.051,182,2.887,227,0.936,236,1.497,292,1.608,299,1.363,309,1.825,312,3.25,322,2.669,324,2.669,363,1.96,415,1.96,433,4.423,453,2.866,456,2.326,457,2.326,458,2.326,459,2.866,460,2.326,461,2.326,462,2.326,463,2.326,464,3.401,465,2.123,466,2.326,467,3.155,468,2.326,469,4.02,491,1.825,584,4.941,585,3.401,586,5.815,587,2.598,588,5.727,589,5.727,590,5.727,591,5.727,592,4.491,593,3.799,594,5.205,595,3.012,596,3.012,597,3.012,598,3.012,599,2.598,600,4.491,601,4.941,602,3.012,603,3.401,604,4.491,605,4.404,606,3.012,607,3.012,608,3.012,609,3.799,610,2.326,611,2.598,612,3.012,613,4.404,614,3.012,615,3.012,616,2.598,617,3.012,618,3.012,619,3.012,620,3.012,621,3.012,622,2.598,623,3.012,624,3.012,625,3.012,626,3.012,627,4.491,628,3.012,629,3.012,630,3.012,631,4.404,632,4.404,633,6.365,634,3.012,635,3.012,636,2.598,637,3.012,638,3.012,639,4.404,640,3.012,641,3.012,642,4.404,643,2.598,644,3.012,645,3.012,646,2.598,647,4.404,648,3.012,649,3.012,650,3.012,651,3.012,652,3.012,653,2.598,654,2.598,655,3.012,656,4.404,657,3.012]],["title/interfaces/ResponseFormatResponse.html",[175,1.08,459,2.47]],["body/interfaces/ResponseFormatResponse.html",[3,0.202,4,0.179,5,0.157,10,0.518,18,0.017,24,1.092,47,0.26,60,0.013,61,0.013,121,1.719,175,1.658,177,2.048,180,1.391,233,2.095,236,2.314,242,1.946,312,3.864,453,2.944,454,3.494,455,3.494,456,3.494,457,3.494,458,3.494,459,3.793,460,5.259,461,5.259,462,5.259,463,5.259,464,5.259,465,4.799,466,3.494,467,3.531,468,3.494,469,4.501,658,5.259]],["title/controllers/RouteController.html",[0,1.718,659,2.674]],["body/controllers/RouteController.html",[0,2.884,2,2.361,3,0.233,4,0.207,5,0.181,10,0.597,11,1.521,17,2.361,18,0.017,20,1.041,27,1.245,31,0.497,35,0.821,47,0.233,48,0.181,54,1.359,58,4.921,60,0.014,61,0.014,121,1.392,467,3.16,570,4.499,659,4.491,660,4.499,661,6.183,662,5.215,663,5.215,664,6.372,665,6.372,666,5.215,667,5.215,668,5.215,669,4.499,670,4.028,671,5.215,672,5.215]],["title/modules/RouteModule.html",[69,0.757,198,1.913]],["body/modules/RouteModule.html",[2,3.036,3,0.254,4,0.225,5,0.197,18,0.017,31,0.639,35,0.895,47,0.254,48,0.197,60,0.015,61,0.015,69,1.339,71,1.931,198,3.381,659,5.031,673,5.68,674,5.68]],["title/classes/SuperCache.html",[48,0.131,304,2.154]],["body/classes/SuperCache.html",[3,0.212,4,0.188,5,0.164,10,0.542,17,2.982,18,0.017,20,1.315,24,1.017,25,1.371,31,0.451,43,1.446,47,0.212,48,0.164,60,0.013,61,0.013,65,2.87,121,1.513,152,2.863,169,2.144,180,1.433,208,2.354,216,3.517,227,2.048,233,1.95,238,1.685,246,2.982,259,2.144,296,2.688,304,3.406,400,3.025,675,4.086,676,4.635,677,4.635,678,4.737,679,4.737,680,4.737,681,6.001,682,4.737,683,5.349,684,4.23,685,5.178,686,3.658,687,2.688,688,3.658,689,4.737,690,4.086,691,4.737]],["title/modules/SuperCacheModule.html",[69,0.757,505,2.674]],["body/modules/SuperCacheModule.html",[3,0.189,4,0.168,5,0.193,11,1.01,18,0.017,20,0.845,22,1.375,23,1.316,24,0.603,25,0.967,27,1.01,31,0.632,35,0.667,43,1.165,47,0.189,48,0.147,54,1.798,60,0.012,61,0.012,69,1.246,71,1.439,76,1.653,77,1.653,101,2.565,102,3.632,131,2.256,135,2.57,165,2.437,207,2.179,208,1.897,247,3.345,248,2.02,249,1.821,251,2.02,252,2.402,290,2.402,295,2.565,299,1.916,307,2.565,311,2.402,355,2.402,414,2.402,486,3.632,505,4.4,692,3.269,693,4.815,694,3.652,695,5.581,696,4.233,697,5.386,698,5.386,699,4.233,700,2.983,701,4.233,702,5.126,703,3.652,704,4.233,705,5.581,706,4.815,707,4.233,708,4.233,709,6.637,710,4.233,711,4.233,712,4.233,713,4.233,714,6.243,715,4.233,716,4.233]],["title/injectables/SuperCacheService.html",[62,0.829,700,2.674]],["body/injectables/SuperCacheService.html",[3,0.119,4,0.106,5,0.092,10,0.305,11,0.96,12,3.137,18,0.017,20,1.375,22,2.295,23,2.022,24,1.005,25,1.486,27,1.619,31,0.383,35,0.42,43,1.458,47,0.119,48,0.092,50,1.092,54,1.796,60,0.009,61,0.009,62,0.879,63,1.092,101,1.616,113,1.648,119,2.897,121,1.628,129,1.041,131,1.367,132,2.919,165,1.041,207,2.106,208,2.373,210,2.438,211,2.438,212,2.438,213,2.438,214,1.821,216,3.473,217,1.821,219,3.119,220,2.438,221,2.836,222,1.821,224,1.821,226,1.821,227,2.142,228,2.947,248,2.312,295,1.616,307,1.616,321,2.619,332,1.736,700,2.836,717,2.301,718,5.395,719,5.395,720,4.023,721,5.395,722,2.667,723,2.667,724,2.667,725,2.667,726,2.667,727,2.667,728,2.667,729,2.667,730,4.023,731,2.667,732,2.667,733,4.023,734,2.667,735,2.667,736,2.667,737,2.667,738,2.667,739,2.667,740,2.667,741,2.667,742,2.667,743,4.023,744,2.667,745,2.667,746,4.845,747,4.023,748,2.667,749,2.667,750,2.667,751,4.845,752,2.667,753,2.667,754,2.667,755,2.667,756,2.667]],["title/modules/SuperConfigModule.html",[69,0.757,496,2.299]],["body/modules/SuperConfigModule.html",[3,0.224,4,0.199,5,0.174,18,0.017,31,0.644,35,0.791,43,1.049,47,0.224,48,0.174,60,0.014,61,0.014,69,1.35,71,1.707,72,1.961,73,2.161,74,2.161,75,1.961,76,2.642,77,2.642,82,2.679,83,2.161,84,2.058,89,4.334,91,3.269,99,2.397,165,1.961,189,2.851,486,4.053,496,4.552,498,4.415,499,4.334,757,4.334,758,4.334,759,4.334,760,5.023,761,5.023]],["title/interfaces/SuperConfigOptions.html",[175,1.08,185,2.299]],["body/interfaces/SuperConfigOptions.html",[3,0.135,4,0.12,5,0.105,10,0.346,18,0.017,24,1.11,43,0.632,47,0.135,60,0.01,61,0.01,121,1.731,175,0.861,177,1.37,180,1.055,185,2.678,189,1.717,233,2.461,242,3.334,762,2.611,763,4.433,764,4.433,765,4.433,766,4.433,767,4.433,768,4.433,769,4.433,770,4.433,771,4.433,772,4.433,773,4.433,774,4.433,775,4.433,776,4.433,777,4.433,778,4.433,779,4.433,780,4.433,781,4.433,782,4.433,783,4.433,784,4.433,785,4.433,786,4.433,787,4.433,788,4.433,789,4.433,790,4.433,791,4.433,792,4.433,793,4.433,794,4.433,795,4.433,796,4.433]],["title/injectables/SuperConfigService.html",[62,0.829,498,2.154]],["body/injectables/SuperConfigService.html",[3,0.157,4,0.139,5,0.122,9,2.474,10,0.402,11,1.173,18,0.017,20,1.131,22,1.597,23,1.527,24,0.699,25,1.122,27,0.838,31,0.585,35,0.553,43,1.283,47,0.157,48,0.122,49,1.51,50,1.438,54,1.281,60,0.011,61,0.011,62,1.073,63,1.438,90,4.361,91,2.284,103,2.474,113,1.438,129,2.213,152,2.344,156,3.028,165,1.918,181,3.028,182,1.769,185,2.977,189,3.485,190,3.028,227,2.009,242,2.114,249,1.51,251,1.675,498,2.788,593,4.239,763,2.711,764,2.711,765,2.711,766,2.711,767,2.711,768,2.711,769,2.711,770,2.711,771,2.711,772,2.711,773,2.711,774,2.711,775,2.711,776,2.711,777,2.711,778,2.711,779,2.711,780,2.711,781,2.711,782,2.711,783,2.711,784,2.711,785,2.711,786,2.711,787,2.711,788,2.711,789,2.711,790,2.711,791,2.711,792,2.711,793,2.711,794,2.711,795,2.711,796,2.711,797,3.028,798,4.913,799,4.891,800,3.51,801,4.913,802,3.51,803,3.51,804,3.51,805,2.711,806,3.51,807,3.463,808,5.174,809,3.51,810,3.51,811,3.51,812,3.51,813,3.51,814,3.51,815,3.51,816,3.51,817,3.51,818,3.51,819,3.51,820,3.51,821,3.51,822,3.51,823,3.51,824,3.51,825,3.51,826,3.51,827,3.51,828,3.51,829,3.51,830,3.51,831,3.51,832,3.51,833,3.51,834,3.51,835,3.51,836,3.51,837,3.51,838,3.51,839,3.51,840,3.51,841,3.51,842,3.51,843,3.51,844,3.51,845,3.51,846,3.51,847,3.51,848,3.51,849,3.51,850,3.51,851,3.51,852,3.51,853,3.51,854,3.51,855,3.51,856,3.51,857,3.51,858,3.51,859,3.51,860,3.51,861,3.51,862,3.51,863,3.51,864,3.51,865,3.51,866,3.51,867,3.51,868,3.51,869,3.51,870,3.51,871,3.51,872,3.51,873,3.51,874,3.51,875,3.51,876,3.51,877,3.51]],["title/classes/SuperObserve.html",[48,0.131,878,2.47]],["body/classes/SuperObserve.html",[3,0.176,4,0.156,5,0.137,10,0.451,17,3.143,18,0.017,20,1.386,24,1.07,31,0.376,43,1.482,44,3.789,47,0.176,48,0.137,60,0.012,61,0.012,65,2.39,121,1.163,152,1.882,169,3.402,180,1.271,233,2.097,238,1.403,259,1.786,274,4.893,296,4.028,400,2.683,441,4.655,676,5.362,677,5.803,683,5.481,684,3.752,686,3.046,687,2.239,688,3.046,690,3.403,878,3.465,879,3.403,880,5.199,881,5.199,882,5.199,883,5.199,884,5.199,885,3.944,886,3.944,887,3.944,888,5.324,889,3.944,890,3.944,891,3.944,892,3.944,893,3.403,894,6.027,895,3.944,896,3.403,897,3.944]],["title/injectables/SuperObserveInterceptor.html",[62,0.829,898,2.674]],["body/injectables/SuperObserveInterceptor.html",[3,0.171,4,0.152,5,0.133,10,0.439,11,1.247,18,0.017,20,1.185,22,1.697,23,1.623,24,0.743,25,1.193,27,0.915,31,0.656,35,0.604,43,1.332,44,3.405,45,2.961,47,0.171,48,0.133,49,1.65,50,2.612,54,1.361,60,0.011,61,0.011,62,1.141,63,1.57,113,1.57,129,2.319,131,2.394,135,2.485,165,2.039,180,1.247,182,3.214,227,1.192,274,4.186,292,2.047,299,1.735,365,2.323,433,4.925,441,4.033,592,4.505,599,4.505,600,5.124,601,5.502,603,2.961,604,5.124,609,4.505,610,2.961,611,3.307,636,3.307,643,3.307,646,3.307,878,2.495,880,4.505,881,4.505,882,3.307,883,3.307,884,3.307,898,3.681,899,3.307,900,3.834,901,5.94,902,5.222,903,3.834,904,5.222,905,2.961,906,4.033,907,3.307,908,5.222,909,5.222,910,3.834,911,3.834,912,3.834,913,3.834,914,3.834,915,5.222,916,3.834,917,3.834,918,4.505,919,3.834,920,3.834,921,3.307,922,3.834,923,3.834]],["title/modules/SuperObserveModule.html",[69,0.757,507,2.674]],["body/modules/SuperObserveModule.html",[3,0.187,4,0.166,5,0.145,11,0.999,12,2.269,18,0.017,20,1.106,27,1.323,31,0.672,35,0.659,43,1.297,44,3.315,47,0.187,48,0.145,49,1.801,50,2.269,54,1.091,60,0.012,61,0.012,69,1.239,71,1.423,76,1.634,77,1.634,93,2.951,94,2.376,99,1.998,101,2.537,102,2.725,129,1.634,131,1.423,132,2.792,135,2.064,152,1.998,165,2.163,182,2.792,238,2.351,292,2.235,322,2.537,324,2.537,365,3.357,398,2.725,400,2.792,507,4.376,687,2.376,693,4.78,694,5.357,697,5.357,698,4.78,706,3.612,878,3.606,898,2.951,901,5.702,905,3.233,907,3.612,921,3.612,924,4.186,925,4.186,926,6.874,927,4.186,928,4.186,929,4.186,930,4.186,931,5.54,932,4.186,933,5.54,934,4.186,935,4.186,936,4.186,937,4.186,938,4.186,939,4.186,940,4.186,941,4.186]],["title/controllers/SuperServerController.html",[0,1.718,942,2.674]],["body/controllers/SuperServerController.html",[0,2.335,2,2.335,3,0.231,4,0.204,5,0.179,10,0.59,11,1.511,17,2.335,18,0.017,20,1.03,27,1.232,31,0.652,34,3.984,35,0.813,43,1.322,47,0.231,48,0.179,49,2.22,50,2.113,54,1.345,60,0.014,61,0.014,62,1.127,165,2.014,182,2.6,428,3.358,477,4.451,480,4.451,491,3.126,501,4.12,942,4.461,943,4.451,944,6.16,945,5.159,946,4.15,947,4.451,948,5.159,949,5.159,950,5.159]],["title/modules/SuperServerModule.html",[69,0.757,500,2.299]],["body/modules/SuperServerModule.html",[2,2.814,3,0.224,4,0.198,5,0.174,18,0.017,31,0.644,35,0.789,43,1.046,47,0.224,48,0.174,60,0.014,61,0.014,69,1.349,71,1.703,72,1.956,73,2.156,74,2.156,75,1.956,76,2.639,77,2.639,82,2.675,83,2.156,84,2.052,165,2.427,500,4.549,501,3.261,942,4.764,946,4.713,947,4.322,951,4.322,952,4.322,953,4.322,954,5.01,955,5.01]],["title/injectables/SuperServerService.html",[62,0.829,946,2.299]],["body/injectables/SuperServerService.html",[3,0.156,4,0.139,5,0.121,10,0.4,11,1.17,18,0.017,20,1.224,23,1.906,24,0.698,27,0.835,28,1.762,31,0.584,35,0.551,43,1.348,47,0.156,48,0.121,50,2.741,54,0.912,60,0.011,61,0.011,62,1.07,63,1.432,103,2.465,113,2.317,121,1.339,129,2.612,131,1.923,135,1.825,180,1.17,182,3.09,227,1.087,232,2.007,236,1.666,242,1.505,299,1.583,309,2.97,437,3.017,467,3.716,491,3.429,501,4.202,627,3.017,653,4.881,654,3.017,658,2.701,684,2.465,799,4.228,807,2.465,944,5.29,946,2.97,956,3.017,957,5.658,958,4.901,959,3.497,960,4.901,961,4.228,962,4.901,963,4.901,964,4.901,965,4.901,966,5.658,967,4.901,968,4.901,969,4.901,970,4.901,971,4.901,972,3.497,973,4.901,974,3.497,975,3.497,976,3.497,977,4.901,978,3.497,979,3.497,980,3.497,981,3.497,982,3.497,983,3.497,984,4.901,985,3.497,986,3.497,987,3.497,988,3.497,989,3.497,990,3.497,991,3.497,992,3.497,993,3.497,994,3.017,995,3.497,996,3.497,997,3.497,998,3.497,999,3.497,1000,3.497,1001,3.497,1002,3.497,1003,3.497,1004,3.497,1005,3.497,1006,3.497,1007,3.497,1008,3.497,1009,3.497,1010,3.497,1011,3.497,1012,3.497,1013,3.497,1014,3.497,1015,3.497,1016,3.497,1017,3.497,1018,3.497]],["title/modules/UmzugModule.html",[69,0.757,503,2.299]],["body/modules/UmzugModule.html",[3,0.232,4,0.205,5,0.18,18,0.017,31,0.605,35,0.817,47,0.232,48,0.18,60,0.014,61,0.014,69,1.37,71,1.763,72,2.025,73,2.232,74,2.232,75,2.025,76,2.68,77,2.68,82,2.733,83,2.232,84,2.125,186,4.733,503,4.583,1019,4.475,1020,4.475,1021,4.475,1022,5.187,1023,5.187]],["title/injectables/UmzugService.html",[62,0.829,186,2.299]],["body/injectables/UmzugService.html",[3,0.157,4,0.139,5,0.122,10,0.402,11,1.174,12,3.063,18,0.017,20,1.373,22,1.143,23,1.764,24,0.7,25,0.803,27,1.467,28,2.48,31,0.585,35,0.554,47,0.157,48,0.122,49,1.513,50,2.518,54,1.479,60,0.011,61,0.011,62,1.075,63,1.44,113,1.44,121,0.768,129,2.617,130,1.996,131,1.929,132,3.098,134,2.478,135,2.41,180,1.174,182,3.26,183,5.423,186,2.981,227,1.093,236,2.089,238,2.571,299,1.592,603,3.8,687,1.996,1024,3.033,1025,6.146,1026,6.146,1027,6.146,1028,4.747,1029,3.516,1030,4.92,1031,3.516,1032,3.516,1033,3.516,1034,3.516,1035,4.92,1036,3.516,1037,4.92,1038,3.516,1039,5.675,1040,3.516,1041,3.516,1042,3.516,1043,3.516,1044,6.146,1045,3.516,1046,3.516,1047,3.516,1048,3.516,1049,3.516,1050,3.516,1051,3.516,1052,3.516,1053,3.516,1054,3.516,1055,3.516,1056,3.516,1057,3.516,1058,4.92,1059,3.516,1060,3.516,1061,3.516,1062,4.92,1063,3.516,1064,3.516,1065,3.516,1066,3.516,1067,3.516]],["title/classes/UpdateUserDto.html",[48,0.131,1068,2.47]],["body/classes/UpdateUserDto.html",[3,0.253,4,0.224,5,0.196,18,0.017,31,0.638,47,0.253,48,0.196,60,0.015,61,0.015,65,4.057,258,3.432,259,2.564,261,4.374,1068,4.358,1069,4.886,1070,6.695,1071,5.663,1072,4.886,1073,4.886,1074,4.374,1075,4.374]],["title/classes/User.html",[48,0.131,95,1.81]],["body/classes/User.html",[3,0.142,4,0.126,5,0.11,10,0.364,17,3.242,18,0.017,20,1.429,24,1.088,31,0.303,47,0.142,48,0.11,60,0.01,61,0.01,65,1.925,95,2.184,121,1.644,122,2.116,124,3.252,152,3.263,169,3.408,172,3.782,180,1.093,233,1.488,238,1.13,259,1.438,262,4.63,263,4.63,264,4.63,265,4.63,266,4.63,267,4.63,268,4.63,269,4.63,274,3.226,283,2.741,296,4.064,400,2.307,676,5.531,677,5.861,683,5.589,684,3.226,685,3.949,686,2.454,687,1.803,688,2.454,893,5.901,896,2.741,1076,2.741,1077,3.177,1078,3.177,1079,3.177,1080,3.177,1081,3.177,1082,4.578,1083,3.177,1084,3.177,1085,3.177,1086,4.578,1087,3.177,1088,3.177,1089,3.177,1090,4.578,1091,4.578,1092,4.578,1093,3.177,1094,3.177,1095,3.177,1096,3.177,1097,3.177,1098,3.177]],["title/controllers/UserController.html",[0,1.718,1099,2.674]],["body/controllers/UserController.html",[0,1.715,2,1.715,3,0.169,4,0.15,5,0.131,8,2.926,10,0.433,11,1.237,17,3.008,18,0.017,20,1.326,22,2.062,23,1.972,24,0.903,25,1.449,26,4.835,27,1.586,31,0.633,32,4.469,33,4,35,0.597,42,4.835,43,0.791,44,2.022,45,2.926,47,0.169,48,0.131,49,1.63,50,1.552,54,1.732,60,0.011,61,0.011,81,3.35,95,1.807,172,4.835,233,2.356,258,3.845,376,2.296,1028,4.559,1068,4.13,1074,4,1075,4,1099,3.651,1100,3.268,1101,5.474,1102,4.469,1103,4.469,1104,3.268,1105,3.788,1106,3.788,1107,3.788,1108,3.788,1109,3.268,1110,3.788,1111,3.788,1112,3.268,1113,3.788,1114,3.788,1115,3.268,1116,3.788,1117,3.788,1118,3.788,1119,6.345,1120,3.268,1121,3.268,1122,3.268,1123,3.268,1124,3.788,1125,3.788,1126,3.788,1127,3.788,1128,3.788,1129,3.788,1130,3.788,1131,3.788,1132,3.788,1133,3.788,1134,3.788,1135,3.788,1136,3.788]],["title/modules/UserModule.html",[69,0.757,256,2.299]],["body/modules/UserModule.html",[2,2.778,3,0.219,4,0.194,5,0.17,18,0.017,31,0.688,35,0.773,47,0.219,48,0.17,60,0.013,61,0.013,69,1.336,71,1.668,72,1.916,73,2.111,74,2.111,75,1.916,76,2.614,77,2.614,81,4.402,82,2.64,83,2.111,84,2.01,93,3.458,94,2.785,95,2.341,99,2.341,110,4.233,256,4.529,1099,4.719,1121,4.233,1137,4.233,1138,4.233,1139,4.907,1140,4.907,1141,4.907,1142,4.233]],["title/injectables/UserService.html",[62,0.829,81,2.154]],["body/injectables/UserService.html",[3,0.141,4,0.125,5,0.109,10,0.36,11,1.085,12,3.08,18,0.017,20,1.33,22,2.1,23,2.008,24,0.883,25,1.476,26,4.37,27,1.543,31,0.615,35,0.495,47,0.141,48,0.109,54,1.616,60,0.01,61,0.01,62,0.993,63,1.288,81,2.579,94,1.785,95,3.367,113,1.862,114,2.714,117,3.921,119,2.82,121,1.166,122,1.545,124,3.542,126,3.51,127,2.714,128,2.714,129,1.228,130,1.785,131,2.264,132,3.503,134,3.203,135,1.693,142,3.921,149,2.754,150,2.714,151,2.714,152,1.501,172,3.761,233,2.258,258,3.542,1028,3.51,1068,3.805,1074,3.51,1075,3.51,1101,5.043,1102,3.921,1103,3.921,1104,3.921,1109,3.921,1112,3.921,1115,3.921,1122,2.714,1123,2.714,1142,2.714,1143,2.714,1144,4.545,1145,3.146,1146,3.146,1147,3.146,1148,4.545,1149,3.146,1150,3.146,1151,3.146,1152,3.146,1153,3.146,1154,3.146,1155,4.545,1156,4.545,1157,3.146,1158,3.146,1159,3.146,1160,3.146,1161,4.545,1162,4.545,1163,3.51,1164,3.146,1165,3.146,1166,3.146,1167,3.146,1168,3.146,1169,4.545,1170,3.146,1171,3.146]],["title/coverage.html",[1172,4.005]],["body/coverage.html",[0,2.623,1,1.882,5,0.093,6,3.272,7,2.304,16,1.738,18,0.017,24,0.69,36,1.618,40,1.882,42,1.882,43,1.574,44,2.883,48,0.235,60,0.009,61,0.009,62,1.526,64,2.304,75,1.043,80,1.738,81,1.516,95,1.274,111,2.304,135,0.995,153,2.304,175,1.931,176,1.882,178,2.304,179,2.304,185,1.618,186,1.618,189,2.752,199,2.063,206,3.272,207,1.043,208,2.446,209,3.474,228,1.094,230,1.149,235,1.149,237,1.149,243,1.149,245,1.149,247,1.346,255,2.063,258,1.618,260,2.304,261,3.111,290,1.516,291,3.514,304,1.516,311,1.516,334,5.14,355,1.516,400,1.346,414,1.516,427,2.063,428,1.738,430,2.304,453,1.738,454,3.111,455,3.111,459,1.738,470,1.882,471,2.304,475,1.618,488,2.304,495,2.063,498,1.516,501,2.621,531,2.304,544,2.063,557,1.738,563,2.304,585,2.063,586,2.304,587,2.304,659,1.882,660,2.304,675,2.304,692,2.063,700,1.882,702,2.063,717,2.304,762,2.304,797,2.304,805,2.063,878,1.738,879,2.304,898,1.882,899,2.304,906,2.063,942,1.882,943,2.304,946,1.618,956,2.304,1024,2.304,1068,1.738,1069,2.304,1076,2.304,1099,1.882,1100,2.304,1143,2.304,1172,2.063,1173,2.304,1174,2.671,1175,2.671,1176,6.507,1177,7.421,1178,5.794,1179,7.065,1180,4.028,1181,4.028,1182,4.028,1183,4.849,1184,2.671,1185,4.028,1186,5.794,1187,4.849,1188,4.028,1189,2.304,1190,2.671,1191,3.475,1192,4.028,1193,4.183,1194,4.849,1195,2.304,1196,2.304,1197,2.304,1198,2.304,1199,2.304,1200,2.304,1201,2.304,1202,2.304,1203,2.304,1204,2.304,1205,2.304,1206,2.304,1207,2.304,1208,2.671]],["title/dependencies.html",[72,1.782,1209,2.731]],["body/dependencies.html",[18,0.017,35,0.716,48,0.203,60,0.013,61,0.013,68,3.203,72,1.774,87,3.51,91,2.958,94,2.58,126,3.51,163,5.043,164,3.921,183,3.51,187,5.575,188,3.921,238,2.079,289,3.51,310,2.958,560,3.51,610,3.51,670,3.51,687,2.58,905,3.51,1072,3.921,1073,3.921,1210,4.545,1211,4.545,1212,4.545,1213,4.545,1214,4.545,1215,4.545,1216,4.545,1217,4.545,1218,4.545,1219,4.545,1220,4.545,1221,5.845,1222,4.545,1223,6.821,1224,4.545,1225,4.545,1226,4.545,1227,4.545,1228,4.545,1229,5.845,1230,4.545,1231,4.545,1232,4.545,1233,5.845,1234,5.845,1235,4.545,1236,4.545,1237,4.545,1238,4.545,1239,4.545,1240,4.545,1241,4.545,1242,4.545,1243,4.545,1244,4.545,1245,4.545,1246,4.545,1247,4.545,1248,4.545,1249,4.545,1250,4.545,1251,4.545,1252,4.545]],["title/miscellaneous/functions.html",[1253,1.918,1254,3.939]],["body/miscellaneous/functions.html",[10,0.629,18,0.016,22,2.138,23,2.045,24,0.937,25,1.503,27,1.571,60,0.014,61,0.014,75,2.749,119,2.569,176,5.143,491,3.988,1193,4.745,1195,5.677,1196,5.677,1253,3.333,1254,4.745,1255,7.041,1256,5.5,1257,5.5]],["title/index.html",[10,0.362,1258,3.165,1259,3.165]],["body/index.html",[4,0.138,14,4.212,18,0.016,60,0.011,61,0.011,84,2.736,216,1.857,439,4.212,472,5.159,491,2.107,492,3,578,4.867,616,3,622,3,669,6.041,687,1.974,961,4.212,1172,2.686,1173,4.212,1260,3.478,1261,3.478,1262,5.641,1263,4.882,1264,3.478,1265,3.478,1266,3.478,1267,4.882,1268,3,1269,3.478,1270,3.478,1271,6.117,1272,3.478,1273,6.117,1274,7.002,1275,3.478,1276,6.86,1277,3.478,1278,3.478,1279,3.478,1280,4.882,1281,3.478,1282,3.478,1283,5.641,1284,3.478,1285,3.478,1286,3.478,1287,3.478,1288,3.478,1289,6.117,1290,6.68,1291,4.882,1292,3.478,1293,3.478,1294,3.478,1295,3.478,1296,3.478,1297,4.882,1298,6.117,1299,4.882,1300,3.478,1301,3.478,1302,6.68,1303,6.117,1304,3.478,1305,4.882,1306,3.478,1307,3.478,1308,3.478,1309,3.478,1310,6.117,1311,3.478,1312,3.478,1313,3.478,1314,3.478,1315,4.882,1316,3.478,1317,3.478,1318,3.478,1319,3.478,1320,3.478,1321,4.882,1322,3.478,1323,3.478,1324,3.478,1325,4.882,1326,3.478,1327,3.478,1328,5.277,1329,4.882,1330,3.478,1331,3.478,1332,3.478,1333,3.478,1334,3.478,1335,3.478,1336,3.478,1337,3.478,1338,4.882,1339,3.478,1340,3,1341,3.478,1342,3.478,1343,5.641,1344,3.478,1345,3.478,1346,3.478,1347,3.478,1348,3.478,1349,3.478,1350,4.882,1351,3.478,1352,3.478,1353,3.478,1354,3.478,1355,3.478,1356,4.882,1357,3.478,1358,3.478,1359,3.478,1360,4.882,1361,4.882,1362,3.478,1363,3.478,1364,3.478,1365,3.478,1366,3.478,1367,3.478,1368,3.478,1369,3.478,1370,3.478,1371,3.478,1372,3,1373,3.478,1374,3.478,1375,3.478,1376,3.478,1377,3.478,1378,3.478,1379,3]],["title/modules.html",[71,1.763]],["body/modules.html",[18,0.014,60,0.014,61,0.014,70,2.552,71,1.721,192,3.568,195,2.703,196,2.703,197,2.703,198,2.552,256,3.068,482,3.068,496,3.068,500,3.068,503,3.068,505,3.568,507,3.568,546,3.068,1328,6.689,1340,5.859,1380,7.753,1381,7.753,1382,7.842,1383,6.791]],["title/overview.html",[1384,4.474]],["body/overview.html",[2,1.625,18,0.017,36,3.477,60,0.011,61,0.011,63,1.47,69,0.716,70,3.729,71,1.22,72,1.401,73,1.544,74,1.544,75,1.401,76,1.401,77,1.401,78,3.096,79,3.096,80,3.734,81,4.005,82,2.147,83,1.544,84,1.47,177,1.625,186,4.194,192,5.214,193,3.096,194,3.096,195,4.047,196,4.047,197,4.047,198,3.401,256,3.949,259,1.625,427,2.772,475,3.477,482,3.758,483,3.096,484,3.096,496,3.949,498,3.928,500,3.949,503,3.949,546,3.758,555,3.096,556,3.096,557,3.734,757,3.096,758,3.096,759,3.096,807,2.529,946,4.194,951,3.096,952,3.096,953,3.096,994,3.096,1019,3.096,1020,3.096,1021,3.096,1137,3.096,1138,3.096,1163,3.854,1384,3.096,1385,3.589,1386,3.589]],["title/properties.html",[180,1.09,1209,2.731]],["body/properties.html",[18,0.017,60,0.015,61,0.015,180,1.424,467,3.614,1268,5.145,1372,5.145,1379,5.145,1387,5.964,1388,5.964]],["title/miscellaneous/typealiases.html",[1253,1.918,1389,4.566]],["body/miscellaneous/typealiases.html",[10,0.648,18,0.016,24,1.085,43,1.183,60,0.015,61,0.015,208,1.925,209,3.806,245,2.881,247,3.375,658,5.806,1253,3.432,1390,5.663,1391,5.776]],["title/miscellaneous/variables.html",[808,3.526,1253,1.918]],["body/miscellaneous/variables.html",[5,0.099,8,2.208,10,0.327,11,0.682,12,1.171,18,0.017,24,1.019,33,2.208,42,2.987,43,1.055,44,1.526,54,0.745,60,0.009,61,0.009,70,1.441,90,1.861,95,2.022,99,1.364,101,1.732,102,1.861,121,0.926,122,1.716,137,2.466,152,3.448,169,2.927,185,1.732,189,1.622,195,1.526,196,1.526,197,1.526,198,1.441,199,2.208,206,4.024,208,0.972,227,2.226,231,1.23,232,1.171,234,1.23,236,0.972,248,1.364,250,1.526,251,1.364,255,2.208,256,1.732,299,3.271,376,1.732,379,1.861,465,2.015,482,1.732,495,2.208,496,2.568,498,2.405,500,1.732,503,1.732,509,2.466,510,2.466,511,2.466,512,2.466,513,2.466,514,2.466,515,3.656,516,2.466,517,2.466,518,2.466,519,2.466,520,2.466,521,2.466,522,2.466,523,2.466,524,2.466,525,2.466,526,2.466,527,2.466,528,2.466,529,2.466,530,2.466,544,2.208,546,1.732,661,2.466,670,2.208,692,3.273,702,3.273,703,2.466,763,2.208,764,2.208,765,2.208,766,2.208,767,2.208,768,2.208,769,2.208,770,2.208,771,2.208,772,2.208,773,2.208,774,2.208,775,2.208,776,2.208,777,2.208,778,2.208,779,2.208,780,2.208,781,2.208,782,2.208,783,2.208,784,2.208,785,2.208,786,2.208,787,2.208,788,2.208,789,2.208,790,2.208,791,2.208,792,2.208,793,2.208,794,2.208,795,2.208,796,2.208,805,3.273,807,2.015,808,2.208,906,3.9,918,2.466,1120,2.466,1163,2.208,1189,3.656,1191,4.356,1197,2.466,1198,3.656,1199,2.466,1200,3.656,1201,3.656,1202,2.466,1203,3.656,1204,2.466,1205,3.656,1206,2.466,1207,3.656,1253,1.732,1391,4.818,1392,2.858,1393,2.858,1394,2.858,1395,2.858,1396,2.858,1397,2.858,1398,2.858,1399,2.858,1400,2.858,1401,2.858,1402,2.858,1403,2.858,1404,2.858,1405,2.858,1406,2.858,1407,2.858,1408,2.858,1409,2.858,1410,2.858,1411,2.858,1412,5.05,1413,4.237,1414,2.858,1415,2.858,1416,2.858,1417,2.858,1418,2.858,1419,2.858,1420,2.858,1421,2.858,1422,2.858,1423,4.237,1424,2.858,1425,2.858,1426,2.858,1427,2.858,1428,2.858,1429,2.858,1430,2.858,1431,2.858,1432,2.858,1433,2.858,1434,2.858,1435,2.858,1436,2.858,1437,2.858,1438,2.858,1439,2.858,1440,2.858,1441,2.858,1442,2.858,1443,2.858,1444,2.858,1445,2.858]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":334,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"coverage.html":{}}}],["0.0.0",{"_index":981,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["0.0.0.0",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1387,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":807,"title":{},"body":{"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":340,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["1000",{"_index":379,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["11.1.6",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1386,"title":{},"body":{"overview.html":{}}}],["13.0.1",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1385,"title":{},"body":{"overview.html":{}}}],["15",{"_index":995,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["1e9",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":109,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["2",{"_index":369,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["2.1.0",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["3.1.10",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":994,"title":{},"body":{"injectables/SuperServerService.html":{},"overview.html":{}}}],["5.7.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["587",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["6.37.7",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":512,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["6379",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.1",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":980,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["8.1.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["8.16.3",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["8000",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.3",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["_context",{"_index":435,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["accessors",{"_index":593,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperConfigService.html":{}}}],["accesstoken",{"_index":147,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["address1",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["address2",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["advance",{"_index":750,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["aftertime",{"_index":880,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["aftertime.gettime",{"_index":916,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["alias",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":1316,"title":{},"body":{"index.html":{}}}],["allownull",{"_index":677,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["already",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{}}}],["alter",{"_index":938,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["amazing",{"_index":1366,"title":{},"body":{"index.html":{}}}],["any).catch(err",{"_index":920,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["api",{"_index":465,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"miscellaneous/variables.html":{}}}],["api/v",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":181,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{}}}],["app_caches",{"_index":689,"title":{},"body":{"classes/SuperCache.html":{}}}],["app_client_url",{"_index":763,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_debug",{"_index":764,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_env",{"_index":765,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_host",{"_index":766,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":931,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["app_name",{"_index":767,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_performance_logs",{"_index":892,"title":{},"body":{"classes/SuperObserve.html":{}}}],["app_port",{"_index":768,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_secret",{"_index":769,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["app_timezone",{"_index":770,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1290,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1267,"title":{},"body":{"index.html":{}}}],["arch",{"_index":962,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["async",{"_index":12,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attributes",{"_index":1092,"title":{},"body":{"classes/User.html":{}}}],["auth",{"_index":9,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/SuperConfigService.html":{}}}],["auth.controller",{"_index":92,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.controller.ts",{"_index":7,"title":{},"body":{"controllers/BasicAuthController.html":{},"coverage.html":{}}}],["auth.controller.ts:13",{"_index":21,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.controller.ts:21",{"_index":30,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.guard",{"_index":41,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["auth.guard.ts",{"_index":64,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"coverage.html":{}}}],["auth.module",{"_index":201,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["auth.module.ts",{"_index":85,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.service",{"_index":38,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{}}}],["auth.service.ts",{"_index":111,"title":{},"body":{"injectables/BasicAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:16",{"_index":123,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:26",{"_index":118,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:9",{"_index":116,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.strategy",{"_index":98,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["auth.strategy.ts",{"_index":153,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:16",{"_index":159,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["auth.strategy.ts:7",{"_index":157,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["auth/basic",{"_index":200,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["auth_lifetime",{"_index":771,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["auth_saltround",{"_index":772,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":67,"title":{},"body":{"injectables/BasicAuthGuard.html":{}}}],["authguard('basic",{"_index":66,"title":{},"body":{"injectables/BasicAuthGuard.html":{}}}],["author",{"_index":1372,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":51,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["autoincrement",{"_index":1086,"title":{},"body":{"classes/User.html":{}}}],["autoloadmodels",{"_index":524,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["autosync",{"_index":241,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["available",{"_index":1383,"title":{},"body":{"modules.html":{}}}],["averages",{"_index":997,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["await",{"_index":132,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":1305,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1367,"title":{},"body":{"index.html":{}}}],["based",{"_index":1301,"title":{},"body":{"index.html":{}}}],["basic",{"_index":37,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{}}}],["basicauthcontroller",{"_index":1,"title":{"controllers/BasicAuthController.html":{}},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"coverage.html":{}}}],["basicauthguard",{"_index":40,"title":{"injectables/BasicAuthGuard.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"coverage.html":{}}}],["basicauthmodule",{"_index":70,"title":{"modules/BasicAuthModule.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["basicauthservice",{"_index":36,"title":{"injectables/BasicAuthService.html":{}},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["basicauthstrategy",{"_index":80,"title":{"injectables/BasicAuthStrategy.html":{}},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["bcrypt",{"_index":126,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":139,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["beforetime",{"_index":881,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["beforetime.gettime",{"_index":917,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["birthday",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["board",{"_index":1359,"title":{},"body":{"index.html":{}}}],["body",{"_index":32,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapfunctionargs",{"_index":176,"title":{"interfaces/BootstrapFunctionArgs.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrapmodule",{"_index":192,"title":{"modules/BootstrapModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules.html":{},"overview.html":{}}}],["browse",{"_index":1382,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1380,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1263,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":754,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache",{"_index":399,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.driver",{"_index":699,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.driver.ts",{"_index":291,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"coverage.html":{}}}],["cache.driver.ts:10",{"_index":548,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:112",{"_index":451,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:124",{"_index":446,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:132",{"_index":449,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:148",{"_index":447,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:163",{"_index":294,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:174",{"_index":300,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:188",{"_index":303,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:201",{"_index":297,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:205",{"_index":301,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:21",{"_index":552,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:227",{"_index":298,"title":{},"body":{"classes/DatabaseDriver.html":{}}}],["cache.driver.ts:238",{"_index":535,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:239",{"_index":536,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:240",{"_index":534,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:247",{"_index":539,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:257",{"_index":541,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:268",{"_index":537,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:272",{"_index":540,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:286",{"_index":538,"title":{},"body":{"classes/MemoryDriver.html":{}}}],["cache.driver.ts:31",{"_index":554,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:41",{"_index":550,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:45",{"_index":553,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:66",{"_index":551,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:77",{"_index":445,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:78",{"_index":444,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:85",{"_index":450,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:9",{"_index":549,"title":{},"body":{"classes/RedisDriver.html":{}}}],["cache.driver.ts:94",{"_index":452,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.driver.ts:98",{"_index":448,"title":{},"body":{"classes/FileDriver.html":{}}}],["cache.entity",{"_index":305,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.entity.ts",{"_index":675,"title":{},"body":{"classes/SuperCache.html":{},"coverage.html":{}}}],["cache.entity.ts:10",{"_index":682,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.entity.ts:13",{"_index":678,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.entity.ts:7",{"_index":680,"title":{},"body":{"classes/SuperCache.html":{}}}],["cache.interface",{"_index":307,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{}}}],["cache.interface.ts",{"_index":209,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cache.interface.ts:40",{"_index":223,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:41",{"_index":229,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:42",{"_index":215,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:43",{"_index":225,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.interface.ts:44",{"_index":218,"title":{},"body":{"interfaces/CacheDriver.html":{}}}],["cache.json",{"_index":359,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cache.module",{"_index":506,"title":{},"body":{"modules/InfraModule.html":{}}}],["cache.module.ts",{"_index":692,"title":{},"body":{"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.module.ts:19",{"_index":696,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.service",{"_index":701,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["cache.service.ts",{"_index":717,"title":{},"body":{"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:11",{"_index":724,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:15",{"_index":729,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:19",{"_index":732,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:29",{"_index":727,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:33",{"_index":735,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:37",{"_index":725,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:41",{"_index":734,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:47",{"_index":731,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:5",{"_index":723,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:57",{"_index":728,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache.service.ts:61",{"_index":726,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cache/super",{"_index":208,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cachedriver",{"_index":207,"title":{"interfaces/CacheDriver.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["cachedvalue",{"_index":751,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["cacheserviceprovider",{"_index":714,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["callhandler",{"_index":601,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["canactivate",{"_index":431,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["canactivate(_context",{"_index":432,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["case",{"_index":709,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["catch",{"_index":324,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["catch((error",{"_index":582,"title":{},"body":{"injectables/RenderService.html":{}}}],["channel",{"_index":1331,"title":{},"body":{"index.html":{}}}],["check",{"_index":472,"title":{},"body":{"controllers/HealthController.html":{},"injectables/HealthService.html":{},"index.html":{}}}],["city",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["class",{"_index":48,"title":{"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":718,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["clicks",{"_index":1315,"title":{},"body":{"index.html":{}}}],["client",{"_index":312,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["clienttimezone",{"_index":456,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["clientversion",{"_index":457,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["cloud",{"_index":1300,"title":{},"body":{"index.html":{}}}],["cluster_basicauthmodule",{"_index":78,"title":{},"body":{"modules/BasicAuthModule.html":{},"overview.html":{}}}],["cluster_basicauthmodule_providers",{"_index":79,"title":{},"body":{"modules/BasicAuthModule.html":{},"overview.html":{}}}],["cluster_bootstrapmodule",{"_index":193,"title":{},"body":{"modules/BootstrapModule.html":{},"overview.html":{}}}],["cluster_bootstrapmodule_imports",{"_index":194,"title":{},"body":{"modules/BootstrapModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":254,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_healthmodule",{"_index":483,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":484,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_inframodule",{"_index":493,"title":{},"body":{"modules/InfraModule.html":{}}}],["cluster_inframodule_imports",{"_index":494,"title":{},"body":{"modules/InfraModule.html":{}}}],["cluster_pluginmodule",{"_index":542,"title":{},"body":{"modules/PluginModule.html":{}}}],["cluster_pluginmodule_imports",{"_index":543,"title":{},"body":{"modules/PluginModule.html":{}}}],["cluster_rendermodule",{"_index":555,"title":{},"body":{"modules/RenderModule.html":{},"overview.html":{}}}],["cluster_rendermodule_providers",{"_index":556,"title":{},"body":{"modules/RenderModule.html":{},"overview.html":{}}}],["cluster_superconfigmodule",{"_index":757,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superconfigmodule_exports",{"_index":758,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superconfigmodule_providers",{"_index":759,"title":{},"body":{"modules/SuperConfigModule.html":{},"overview.html":{}}}],["cluster_superservermodule",{"_index":951,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_superservermodule_exports",{"_index":952,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_superservermodule_providers",{"_index":953,"title":{},"body":{"modules/SuperServerModule.html":{},"overview.html":{}}}],["cluster_umzugmodule",{"_index":1019,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_umzugmodule_exports",{"_index":1020,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_umzugmodule_providers",{"_index":1021,"title":{},"body":{"modules/UmzugModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1137,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1138,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1139,"title":{},"body":{"modules/UserModule.html":{}}}],["column",{"_index":683,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["column({type",{"_index":676,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["com.onrender.com/api/v1/health",{"_index":580,"title":{},"body":{"injectables/RenderService.html":{}}}],["come",{"_index":1322,"title":{},"body":{"index.html":{}}}],["computedspeed",{"_index":882,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["config",{"_index":103,"title":{},"body":{"modules/BasicAuthModule.html":{},"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["config.default",{"_index":806,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.default.ts",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.get('app_secret",{"_index":105,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["config.interface",{"_index":190,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/SuperConfigService.html":{}}}],["config.interface.ts",{"_index":762,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"coverage.html":{}}}],["config.module",{"_index":497,"title":{},"body":{"modules/InfraModule.html":{}}}],["config.module.ts",{"_index":760,"title":{},"body":{"modules/SuperConfigModule.html":{}}}],["config.service",{"_index":499,"title":{},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{}}}],["config.service.ts",{"_index":797,"title":{},"body":{"injectables/SuperConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":802,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.service.ts:14",{"_index":804,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config.service.ts:7",{"_index":800,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["config/super",{"_index":189,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":89,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/SuperConfigModule.html":{}}}],["configmodule.forroot",{"_index":761,"title":{},"body":{"modules/SuperConfigModule.html":{}}}],["configservice",{"_index":90,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"modules/InfraModule.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_debug",{"_index":523,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_host",{"_index":516,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_name",{"_index":521,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_password",{"_index":520,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_port",{"_index":517,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.env.database_username",{"_index":519,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('app_secret",{"_index":171,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["conflictexception",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('user",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["console",{"_index":1057,"title":{},"body":{"injectables/UmzugService.html":{}}}],["console.error('[supercache",{"_index":396,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["const",{"_index":131,"title":{},"body":{"injectables/BasicAuthService.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":156,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"injectables/SuperConfigService.html":{}}}],["constructor(driver",{"_index":722,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["constructor(options",{"_index":293,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["constructor(private",{"_index":49,"title":{},"body":{"controllers/BasicAuthController.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":900,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["constructor(sequelize",{"_index":1029,"title":{},"body":{"injectables/UmzugService.html":{}}}],["constructor(usermodel",{"_index":114,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["content",{"_index":361,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["context",{"_index":603,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{}}}],["context.gethandler",{"_index":911,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":636,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":646,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["continue",{"_index":386,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["controller",{"_index":0,"title":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/RouteController.html":{},"controllers/SuperServerController.html":{},"controllers/UserController.html":{}},"body":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/RouteController.html":{},"controllers/SuperServerController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":46,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["controller('user",{"_index":1124,"title":{},"body":{"controllers/UserController.html":{}}}],["controller(['health",{"_index":478,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(['super",{"_index":948,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/BasicAuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convertboolean",{"_index":798,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["convertboolean(value",{"_index":801,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["core/core.module",{"_index":204,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["coremodule",{"_index":195,"title":{"modules/CoreModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["corsconfig",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":339,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["country",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["courses",{"_index":1337,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1172,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpu.model",{"_index":1001,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpu.speed",{"_index":1003,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpus",{"_index":966,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["cpus.map(cpu",{"_index":1000,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["create",{"_index":1074,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":1125,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":1104,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto",{"_index":258,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credentials",{"_index":137,"title":{},"body":{"injectables/BasicAuthService.html":{},"miscellaneous/variables.html":{}}}],["cron",{"_index":571,"title":{},"body":{"injectables/RenderService.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":565,"title":{},"body":{"injectables/RenderService.html":{}}}],["cronexpression",{"_index":572,"title":{},"body":{"injectables/RenderService.html":{}}}],["currentstore",{"_index":390,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["currentstore[key",{"_index":391,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["cursor",{"_index":333,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["data",{"_index":464,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["database",{"_index":251,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database/migrations/*.js",{"_index":1042,"title":{},"body":{"injectables/UmzugService.html":{}}}],["database_debug",{"_index":773,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":774,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":775,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":776,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":777,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_ssl",{"_index":778,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":779,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":780,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["databasedriver",{"_index":290,"title":{"classes/DatabaseDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["databasedriver(options.driveroptions",{"_index":711,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["databaseoptions",{"_index":237,"title":{"interfaces/DatabaseOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["datatype",{"_index":686,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["datatype.bigint",{"_index":691,"title":{},"body":{"classes/SuperCache.html":{}}}],["datatype.date",{"_index":894,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.dateonly",{"_index":1098,"title":{},"body":{"classes/User.html":{}}}],["datatype.enum('male",{"_index":1097,"title":{},"body":{"classes/User.html":{}}}],["datatype.float",{"_index":895,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.integer",{"_index":896,"title":{},"body":{"classes/SuperObserve.html":{},"classes/User.html":{}}}],["datatype.now",{"_index":897,"title":{},"body":{"classes/SuperObserve.html":{}}}],["datatype.string",{"_index":893,"title":{},"body":{"classes/SuperObserve.html":{},"classes/User.html":{}}}],["date",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":647,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["date.now",{"_index":375,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["datetime",{"_index":468,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/BasicAuthController.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/RenderService.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"controllers/SuperServerController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":1333,"title":{},"body":{"index.html":{}}}],["default",{"_index":299,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["default_db",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":1091,"title":{},"body":{"classes/User.html":{}}}],["defaultsecret",{"_index":106,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{}}}],["defaultvalue",{"_index":888,"title":{},"body":{"classes/SuperObserve.html":{}}}],["defaultversion",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["del",{"_index":210,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["del(key",{"_index":214,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["delall",{"_index":211,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["delall(pattern",{"_index":217,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["delete",{"_index":376,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":1134,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@useperformance",{"_index":1113,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1289,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1304,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1297,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1314,"title":{},"body":{"index.html":{}}}],["description",{"_index":1268,"title":{},"body":{"index.html":{},"properties.html":{}}}],["detected",{"_index":624,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["development",{"_index":1277,"title":{},"body":{"index.html":{}}}],["developmentguard",{"_index":428,"title":{"guards/DevelopmentGuard.html":{}},"body":{"guards/DevelopmentGuard.html":{},"controllers/HealthController.html":{},"controllers/SuperServerController.html":{},"coverage.html":{}}}],["devtools",{"_index":1345,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":514,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["dialectoptions",{"_index":526,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":442,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["discord",{"_index":1330,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1332,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1173,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["down",{"_index":1051,"title":{},"body":{"injectables/UmzugService.html":{}}}],["driver",{"_index":248,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"miscellaneous/variables.html":{}}}],["driver_token",{"_index":702,"title":{},"body":{"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["driveroptions",{"_index":250,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["driverprovider",{"_index":705,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["dto",{"_index":26,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":142,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":1122,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":39,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["dto/update",{"_index":1123,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":915,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["dynamicmodule",{"_index":697,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["e12b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v3w4x5y6z7a8",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":1285,"title":{},"body":{"index.html":{}}}],["effectivettl",{"_index":325,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["efficient",{"_index":1264,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1295,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":670,"title":{},"body":{"controllers/RouteController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":124,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["emitter",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["enable_compression",{"_index":781,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_cors",{"_index":782,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_helmet",{"_index":783,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_shutdown_hooks",{"_index":784,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_under_pressure",{"_index":785,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["enable_view",{"_index":786,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["engine",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensure",{"_index":1293,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1349,"title":{},"body":{"index.html":{}}}],["entries",{"_index":410,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry",{"_index":372,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.destroy",{"_index":402,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.expiresat",{"_index":374,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["entry.value",{"_index":378,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["env",{"_index":799,"title":{},"body":{"injectables/SuperConfigService.html":{},"injectables/SuperServerService.html":{}}}],["err",{"_index":365,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["error",{"_index":584,"title":{},"body":{"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["error(`migration",{"_index":1045,"title":{},"body":{"injectables/UmzugService.html":{}}}],["etc",{"_index":1018,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["ex",{"_index":330,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["example",{"_index":1273,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":1093,"title":{},"body":{"classes/User.html":{}}}],["executeconfig",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["executeconfig(server",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["executed",{"_index":1062,"title":{},"body":{"injectables/UmzugService.html":{}}}],["executeserver",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["executeserver(server",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["executioncontext",{"_index":433,"title":{},"body":{"guards/DevelopmentGuard.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["existinguser",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{}}}],["experience",{"_index":1335,"title":{},"body":{"index.html":{}}}],["expiresat",{"_index":246,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{}}}],["expiresin",{"_index":108,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["export",{"_index":47,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":77,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":65,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthStrategy.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["extractjwt",{"_index":161,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":167,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["extrasetoption",{"_index":302,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoption.ttl",{"_index":326,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoption?.ttl",{"_index":404,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["extrasetoptions",{"_index":228,"title":{"interfaces/ExtraSetOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["extrasetoptions.ttl",{"_index":420,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["failed",{"_index":397,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{}}}],["fallbackvalue",{"_index":594,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["false",{"_index":169,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1308,"title":{},"body":{"index.html":{}}}],["fastify",{"_index":188,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"dependencies.html":{}}}],["fastify/compress",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["fastify/cors",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["fastify/helmet",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["fastify/under",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["fastify/view",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["fastifycorsoptions",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyunderpressureoptions",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyviewoptions",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":1318,"title":{},"body":{"index.html":{}}}],["female",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["fetch('https://api",{"_index":577,"title":{},"body":{"injectables/RenderService.html":{}}}],["few",{"_index":1310,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filedriver",{"_index":355,"title":{"classes/FileDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["filedriver(options.driveroptions",{"_index":712,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["fileoptions",{"_index":235,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["filepath",{"_index":356,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["findall",{"_index":1101,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":1102,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":1129,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":1109,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstkey",{"_index":422,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["firstname",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["focus",{"_index":1317,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1353,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":436,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["forbiddenexception('this",{"_index":440,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["forbidnonwhitelisted",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidunknownvalues",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.interceptor.ts",{"_index":587,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["format.interceptor.ts:18",{"_index":606,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:20",{"_index":608,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:27",{"_index":597,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:32",{"_index":598,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:36",{"_index":595,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:45",{"_index":596,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interceptor.ts:54",{"_index":602,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interface",{"_index":618,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["format.interface.ts",{"_index":455,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["forroot",{"_index":694,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["forroot(options",{"_index":695,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["found",{"_index":1168,"title":{},"body":{"injectables/UserService.html":{}}}],["foundkeys",{"_index":336,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["framework",{"_index":1262,"title":{},"body":{"index.html":{}}}],["freememory",{"_index":965,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["fs",{"_index":309,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["fs.existssync(packagepath",{"_index":976,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["fs.readfile(this.filepath",{"_index":362,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["fs.writefile(this.filepath",{"_index":367,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["full",{"_index":1348,"title":{},"body":{"index.html":{}}}],["function",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["function.interface.ts",{"_index":179,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{}}}],["functions",{"_index":1254,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1313,"title":{},"body":{"index.html":{}}}],["gender",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["get('')@useguards(developmentguard",{"_index":473,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id",{"_index":1128,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id')@useperformance",{"_index":1110,"title":{},"body":{"controllers/UserController.html":{}}}],["get('test",{"_index":56,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["get('test')@useperformance()@useguards(basicauthguard",{"_index":29,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["get()@useperformance",{"_index":1107,"title":{},"body":{"controllers/UserController.html":{}}}],["get(key",{"_index":222,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["getall",{"_index":212,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["getall(pattern",{"_index":224,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["getapiservice",{"_index":588,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getapiversion",{"_index":589,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getconnectiontoken",{"_index":929,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["getdriver",{"_index":719,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getenv",{"_index":803,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["getexecuted",{"_index":1025,"title":{},"body":{"injectables/UmzugService.html":{}}}],["getfallbackvalue",{"_index":607,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getmetrics",{"_index":944,"title":{},"body":{"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{}}}],["getorset",{"_index":720,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getorset(key",{"_index":730,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["getpackagedata",{"_index":590,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getpending",{"_index":1026,"title":{},"body":{"injectables/UmzugService.html":{}}}],["getstats",{"_index":721,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["gettimezone",{"_index":591,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["getting",{"_index":1258,"title":{"index.html":{}},"body":{}}],["glob",{"_index":1040,"title":{},"body":{"injectables/UmzugService.html":{}}}],["global",{"_index":486,"title":{},"body":{"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/RenderModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{}}}],["graph",{"_index":1340,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1363,"title":{},"body":{"index.html":{}}}],["guard",{"_index":427,"title":{"guards/DevelopmentGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":429,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["hands",{"_index":1334,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1323,"title":{},"body":{"index.html":{}}}],["has(key",{"_index":733,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["hashedpassword",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["head",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headersettings",{"_index":637,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.clienttimezone",{"_index":657,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.clientversion",{"_index":655,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettings.withtemplate",{"_index":645,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["headersettingsoptions",{"_index":453,"title":{"interfaces/HeaderSettingsOptions.html":{}},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["health.controller",{"_index":487,"title":{},"body":{"modules/HealthModule.html":{}}}],["health.service",{"_index":476,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["health/health.module",{"_index":545,"title":{},"body":{"modules/PluginModule.html":{}}}],["healthcheck",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthcheckinterval",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthcontroller",{"_index":470,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":482,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["healthservice",{"_index":475,"title":{"injectables/HealthService.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"coverage.html":{},"overview.html":{}}}],["heaptotal",{"_index":1011,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["heapused",{"_index":1010,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["hello",{"_index":671,"title":{},"body":{"controllers/RouteController.html":{}}}],["help",{"_index":1338,"title":{},"body":{"index.html":{}}}],["here",{"_index":1370,"title":{},"body":{"index.html":{}}}],["home",{"_index":666,"title":{},"body":{"controllers/RouteController.html":{}}}],["home'])@render('index",{"_index":662,"title":{},"body":{"controllers/RouteController.html":{}}}],["host",{"_index":231,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["hostname",{"_index":960,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["http://localhost:3000",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1376,"title":{},"body":{"index.html":{}}}],["id",{"_index":172,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["idling",{"_index":576,"title":{},"body":{"injectables/RenderService.html":{}}}],["ignoreexpiration",{"_index":168,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["implements",{"_index":292,"title":{},"body":{"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('sequelize",{"_index":239,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["imports",{"_index":99,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1095,"title":{},"body":{"classes/User.html":{}}}],["includeviewextension",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":622,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"index.html":{}}}],["infra/infra.module",{"_index":203,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["inframodule",{"_index":196,"title":{"modules/InfraModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["infrastructure",{"_index":1320,"title":{},"body":{"index.html":{}}}],["inject",{"_index":101,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperObserveModule.html":{},"miscellaneous/variables.html":{}}}],["inject('super_cache_driver",{"_index":736,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["injectable",{"_index":62,"title":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/HealthService.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"guards/DevelopmentGuard.html":{},"injectables/HealthService.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"injectables/HealthService.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":127,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["injectmodel(user",{"_index":128,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["install",{"_index":1312,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1275,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1341,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":592,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["intercept(context",{"_index":599,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["interceptorprovider",{"_index":933,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["interface",{"_index":175,"title":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":177,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"interfaces/SuperConfigOptions.html":{},"overview.html":{}}}],["interfaces/response",{"_index":617,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":629,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["invalid",{"_index":1046,"title":{},"body":{"injectables/UmzugService.html":{}}}],["ioredis",{"_index":310,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"dependencies.html":{}}}],["isdatestring",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isenum",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(['male",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ismatch",{"_index":138,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["isobserved",{"_index":909,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["isoptional",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["item",{"_index":383,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["item.expiresat",{"_index":387,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["item.value",{"_index":388,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["job",{"_index":1356,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1358,"title":{},"body":{"index.html":{}}}],["join",{"_index":616,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"index.html":{}}}],["join(__dirname",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join(process.cwd",{"_index":626,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["json",{"_index":327,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(content",{"_index":364,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(entry.value",{"_index":403,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(fs.readfilesync(packagepath",{"_index":978,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["json.parse(raw",{"_index":323,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.parse(readfilesync(packagejsonpath",{"_index":628,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["json.parse(values[i",{"_index":348,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.stringify(executed",{"_index":1065,"title":{},"body":{"injectables/UmzugService.html":{}}}],["json.stringify(pendings",{"_index":1061,"title":{},"body":{"injectables/UmzugService.html":{}}}],["json.stringify(store",{"_index":368,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["json.stringify(value",{"_index":328,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["jwt",{"_index":164,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":166,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["jwtmodule",{"_index":86,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":100,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["jwtsecretconfigured",{"_index":969,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["jwtservice",{"_index":115,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["kamil",{"_index":1373,"title":{},"body":{"index.html":{}}}],["key",{"_index":216,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"index.html":{}}}],["keylist",{"_index":351,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keylist.length",{"_index":353,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys",{"_index":332,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["keys.foreach((key",{"_index":346,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys.length",{"_index":342,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["keys.push(...foundkeys",{"_index":341,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["lastname",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["layout",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["learn",{"_index":1326,"title":{},"body":{"index.html":{}}}],["legend",{"_index":73,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":1379,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1361,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1355,"title":{},"body":{"index.html":{}}}],["literal",{"_index":658,"title":{},"body":{"interfaces/ResponseFormatResponse.html":{},"injectables/SuperServerService.html":{},"miscellaneous/typealiases.html":{}}}],["loadaverage",{"_index":963,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["local",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local').touppercase",{"_index":438,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["localhost",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":922,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["loggedat",{"_index":883,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["logger",{"_index":182,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{}}}],["logger(renderservice.name",{"_index":568,"title":{},"body":{"injectables/RenderService.html":{}}}],["logger(responseformatinterceptor.name",{"_index":605,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["logger(superobserveinterceptor.name",{"_index":904,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["logger(superobservemodule.name",{"_index":932,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["logger(superserverservice.name",{"_index":971,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["logger(umzugservice.name",{"_index":1035,"title":{},"body":{"injectables/UmzugService.html":{}}}],["logging",{"_index":522,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":13,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["login(@body",{"_index":53,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["login(dto",{"_index":15,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{}}}],["logindto",{"_index":16,"title":{"classes/LoginDto.html":{}},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["looking",{"_index":1299,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1351,"title":{},"body":{"index.html":{}}}],["mailer",{"_index":855,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["mailer_host",{"_index":787,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_password",{"_index":788,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_port",{"_index":789,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_secure",{"_index":790,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["mailer_username",{"_index":791,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["maintenance",{"_index":737,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["makes",{"_index":1306,"title":{},"body":{"index.html":{}}}],["management",{"_index":746,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["managing",{"_index":1319,"title":{},"body":{"index.html":{}}}],["map",{"_index":415,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["map((data",{"_index":644,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["match",{"_index":338,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["matching",{"_index":61,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1302,"title":{},"body":{"index.html":{}}}],["maxeventloopdelay",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxheapusedbytes",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxrssbytes",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":244,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{}}}],["memory",{"_index":252,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{}}}],["memorydriver",{"_index":414,"title":{"classes/MemoryDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["memorydriver(options.driveroptions",{"_index":713,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["memoryoptions",{"_index":243,"title":{"interfaces/MemoryOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["memoryusage",{"_index":1008,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["message",{"_index":58,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/HealthService.html":{},"controllers/RouteController.html":{}}}],["metadata",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":463,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["methods",{"_index":11,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":949,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["migration",{"_index":1047,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migration.down(context.queryinterface",{"_index":1052,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migration.up(context.queryinterface",{"_index":1050,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migrationpath",{"_index":1044,"title":{},"body":{"injectables/UmzugService.html":{}}}],["migrations",{"_index":1039,"title":{},"body":{"injectables/UmzugService.html":{}}}],["min",{"_index":996,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["miscellaneous",{"_index":1253,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1360,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1280,"title":{},"body":{"index.html":{}}}],["model",{"_index":684,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"injectables/SuperServerService.html":{},"classes/User.html":{}}}],["models",{"_index":530,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":69,"title":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module_loader",{"_index":206,"title":{},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":71,"title":{"modules.html":{}},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1298,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1374,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1346,"title":{},"body":{"index.html":{}}}],["nest",{"_index":578,"title":{},"body":{"injectables/RenderService.html":{},"index.html":{}}}],["nestfastifyapplication",{"_index":184,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{}}}],["nestframework",{"_index":1378,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":609,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["nestjs",{"_index":669,"title":{},"body":{"controllers/RouteController.html":{},"index.html":{}}}],["nestjs/common",{"_index":35,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"guards/DevelopmentGuard.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":91,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":905,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":87,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1072,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":68,"title":{},"body":{"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":187,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":560,"title":{},"body":{"modules/RenderModule.html":{},"injectables/RenderService.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":94,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":984,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["networkinterfaces",{"_index":967,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["new",{"_index":135,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":600,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["next.handle",{"_index":912,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["next.handle().pipe",{"_index":643,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["nextcursor",{"_index":335,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["no_client_info",{"_index":623,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["no_server_info",{"_index":619,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["node",{"_index":1015,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["node.js",{"_index":1261,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":968,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["notfoundexception",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":1167,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1274,"title":{},"body":{"index.html":{}}}],["null",{"_index":321,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["number",{"_index":233,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object.entries(store",{"_index":384,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["object.keys(items",{"_index":745,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["object.keys(items).length",{"_index":744,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["object.keys(keys",{"_index":352,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["object.keys(store",{"_index":389,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["observable",{"_index":604,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["observe.decorator",{"_index":45,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/SuperObserveInterceptor.html":{},"controllers/UserController.html":{}}}],["observe.decorator.ts",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observe.interceptor",{"_index":930,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.interceptor.ts",{"_index":899,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"coverage.html":{}}}],["observe.interceptor.ts:16",{"_index":902,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["observe.interceptor.ts:20",{"_index":903,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["observe.model",{"_index":907,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["observe.model.ts",{"_index":879,"title":{},"body":{"classes/SuperObserve.html":{},"coverage.html":{}}}],["observe.model.ts:12",{"_index":886,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:15",{"_index":885,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:18",{"_index":887,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:21",{"_index":890,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:24",{"_index":889,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.model.ts:9",{"_index":891,"title":{},"body":{"classes/SuperObserve.html":{}}}],["observe.module",{"_index":508,"title":{},"body":{"modules/InfraModule.html":{}}}],["observe.module.ts",{"_index":924,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.module.ts:14",{"_index":925,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe.module.ts:29",{"_index":927,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["observe/super",{"_index":44,"title":{},"body":{"controllers/BasicAuthController.html":{},"modules/InfraModule.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":1357,"title":{},"body":{"index.html":{}}}],["official",{"_index":1303,"title":{},"body":{"index.html":{}}}],["ok",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":926,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["op",{"_index":306,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["op.in",{"_index":413,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["op.like",{"_index":409,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["open",{"_index":1362,"title":{},"body":{"index.html":{}}}],["openssl",{"_index":1017,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":295,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{}}}],["options.autosync",{"_index":394,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.driver",{"_index":708,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["options.host",{"_index":314,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.maxsize",{"_index":417,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.password",{"_index":316,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.port",{"_index":315,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.sequelize.addmodels([supercache",{"_index":393,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["options.ttl",{"_index":318,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["origin",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os",{"_index":973,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.arch",{"_index":990,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.cpus",{"_index":983,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.freemem",{"_index":999,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.hostname",{"_index":988,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.loadavg",{"_index":993,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.networkinterfaces",{"_index":985,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.platform",{"_index":989,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.totalmem",{"_index":998,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["os.uptime",{"_index":991,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1384,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1209,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":627,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["packagejson",{"_index":957,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["packagejsonpath",{"_index":625,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["packagepath",{"_index":974,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["param",{"_index":1118,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":1132,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":1119,"title":{},"body":{"controllers/UserController.html":{}}}],["part",{"_index":1347,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1071,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":1070,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":163,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":88,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["passportstrategy",{"_index":160,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["passportstrategy(strategy",{"_index":154,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["password",{"_index":122,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":236,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["path.join(process.cwd",{"_index":1041,"title":{},"body":{"injectables/UmzugService.html":{}}}],["path.resolve(__dirname",{"_index":975,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["path.resolve(options.path",{"_index":358,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["pattern",{"_index":220,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["pattern.replace(/\\*/g",{"_index":382,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["payload",{"_index":143,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{}}}],["payload.email",{"_index":174,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["payload.sub",{"_index":173,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["pendings",{"_index":1058,"title":{},"body":{"injectables/UmzugService.html":{}}}],["performance",{"_index":923,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["pg",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["pgpattern",{"_index":407,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["pid",{"_index":1006,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["ping",{"_index":479,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RenderService.html":{}}}],["pingself",{"_index":564,"title":{},"body":{"injectables/RenderService.html":{}}}],["plain",{"_index":151,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":961,"title":{},"body":{"injectables/SuperServerService.html":{},"index.html":{}}}],["please",{"_index":1329,"title":{},"body":{"index.html":{}}}],["pluginmodule",{"_index":197,"title":{"modules/PluginModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["plugins/plugin.module",{"_index":202,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["port",{"_index":232,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperServerService.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1296,"title":{},"body":{"index.html":{}}}],["post",{"_index":33,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["post('login",{"_index":52,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["post('login')@useperformance",{"_index":19,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["post()@useperformance",{"_index":1105,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":515,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":8,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["pressure",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["pressure.config.ts",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":575,"title":{},"body":{"injectables/RenderService.html":{}}}],["primarykey",{"_index":685,"title":{},"body":{"classes/SuperCache.html":{},"classes/User.html":{}}}],["primarykey()@column",{"_index":679,"title":{},"body":{"classes/SuperCache.html":{}}}],["private",{"_index":129,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":970,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.env.app_env",{"_index":437,"title":{},"body":{"guards/DevelopmentGuard.html":{},"injectables/SuperServerService.html":{}}}],["process.env.app_port",{"_index":1004,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.env.app_secret",{"_index":1005,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.memoryusage",{"_index":1009,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.pid",{"_index":1007,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["process.uptime",{"_index":654,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["process.versions",{"_index":1014,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["production",{"_index":439,"title":{},"body":{"guards/DevelopmentGuard.html":{},"index.html":{}}}],["progressive",{"_index":1260,"title":{},"body":{"index.html":{}}}],["project",{"_index":1271,"title":{},"body":{"index.html":{}}}],["promise",{"_index":119,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promises",{"_index":308,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["properties",{"_index":180,"title":{"properties.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":706,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["provider",{"_index":698,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperObserveModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":1120,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["put(':id",{"_index":1131,"title":{},"body":{"controllers/UserController.html":{}}}],["put(':id')@useperformance",{"_index":1116,"title":{},"body":{"controllers/UserController.html":{}}}],["queryinterface",{"_index":1053,"title":{},"body":{"injectables/UmzugService.html":{}}}],["questions",{"_index":1327,"title":{},"body":{"index.html":{}}}],["raw",{"_index":319,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["read",{"_index":1369,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":615,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["reading",{"_index":632,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["readonly",{"_index":50,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"controllers/HealthController.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{}}}],["readstore",{"_index":360,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["ready",{"_index":492,"title":{},"body":{"injectables/HealthService.html":{},"index.html":{}}}],["real",{"_index":1342,"title":{},"body":{"index.html":{}}}],["record",{"_index":345,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["redis",{"_index":249,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperConfigService.html":{}}}],["redis_host",{"_index":792,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_password",{"_index":793,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":794,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_ttl",{"_index":795,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redis_username",{"_index":796,"title":{},"body":{"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["redisdriver",{"_index":311,"title":{"classes/RedisDriver.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{}}}],["redisdriver(options.driveroptions",{"_index":710,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["redisoptions",{"_index":230,"title":{"interfaces/RedisOptions.html":{}},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{}}}],["reflect",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":901,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["regex",{"_index":380,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["regex.test(key",{"_index":385,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["regexp",{"_index":381,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["rejectunauthorized",{"_index":529,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":1103,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":1135,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":1112,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["render",{"_index":570,"title":{},"body":{"injectables/RenderService.html":{},"controllers/RouteController.html":{}}}],["render('index",{"_index":667,"title":{},"body":{"controllers/RouteController.html":{}}}],["render.service",{"_index":561,"title":{},"body":{"modules/RenderModule.html":{}}}],["render/render.module",{"_index":547,"title":{},"body":{"modules/PluginModule.html":{}}}],["rendermodule",{"_index":546,"title":{"modules/RenderModule.html":{}},"body":{"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["renderservice",{"_index":557,"title":{"injectables/RenderService.html":{}},"body":{"modules/RenderModule.html":{},"injectables/RenderService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":1270,"title":{},"body":{"index.html":{}}}],["req",{"_index":913,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["req.url",{"_index":914,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["request",{"_index":635,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['no",{"_index":640,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['response",{"_index":638,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.headers['x",{"_index":642,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.method",{"_index":648,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["request.url",{"_index":649,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["require",{"_index":528,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["require('ejs",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require(migrationpath",{"_index":1048,"title":{},"body":{"injectables/UmzugService.html":{}}}],["requiring",{"_index":1309,"title":{},"body":{"index.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve",{"_index":1043,"title":{},"body":{"injectables/UmzugService.html":{}}}],["resource",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":1321,"title":{},"body":{"index.html":{}}}],["response",{"_index":641,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["responseformatinterceptor",{"_index":585,"title":{"injectables/ResponseFormatInterceptor.html":{}},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["responseformatresponse",{"_index":459,"title":{"interfaces/ResponseFormatResponse.html":{}},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["responsestatus",{"_index":884,"title":{},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["result",{"_index":149,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/UserService.html":{}}}],["result[entry.key",{"_index":412,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["result[key",{"_index":347,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["results",{"_index":60,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":621,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"guards/DevelopmentGuard.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/RouteController.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1027,"title":{},"body":{"injectables/UmzugService.html":{}}}],["root",{"_index":661,"title":{},"body":{"controllers/RouteController.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":441,"title":{},"body":{"guards/DevelopmentGuard.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["route.controller",{"_index":674,"title":{},"body":{"modules/RouteModule.html":{}}}],["routecontroller",{"_index":659,"title":{"controllers/RouteController.html":{}},"body":{"controllers/RouteController.html":{},"modules/RouteModule.html":{},"coverage.html":{}}}],["routemodule",{"_index":198,"title":{"modules/RouteModule.html":{}},"body":{"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RouteModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rss",{"_index":1012,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["run",{"_index":1276,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1294,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":610,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":611,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperObserveInterceptor.html":{}}}],["scalable",{"_index":1265,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":559,"title":{},"body":{"modules/RenderModule.html":{}}}],["schedulemodule.forroot",{"_index":562,"title":{},"body":{"modules/RenderModule.html":{}}}],["scopes",{"_index":1090,"title":{},"body":{"classes/User.html":{}}}],["seconds",{"_index":992,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["secret",{"_index":104,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["secretorkey",{"_index":170,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["self",{"_index":574,"title":{},"body":{"injectables/RenderService.html":{}}}],["sequelize",{"_index":238,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":93,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules/UserModule.html":{}}}],["sequelizemodule.forfeature([superobserve",{"_index":935,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":110,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/UserModule.html":{}}}],["sequelizemodule.forrootasync",{"_index":513,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["sequelizemoduleoptions",{"_index":928,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["sequelizestorage",{"_index":1037,"title":{},"body":{"injectables/UmzugService.html":{}}}],["server",{"_index":491,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/SuperServerController.html":{},"injectables/SuperServerService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["server.controller",{"_index":955,"title":{},"body":{"modules/SuperServerModule.html":{}}}],["server.controller.ts",{"_index":943,"title":{},"body":{"controllers/SuperServerController.html":{},"coverage.html":{}}}],["server.controller.ts:11",{"_index":945,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["server.module",{"_index":502,"title":{},"body":{"modules/InfraModule.html":{}}}],["server.module.ts",{"_index":954,"title":{},"body":{"modules/SuperServerModule.html":{}}}],["server.service",{"_index":947,"title":{},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{}}}],["server.service.ts",{"_index":956,"title":{},"body":{"injectables/SuperServerService.html":{},"coverage.html":{}}}],["server.service.ts:10",{"_index":958,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server.service.ts:21",{"_index":959,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server.service.ts:8",{"_index":972,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["server/super",{"_index":501,"title":{},"body":{"modules/InfraModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"coverage.html":{}}}],["service",{"_index":466,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["set",{"_index":213,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperCacheService.html":{}}}],["set(key",{"_index":226,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["setmetadata(super_observe_key",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1272,"title":{},"body":{"index.html":{}}}],["side",{"_index":1266,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":107,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["simple",{"_index":1311,"title":{},"body":{"index.html":{}}}],["size",{"_index":742,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["smtp.example.com",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"modules/BootstrapModule.html":{},"interfaces/CacheDriver.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"modules/InfraModule.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"modules/PluginModule.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"modules/RenderModule.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"modules/RouteModule.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["speed",{"_index":1002,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["sponsors",{"_index":1365,"title":{},"body":{"index.html":{}}}],["src/.../bootstrap.module.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.ts",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../infra.module.ts",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../plugin.module.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../super",{"_index":1391,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../under",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validation.config.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../version.config.ts",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.config.ts",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/basic",{"_index":6,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthGuard.html":{},"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":531,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:5",{"_index":532,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":533,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/bootstrap.module.ts",{"_index":199,"title":{},"body":{"modules/BootstrapModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":255,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/user/dto/create",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/core/user/dto/update",{"_index":1069,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/core/user/user.controller.ts",{"_index":1100,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/core/user/user.controller.ts:22",{"_index":1106,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:28",{"_index":1108,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:34",{"_index":1111,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:40",{"_index":1117,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.controller.ts:49",{"_index":1114,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/user/user.model",{"_index":96,"title":{},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{}}}],["src/core/user/user.model.ts",{"_index":1076,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/core/user/user.model.ts:18",{"_index":1087,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:21",{"_index":1084,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:24",{"_index":1088,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:27",{"_index":1085,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:30",{"_index":1079,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:33",{"_index":1077,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:36",{"_index":1078,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:39",{"_index":1080,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:42",{"_index":1081,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:45",{"_index":1083,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.model.ts:48",{"_index":1089,"title":{},"body":{"classes/User.html":{}}}],["src/core/user/user.module.ts",{"_index":1140,"title":{},"body":{"modules/UserModule.html":{}}}],["src/core/user/user.service",{"_index":97,"title":{},"body":{"modules/BasicAuthModule.html":{}}}],["src/core/user/user.service.ts",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/core/user/user.service.ts:15",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:31",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:35",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:41",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:45",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:54",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/user/user.service.ts:9",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["src/infra/infra.module.ts",{"_index":495,"title":{},"body":{"modules/InfraModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infra/super",{"_index":43,"title":{},"body":{"controllers/BasicAuthController.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infra/umzug/umzug.module.ts",{"_index":1022,"title":{},"body":{"modules/UmzugModule.html":{}}}],["src/infra/umzug/umzug.service",{"_index":191,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{}}}],["src/infra/umzug/umzug.service.ts",{"_index":1024,"title":{},"body":{"injectables/UmzugService.html":{},"coverage.html":{}}}],["src/infra/umzug/umzug.service.ts:35",{"_index":1032,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:41",{"_index":1031,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:47",{"_index":1034,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:51",{"_index":1033,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:8",{"_index":1036,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/infra/umzug/umzug.service.ts:9",{"_index":1030,"title":{},"body":{"injectables/UmzugService.html":{}}}],["src/main.ts",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/plugins/health/health.controller.ts",{"_index":471,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/plugins/health/health.controller.ts:11",{"_index":474,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/plugins/health/health.module.ts",{"_index":485,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/plugins/health/health.service.ts",{"_index":488,"title":{},"body":{"injectables/HealthService.html":{},"coverage.html":{}}}],["src/plugins/health/health.service.ts:4",{"_index":489,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/plugins/health/health.service.ts:7",{"_index":490,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/plugins/plugin.module.ts",{"_index":544,"title":{},"body":{"modules/PluginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/render/render.module.ts",{"_index":558,"title":{},"body":{"modules/RenderModule.html":{}}}],["src/plugins/render/render.service.ts",{"_index":563,"title":{},"body":{"injectables/RenderService.html":{},"coverage.html":{}}}],["src/plugins/render/render.service.ts:6",{"_index":569,"title":{},"body":{"injectables/RenderService.html":{}}}],["src/plugins/render/render.service.ts:9",{"_index":566,"title":{},"body":{"injectables/RenderService.html":{}}}],["src/shared/configs/cors.config.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/under",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/validation.config.ts",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/version.config.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/configs/view.config.ts",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/guards/development.guard",{"_index":477,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["src/shared/guards/development.guard.ts",{"_index":430,"title":{},"body":{"guards/DevelopmentGuard.html":{},"coverage.html":{}}}],["src/shared/guards/development.guard.ts:5",{"_index":434,"title":{},"body":{"guards/DevelopmentGuard.html":{}}}],["src/shared/interceptors/response",{"_index":586,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["src/shared/interfaces/bootstrap",{"_index":178,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"coverage.html":{}}}],["src/shared/interfaces/response",{"_index":454,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"interfaces/ResponseFormatResponse.html":{},"coverage.html":{}}}],["src/views/route.controller.ts",{"_index":660,"title":{},"body":{"controllers/RouteController.html":{},"coverage.html":{}}}],["src/views/route.controller.ts:7",{"_index":663,"title":{},"body":{"controllers/RouteController.html":{}}}],["src/views/route.module.ts",{"_index":673,"title":{},"body":{"modules/RouteModule.html":{}}}],["ssl",{"_index":527,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1278,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1281,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1282,"title":{},"body":{"index.html":{}}}],["started",{"_index":1259,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1269,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":693,"title":{},"body":{"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{}}}],["status",{"_index":918,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":461,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["stay",{"_index":1350,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1291,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1055,"title":{},"body":{"injectables/UmzugService.html":{}}}],["storage/cache.json",{"_index":511,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":370,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["store[key",{"_index":373,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["straightforward",{"_index":1307,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":162,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["string",{"_index":121,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"injectables/HealthService.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"classes/SuperObserve.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":144,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["successful",{"_index":59,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/RenderService.html":{}}}],["successfully",{"_index":941,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["super",{"_index":165,"title":{},"body":{"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{}}}],["super_cache_${options.driver.touppercase()}_driver",{"_index":715,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["super_cache_driver",{"_index":703,"title":{},"body":{"modules/SuperCacheModule.html":{},"miscellaneous/variables.html":{}}}],["super_cache_driver::${options.driver.touppercase",{"_index":704,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["super_observe_key",{"_index":906,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["supercache",{"_index":304,"title":{"classes/SuperCache.html":{}},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"coverage.html":{}}}],["supercache.destroy",{"_index":406,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.findall",{"_index":411,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.findbypk(key",{"_index":401,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.sync().catch(err",{"_index":395,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercache.upsert",{"_index":405,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["supercachemodule",{"_index":505,"title":{"modules/SuperCacheModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"modules.html":{}}}],["supercachemodule.forroot",{"_index":510,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["supercachemoduleoptions",{"_index":247,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{},"modules/SuperCacheModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["supercacheservice",{"_index":700,"title":{"injectables/SuperCacheService.html":{}},"body":{"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"coverage.html":{}}}],["supercacheservice(driver",{"_index":716,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["superconfigdefaults",{"_index":805,"title":{},"body":{"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["superconfigdefaults.app_client_url",{"_index":824,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_debug",{"_index":818,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_env",{"_index":812,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_host",{"_index":814,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_name",{"_index":810,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_port",{"_index":816,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_secret",{"_index":820,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.app_timezone",{"_index":822,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.auth_lifetime",{"_index":826,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.auth_saltround",{"_index":828,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_debug",{"_index":844,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_host",{"_index":832,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_name",{"_index":836,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_password",{"_index":840,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_port",{"_index":834,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_ssl",{"_index":842,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_type",{"_index":830,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.database_username",{"_index":838,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_compression",{"_index":871,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_cors",{"_index":869,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_helmet",{"_index":867,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_shutdown_hooks",{"_index":875,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_under_pressure",{"_index":873,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.enable_view",{"_index":877,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_host",{"_index":857,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_password",{"_index":863,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_port",{"_index":859,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_secure",{"_index":865,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.mailer_username",{"_index":861,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_host",{"_index":846,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_password",{"_index":852,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_port",{"_index":848,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_ttl",{"_index":854,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigdefaults.redis_username",{"_index":850,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["superconfigmodule",{"_index":496,"title":{"modules/SuperConfigModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superconfigoptions",{"_index":185,"title":{"interfaces/SuperConfigOptions.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["superconfigservice",{"_index":498,"title":{"injectables/SuperConfigService.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperConfigModule.html":{},"injectables/SuperConfigService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superobserve",{"_index":878,"title":{"classes/SuperObserve.html":{}},"body":{"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"coverage.html":{}}}],["superobserve.create",{"_index":919,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["superobserveinterceptor",{"_index":898,"title":{"injectables/SuperObserveInterceptor.html":{}},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{},"coverage.html":{}}}],["superobserveinterceptor(reflector",{"_index":934,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["superobservemodule",{"_index":507,"title":{"modules/SuperObserveModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperObserveModule.html":{},"modules.html":{}}}],["superobservemodule.forroot",{"_index":509,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["superservercontroller",{"_index":942,"title":{"controllers/SuperServerController.html":{}},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"coverage.html":{}}}],["superservermodule",{"_index":500,"title":{"modules/SuperServerModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/SuperServerModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["superserverservice",{"_index":946,"title":{"injectables/SuperServerService.html":{}},"body":{"controllers/SuperServerController.html":{},"modules/SuperServerModule.html":{},"injectables/SuperServerService.html":{},"coverage.html":{},"overview.html":{}}}],["support",{"_index":1328,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surelle",{"_index":579,"title":{},"body":{"injectables/RenderService.html":{}}}],["svg",{"_index":1381,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":707,"title":{},"body":{"modules/SuperCacheModule.html":{}}}],["sync",{"_index":398,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"modules/SuperObserveModule.html":{}}}],["synced",{"_index":940,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["synchronize",{"_index":525,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":219,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/SuperCacheService.html":{}}}],["table",{"_index":400,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablename",{"_index":688,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1292,"title":{},"body":{"index.html":{}}}],["tap",{"_index":908,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["template",{"_index":639,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["test",{"_index":14,"title":{},"body":{"controllers/BasicAuthController.html":{},"index.html":{}}}],["test:covdeployment",{"_index":1287,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1286,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1283,"title":{},"body":{"index.html":{}}}],["text",{"_index":681,"title":{},"body":{"classes/SuperCache.html":{}}}],["thanks",{"_index":1364,"title":{},"body":{"index.html":{}}}],["this.authservice.login(dto",{"_index":55,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["this.client",{"_index":313,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.del(...keylist",{"_index":354,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.del(key",{"_index":331,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.get(key",{"_index":320,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.mget(...keys",{"_index":344,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.scan(cursor",{"_index":337,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.client.set(key",{"_index":329,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.configservice.get('app_client_url",{"_index":823,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_env",{"_index":811,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_host",{"_index":813,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_name",{"_index":809,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_port",{"_index":815,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_secret",{"_index":819,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('app_timezone",{"_index":821,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('auth_lifetime",{"_index":825,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('auth_saltround",{"_index":827,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_host",{"_index":831,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_name",{"_index":835,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_password",{"_index":839,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_port",{"_index":833,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_type",{"_index":829,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('database_username",{"_index":837,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_host",{"_index":856,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_password",{"_index":862,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_port",{"_index":858,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('mailer_username",{"_index":860,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_host",{"_index":845,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_password",{"_index":851,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_port",{"_index":847,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_ttl",{"_index":853,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.configservice.get('redis_username",{"_index":849,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('app_debug",{"_index":817,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('database_debug",{"_index":843,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('database_ssl",{"_index":841,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_compression",{"_index":870,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_cors",{"_index":868,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_helmet",{"_index":866,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_shutdown_hooks",{"_index":874,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_under_pressure",{"_index":872,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('enable_view",{"_index":876,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.convertboolean(this.configservice.get('mailer_secure",{"_index":864,"title":{},"body":{"injectables/SuperConfigService.html":{}}}],["this.driver",{"_index":739,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.constructor.name",{"_index":740,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.del(key",{"_index":749,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.delall",{"_index":738,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.delall(pattern",{"_index":756,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.get(key",{"_index":747,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.getall().then(items",{"_index":743,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.getall(pattern",{"_index":755,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver.set(key",{"_index":748,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.driver['options",{"_index":741,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.fallbackvalue.no_client_info",{"_index":656,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.fallbackvalue.no_server_info",{"_index":633,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.filepath",{"_index":357,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.findone(id",{"_index":1169,"title":{},"body":{"injectables/UserService.html":{}}}],["this.get(key",{"_index":752,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.getall(pattern",{"_index":350,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.getapiservice",{"_index":650,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getapiversion",{"_index":651,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getpackagedata().name",{"_index":630,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.getpackagedata().version",{"_index":634,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.gettimezone",{"_index":652,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.healthservice.check",{"_index":481,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":148,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.logger.debug('fetching",{"_index":982,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.logger.debug('self",{"_index":581,"title":{},"body":{"injectables/RenderService.html":{}}}],["this.logger.debug('send",{"_index":573,"title":{},"body":{"injectables/RenderService.html":{}}}],["this.logger.error('error",{"_index":631,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["this.logger.error('failed",{"_index":921,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["this.logger.error('self",{"_index":583,"title":{},"body":{"injectables/RenderService.html":{}}}],["this.logger.log('superobserve",{"_index":939,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.logger.log(`executed",{"_index":1064,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.logger.log(`pending",{"_index":1060,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.maxsize",{"_index":416,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.packagejson",{"_index":977,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.packagejson.name",{"_index":986,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.packagejson.version",{"_index":987,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["this.readstore",{"_index":371,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.reflector.get",{"_index":910,"title":{},"body":{"injectables/SuperObserveInterceptor.html":{}}}],["this.sequelize",{"_index":1056,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.sequelize.addmodels([superobserve",{"_index":936,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.sequelize.getqueryinterface",{"_index":1054,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.sequelize.sync",{"_index":937,"title":{},"body":{"modules/SuperObserveModule.html":{}}}],["this.set(key",{"_index":753,"title":{},"body":{"injectables/SuperCacheService.html":{}}}],["this.store.delete(firstkey",{"_index":424,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.delete(key",{"_index":419,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.entries",{"_index":426,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.get(key",{"_index":418,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.keys().next().value",{"_index":423,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.set(key",{"_index":425,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.store.size",{"_index":421,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.superserverservice.getmetrics",{"_index":950,"title":{},"body":{"controllers/SuperServerController.html":{}}}],["this.ttl",{"_index":317,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.umzug",{"_index":1038,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.down",{"_index":1067,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.executed",{"_index":1063,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.pending",{"_index":1059,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.umzug.up",{"_index":1066,"title":{},"body":{"injectables/UmzugService.html":{}}}],["this.usermodel.create",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findall",{"_index":1165,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbypk(id",{"_index":1166,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.scope('withpassword').findone",{"_index":133,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.userservice.create(dto",{"_index":1126,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1127,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":1130,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":1136,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":1133,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser(dto.email",{"_index":141,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.writestore(currentstore",{"_index":392,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["this.writestore(store",{"_index":377,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["throw",{"_index":134,"title":{},"body":{"injectables/BasicAuthService.html":{},"guards/DevelopmentGuard.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":1343,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":462,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["timestamps",{"_index":690,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{}}}],["timezone",{"_index":469,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["title",{"_index":664,"title":{},"body":{"controllers/RouteController.html":{}}}],["totalmemory",{"_index":964,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["touch",{"_index":1371,"title":{},"body":{"index.html":{}}}],["traceid",{"_index":460,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["transform",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":152,"title":{},"body":{"injectables/BasicAuthService.html":{},"guards/DevelopmentGuard.html":{},"modules/InfraModule.html":{},"classes/SuperCache.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":322,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/SuperObserveModule.html":{}}}],["ttl",{"_index":234,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"modules/InfraModule.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1377,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthService.html":{},"injectables/BasicAuthStrategy.html":{},"interfaces/BootstrapFunctionArgs.html":{},"interfaces/CacheDriver.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"guards/DevelopmentGuard.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"interfaces/HeaderSettingsOptions.html":{},"classes/LoginDto.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"classes/SuperCache.html":{},"modules/SuperCacheModule.html":{},"injectables/SuperCacheService.html":{},"interfaces/SuperConfigOptions.html":{},"injectables/SuperConfigService.html":{},"classes/SuperObserve.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1389,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":130,"title":{},"body":{"injectables/BasicAuthService.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/UmzugService.html":{},"injectables/UserService.html":{}}}],["types",{"_index":1073,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":687,"title":{},"body":{"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"modules/SuperObserveModule.html":{},"injectables/UmzugService.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["typescript').sequelize",{"_index":240,"title":{},"body":{"interfaces/CacheDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"interfaces/FileOptions.html":{},"interfaces/MemoryOptions.html":{},"interfaces/RedisOptions.html":{}}}],["umzug",{"_index":183,"title":{},"body":{"interfaces/BootstrapFunctionArgs.html":{},"injectables/UmzugService.html":{},"dependencies.html":{}}}],["umzug.service",{"_index":1023,"title":{},"body":{"modules/UmzugModule.html":{}}}],["umzug/umzug.module",{"_index":504,"title":{},"body":{"modules/InfraModule.html":{}}}],["umzugmodule",{"_index":503,"title":{"modules/UmzugModule.html":{}},"body":{"modules/InfraModule.html":{},"modules/UmzugModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["umzugservice",{"_index":186,"title":{"injectables/UmzugService.html":{}},"body":{"interfaces/BootstrapFunctionArgs.html":{},"modules/UmzugModule.html":{},"injectables/UmzugService.html":{},"coverage.html":{},"overview.html":{}}}],["unable",{"_index":620,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["unauthorizedexception",{"_index":125,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":136,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"classes/SuperCache.html":{},"classes/SuperObserve.html":{},"classes/User.html":{}}}],["underpressureconfig",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":1082,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1284,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":28,"title":{},"body":{"controllers/BasicAuthController.html":{},"injectables/BasicAuthStrategy.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"controllers/HealthController.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{}}}],["unlicensed",{"_index":1388,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1049,"title":{},"body":{"injectables/UmzugService.html":{}}}],["update",{"_index":1028,"title":{},"body":{"injectables/UmzugService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1115,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":1352,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":1068,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uptime",{"_index":653,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"injectables/SuperServerService.html":{}}}],["usefactory",{"_index":102,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/InfraModule.html":{},"modules/SuperCacheModule.html":{},"modules/SuperObserveModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":34,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["useguards(basicauthguard",{"_index":57,"title":{},"body":{"controllers/BasicAuthController.html":{}}}],["useguards(developmentguard",{"_index":480,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SuperServerController.html":{}}}],["useperformance",{"_index":42,"title":{},"body":{"controllers/BasicAuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":95,"title":{"classes/User.html":{}},"body":{"modules/BasicAuthModule.html":{},"injectables/BasicAuthService.html":{},"modules/InfraModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1141,"title":{},"body":{"modules/UserModule.html":{}}}],["user.destroy",{"_index":1171,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":1075,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":146,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.get",{"_index":150,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":145,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.model",{"_index":1142,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":140,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["user.service",{"_index":1121,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.update(dto",{"_index":1170,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.module",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{}}}],["user@example.com",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1099,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":117,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":256,"title":{"modules/UserModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":518,"title":{},"body":{"modules/InfraModule.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":1096,"title":{},"body":{"classes/User.html":{}}}],["userservice",{"_index":81,"title":{"injectables/UserService.html":{}},"body":{"modules/BasicAuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1344,"title":{},"body":{"index.html":{}}}],["utc",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utf",{"_index":979,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["utf8",{"_index":363,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["uuid",{"_index":614,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["uuidv4",{"_index":613,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["v4",{"_index":612,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["v8",{"_index":1016,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["validate",{"_index":155,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["validate(payload",{"_index":158,"title":{},"body":{"injectables/BasicAuthStrategy.html":{}}}],["validateuser",{"_index":112,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["validateuser(email",{"_index":120,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["validationpipeconfig",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipeoptions",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":227,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"injectables/RenderService.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SuperCache.html":{},"injectables/SuperCacheService.html":{},"injectables/SuperConfigService.html":{},"injectables/SuperObserveInterceptor.html":{},"injectables/SuperServerService.html":{},"injectables/UmzugService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":343,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["values[i",{"_index":349,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["variable",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":808,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/SuperConfigService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":467,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{},"controllers/RouteController.html":{},"injectables/SuperServerService.html":{},"properties.html":{}}}],["version_neutral",{"_index":665,"title":{},"body":{"controllers/RouteController.html":{}}}],["versionconfig",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versioningoptions",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":1013,"title":{},"body":{"injectables/SuperServerService.html":{}}}],["video",{"_index":1336,"title":{},"body":{"index.html":{}}}],["viewconfig",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["views/route.module",{"_index":205,"title":{},"body":{"modules/BootstrapModule.html":{}}}],["visit",{"_index":1325,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1339,"title":{},"body":{"index.html":{}}}],["void",{"_index":567,"title":{},"body":{"injectables/RenderService.html":{}}}],["watch",{"_index":1279,"title":{},"body":{"index.html":{}}}],["website",{"_index":1375,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":668,"title":{},"body":{"controllers/RouteController.html":{}}}],["where.key",{"_index":408,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["whitelist",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withpassword",{"_index":1094,"title":{},"body":{"classes/User.html":{}}}],["withtemplate",{"_index":458,"title":{},"body":{"interfaces/HeaderSettingsOptions.html":{},"injectables/ResponseFormatInterceptor.html":{},"interfaces/ResponseFormatResponse.html":{}}}],["working",{"_index":1324,"title":{},"body":{"index.html":{}}}],["world",{"_index":672,"title":{},"body":{"controllers/RouteController.html":{}}}],["writestore",{"_index":443,"title":{},"body":{"classes/FileDriver.html":{}}}],["writestore(store",{"_index":366,"title":{},"body":{"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"classes/MemoryDriver.html":{},"classes/RedisDriver.html":{}}}],["x",{"_index":1354,"title":{},"body":{"index.html":{}}}],["xstoreditem",{"_index":245,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"interfaces/DatabaseOptions.html":{},"interfaces/ExtraSetOptions.html":{},"classes/FileDriver.html":{},"interfaces/FileOptions.html":{},"classes/MemoryDriver.html":{},"interfaces/MemoryOptions.html":{},"classes/RedisDriver.html":{},"interfaces/RedisOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["yes",{"_index":221,"title":{},"body":{"interfaces/CacheDriver.html":{},"classes/DatabaseDriver.html":{},"classes/FileDriver.html":{},"injectables/SuperCacheService.html":{}}}],["you'd",{"_index":1368,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1288,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/BasicAuthModule.html":{},"modules/BootstrapModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/InfraModule.html":{},"modules/PluginModule.html":{},"modules/RenderModule.html":{},"modules/SuperConfigModule.html":{},"modules/SuperServerModule.html":{},"modules/UmzugModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/BasicAuthController.html":{"url":"controllers/BasicAuthController.html","title":"controller - BasicAuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BasicAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/basic-auth.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')@UsePerformance()@UseGuards(BasicAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/basic-auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { BasicAuthService } from './basic-auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { BasicAuthGuard } from './basic-auth.guard';\nimport { UsePerformance } from 'src/infra/super-observe/super-observe.decorator';\n\n@Controller('auth')\nexport class BasicAuthController {\n    constructor(private readonly authService: BasicAuthService) { }\n\n    @Post('login')\n    @UsePerformance()\n    async login(@Body() dto: LoginDto) {\n        return this.authService.login(dto);\n    }\n\n    @Get('test')\n\n    @UsePerformance()\n    @UseGuards(BasicAuthGuard)\n    async test() {\n        return { message: 'Test successful' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthGuard.html":{"url":"injectables/BasicAuthGuard.html","title":"injectable - BasicAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('basic-auth')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class BasicAuthGuard extends AuthGuard('basic-auth') { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BasicAuthModule.html":{"url":"modules/BasicAuthModule.html","title":"module - BasicAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    BasicAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicAuthModule\n\n\n\ncluster_BasicAuthModule_providers\n\n\n\n\nBasicAuthService\n\nBasicAuthService\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\nBasicAuthModule -->\n\nBasicAuthService->BasicAuthModule\n\n\n\n\n\nBasicAuthStrategy\n\nBasicAuthStrategy\n\nBasicAuthModule -->\n\nBasicAuthStrategy->BasicAuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nBasicAuthModule -->\n\nUserService->BasicAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/basic-auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BasicAuthService\n                        \n                        \n                            BasicAuthStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BasicAuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BasicAuthService } from './basic-auth.service';\nimport { BasicAuthController } from './basic-auth.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from 'src/core/user/user.model';\nimport { UserService } from 'src/core/user/user.service';\nimport { BasicAuthStrategy } from './basic-auth.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.get('APP_SECRET') || 'defaultSecret',\n        signOptions: { expiresIn: '1h' },\n      }),\n    }),\n    SequelizeModule.forFeature([User]),\n  ],\n  controllers: [BasicAuthController],\n  providers: [BasicAuthService, UserService, BasicAuthStrategy],\n})\nexport class BasicAuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthService.html":{"url":"injectables/BasicAuthService.html","title":"injectable - BasicAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/basic-auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from 'src/core/user/user.model';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class BasicAuthService {\n    constructor(\n        @InjectModel(User)\n        private readonly userModel: typeof User,\n        private readonly jwtService: JwtService,\n    ) { }\n\n    async validateUser(email: string, password: string): Promise {\n        const user = await this.userModel.scope('withPassword').findOne({ where: { email } });\n        if (!user) throw new UnauthorizedException('Invalid credentials');\n\n        const isMatch = await bcrypt.compare(password, user.password);\n        if (!isMatch) throw new UnauthorizedException('Invalid credentials');\n\n        return user;\n    }\n\n    async login(dto: LoginDto): Promise {\n        const user = await this.validateUser(dto.email, dto.password);\n\n        const payload = { sub: user.id, email: user.email };\n        const accessToken = this.jwtService.sign(payload);\n\n        const { password, ...result } = user.get({ plain: true });\n        return { accessToken, user: result };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthStrategy.html":{"url":"injectables/BasicAuthStrategy.html","title":"injectable - BasicAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/basic-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'basic-auth')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/basic-auth.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/basic-auth.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class BasicAuthStrategy extends PassportStrategy(Strategy, 'basic-auth') {\n    constructor(configService: ConfigService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get('APP_SECRET') || 'defaultSecret',\n        });\n    }\n\n    async validate(payload: any) {\n        return { id: payload.sub, email: payload.email };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BootstrapFunctionArgs.html":{"url":"interfaces/BootstrapFunctionArgs.html","title":"interface - BootstrapFunctionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BootstrapFunctionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/bootstrap-function.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            logger\n                                        \n                                \n                                \n                                        \n                                            umzug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app:     NestFastifyApplication\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NestFastifyApplication\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         SuperConfigOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SuperConfigOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logger:     Logger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Logger\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        umzug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        umzug:         UmzugService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UmzugService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { NestFastifyApplication } from \"@nestjs/platform-fastify\";\nimport { SuperConfigOptions } from \"src/infra/super-config/super-config.interface\";\nimport { UmzugService } from \"src/infra/umzug/umzug.service\";\n\nexport interface BootstrapFunctionArgs {\n    app: NestFastifyApplication;\n    config?: SuperConfigOptions;\n    logger: Logger;\n    umzug: UmzugService\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BootstrapModule.html":{"url":"modules/BootstrapModule.html","title":"module - BootstrapModule","body":"\n                   \n\n\n\n\n    Modules\n    BootstrapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BootstrapModule\n\n\n\ncluster_BootstrapModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nBootstrapModule\n\nBootstrapModule\n\nBootstrapModule -->\n\nBasicAuthModule->BootstrapModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nBootstrapModule -->\n\nCoreModule->BootstrapModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nBootstrapModule -->\n\nInfraModule->BootstrapModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nBootstrapModule -->\n\nPluginModule->BootstrapModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nBootstrapModule -->\n\nRouteModule->BootstrapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bootstrap.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BasicAuthModule } from './auth/basic-auth.module';\nimport { PluginModule } from './plugins/plugin.module';\nimport { InfraModule } from './infra/infra.module';\nimport { CoreModule } from './core/core.module';\nimport { RouteModule } from './views/route.module';\n\nconst MODULE_LOADER = [\n  BasicAuthModule,\n  InfraModule,\n  CoreModule,\n  PluginModule,\n  RouteModule\n]\n\n@Module({\n  imports: MODULE_LOADER,\n})\nexport class BootstrapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheDriver.html":{"url":"interfaces/CacheDriver.html","title":"interface - CacheDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        del\n                                    \n                                \n                                \n                                    \n                                        delAll\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        set\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        del\n                        \n                    \n                \n            \n            \n                \ndel(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delAll\n                        \n                    \n                \n            \n            \n                \ndelAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: T, ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.interface.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ExtraSetOptions\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nBasicAuthModule->CoreModule\n\n\n\nCoreModule -->\n\nCoreModule->CoreModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nCoreModule -->\n\nInfraModule->CoreModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nCoreModule -->\n\nPluginModule->CoreModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nCoreModule -->\n\nRouteModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\n\nconst MODULE_LOADER = [\n    UserModule\n]\n\n@Module({\n    imports: MODULE_LOADER,\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address1\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['male', 'female', 'other'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, IsEnum, IsDateString, IsOptional } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString() firstName: string;\n    @IsString() lastName: string;\n\n    @IsEnum(['male', 'female', 'other'])\n    gender: string;\n\n    @IsDateString()\n    birthday: Date;\n\n    @IsString()\n    address1: string;\n\n    @IsOptional()\n    @IsString()\n    address2?: string;\n\n    @IsString()\n    city: string;\n\n    @IsString()\n    country: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseDriver.html":{"url":"classes/DatabaseDriver.html","title":"class - DatabaseDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:163\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:163\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:227\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '%'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:174\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:205\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '%'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOption?: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:188\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOption\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseOptions.html":{"url":"interfaces/DatabaseOptions.html","title":"interface - DatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autoSync\n                                        \n                                \n                                \n                                        \n                                            sequelize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoSync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sequelize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sequelize:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DevelopmentGuard.html":{"url":"guards/DevelopmentGuard.html","title":"guard - DevelopmentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DevelopmentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/development.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/development.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, ForbiddenException } from '@nestjs/common';\n\n@Injectable()\nexport class DevelopmentGuard implements CanActivate {\n    canActivate(_context: ExecutionContext): boolean {\n        if ((process.env.APP_ENV || 'local').toUpperCase() === 'PRODUCTION') {\n            throw new ForbiddenException('This route is disabled.');\n        }\n        return true;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtraSetOptions.html":{"url":"interfaces/ExtraSetOptions.html","title":"interface - ExtraSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtraSetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDriver.html":{"url":"classes/FileDriver.html","title":"class - FileDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                    Optional\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Private\n                                    Async\n                                readStore\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                    Private\n                                    Async\n                                writeStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: FileOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        FileOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:78\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:148\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:98\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:132\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        readStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    readStore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:112\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        writeStore\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeStore(store: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                store\n                                            \n                                                            Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderSettingsOptions.html":{"url":"interfaces/HeaderSettingsOptions.html","title":"interface - HeaderSettingsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeaderSettingsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/response-format.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientTimezone\n                                        \n                                \n                                \n                                        \n                                            clientVersion\n                                        \n                                \n                                \n                                        \n                                            withTemplate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientTimezone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientTimezone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withTemplate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseFormatResponse {\n    traceId: string;\n    statusCode: number;\n    timestamp: string;\n    method: string;\n    path: string;\n    data: any;\n    api: {\n        service: string;\n        version: string;\n        datetime: string;\n        timezone: string;\n    };\n    client: {\n        version: string;\n        timezone: string;\n    };\n}\n\nexport interface HeaderSettingsOptions {\n    withTemplate: boolean;\n    clientVersion: string;\n    clientTimezone: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/health/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@UseGuards(DevelopmentGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/plugins/health/health.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { HealthService } from './health.service';\nimport { DevelopmentGuard } from 'src/shared/guards/development.guard';\n\n@Controller(['health', 'ping'])\nexport class HealthController {\n  constructor(private readonly healthService: HealthService) { }\n\n  @Get('')\n  @UseGuards(DevelopmentGuard)\n  async check() {\n    return this.healthService.check();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plugins/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { HealthService } from './health.service';\n\n@Global()\n@Module({\n  controllers: [HealthController],\n  providers: [HealthService],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthService.html":{"url":"injectables/HealthService.html","title":"injectable - HealthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/health/health.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/plugins/health/health.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/plugins/health/health.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HealthService {\n  constructor() { }\n\n  check() {\n    return {\n      message: 'Server is ready.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfraModule.html":{"url":"modules/InfraModule.html","title":"module - InfraModule","body":"\n                   \n\n\n\n\n    Modules\n    InfraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfraModule\n\n\n\ncluster_InfraModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nInfraModule\n\nInfraModule\n\nInfraModule -->\n\nBasicAuthModule->InfraModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nInfraModule -->\n\nCoreModule->InfraModule\n\n\n\nInfraModule -->\n\nInfraModule->InfraModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nInfraModule -->\n\nPluginModule->InfraModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nInfraModule -->\n\nRouteModule->InfraModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/infra.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { SuperConfigModule } from './super-config/super-config.module';\nimport { SuperConfigService } from './super-config/super-config.service';\nimport { SuperServerModule } from './super-server/super-server.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UmzugModule } from './umzug/umzug.module';\nimport { SuperCacheModule } from './super-cache/super-cache.module';\nimport { User } from 'src/core/user/user.model';\nimport { SuperObserveModule } from './super-observe/super-observe.module';\n\nconst MODULE_LOADER = [\n    SuperObserveModule.forRoot(),\n    SuperConfigModule,\n    SuperCacheModule.forRoot({\n        driver: 'file',\n        driverOptions: {\n            path: './storage/cache.json',\n            ttl: 60\n        }\n    }),\n    SequelizeModule.forRootAsync({\n        imports: [SuperConfigModule],\n        inject: [SuperConfigService],\n        useFactory: (configService: SuperConfigService) => ({\n            dialect: 'postgres',\n            host: configService.env.DATABASE_HOST,\n            port: configService.env.DATABASE_PORT,\n            username: configService.env.DATABASE_USERNAME,\n            password: configService.env.DATABASE_PASSWORD,\n            database: configService.env.DATABASE_NAME,\n            logging: configService.env.DATABASE_DEBUG,\n            autoLoadModels: false,\n            synchronize: false,\n            dialectOptions: {\n                ssl: {\n                    require: true,\n                    rejectUnauthorized: false,\n                },\n            },\n            models: [User],\n        }),\n    }),\n    SuperServerModule,\n    UmzugModule,\n]\n\n@Global()\n@Module({\n    imports: MODULE_LOADER,\n})\nexport class InfraModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class LoginDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MemoryDriver.html":{"url":"classes/MemoryDriver.html","title":"class - MemoryDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MemoryDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                    Private\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MemoryOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:240\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MemoryOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:238\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:239\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:286\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:247\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:272\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:257\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemoryOptions.html":{"url":"interfaces/MemoryOptions.html","title":"interface - MemoryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MemoryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            maxSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginModule.html":{"url":"modules/PluginModule.html","title":"module - PluginModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginModule\n\n\n\ncluster_PluginModule_imports\n\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\n\n\nPluginModule\n\nPluginModule\n\nPluginModule -->\n\nBasicAuthModule->PluginModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPluginModule -->\n\nCoreModule->PluginModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nPluginModule -->\n\nInfraModule->PluginModule\n\n\n\nPluginModule -->\n\nPluginModule->PluginModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nPluginModule -->\n\nRouteModule->PluginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plugins/plugin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BasicAuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            PluginModule\n                        \n                        \n                            RouteModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthModule } from './health/health.module';\nimport { RenderModule } from './render/render.module';\n\nconst MODULE_LOADER = [\n  HealthModule,\n  RenderModule\n]\n\n@Module({\n  imports: MODULE_LOADER,\n})\nexport class PluginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisDriver.html":{"url":"classes/RedisDriver.html","title":"class - RedisDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.driver.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CacheDriver\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                    Optional\n                                ttl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: RedisOptions)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.driver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        RedisOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        ttl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.driver.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:66\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:45\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '*'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOption: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.driver.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOption\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SuperCache } from './super-cache.entity';\nimport { Op } from 'sequelize';\nimport { CacheDriver, DatabaseOptions, ExtraSetOptions, FileOptions, MemoryOptions, RedisOptions, XStoredItem } from './super-cache.interface';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport Redis from 'ioredis';\n\nexport class RedisDriver implements CacheDriver {\n    private client: Redis;\n    private ttl?: number;\n\n    constructor(private options: RedisOptions) {\n        this.client = new Redis({\n            host: options.host,\n            port: options.port,\n            password: options.password,\n        });\n        this.ttl = options.ttl;\n    }\n\n    async get(key: string): Promise {\n        const raw = await this.client.get(key);\n        if (!raw) return null;\n        try {\n            return JSON.parse(raw) as T;\n        } catch {\n            return raw as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption: ExtraSetOptions): Promise {\n        const effectiveTtl = extraSetOption.ttl ?? this.ttl;\n        const json = JSON.stringify(value);\n        if (typeof effectiveTtl === 'number') {\n            await this.client.set(key, json, 'EX', effectiveTtl);\n        } else {\n            await this.client.set(key, json);\n        }\n    }\n\n    async del(key: string): Promise {\n        await this.client.del(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const keys: string[] = [];\n        let cursor = '0';\n        do {\n            const [nextCursor, foundKeys] = await this.client.scan(cursor, 'MATCH', pattern, 'COUNT', 100);\n            cursor = nextCursor;\n            keys.push(...foundKeys);\n        } while (cursor !== '0');\n        if (keys.length === 0) return {};\n        const values = await this.client.mget(...keys);\n        const result: Record = {};\n        keys.forEach((key, i) => {\n            try {\n                result[key] = JSON.parse(values[i]!);\n            } catch {\n                result[key] = values[i] as unknown as T;\n            }\n        });\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await this.client.del(...keyList);\n        }\n        return keys;\n    }\n}\n\nexport class FileDriver implements CacheDriver {\n    private filePath: string;\n    private ttl?: number;\n\n    constructor(private options: FileOptions) {\n        this.filePath = path.resolve(options.path || './cache.json');\n        this.ttl = options.ttl;\n    }\n\n    private async readStore(): Promise> {\n        try {\n            const content = await fs.readFile(this.filePath, 'utf8');\n            return JSON.parse(content);\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private async writeStore(store: Record): Promise {\n        await fs.writeFile(this.filePath, JSON.stringify(store, null, 2), 'utf8');\n    }\n\n    async get(key: string): Promise {\n        const store = await this.readStore();\n        const entry = store[key];\n        if (!entry) return null;\n\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            delete store[key];\n            await this.writeStore(store);\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    async set(key: string, value: T, ttl?: number): Promise {\n        const store = await this.readStore();\n        const effectiveTtl = ttl ?? this.ttl;\n\n        const expiresAt = typeof effectiveTtl === 'number'\n            ? Date.now() + effectiveTtl * 1000\n            : undefined;\n\n        store[key] = { value, expiresAt };\n        await this.writeStore(store);\n    }\n\n    async del(key: string): Promise {\n        const store = await this.readStore();\n        if (key in store) {\n            delete store[key];\n            await this.writeStore(store);\n        }\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const store = await this.readStore();\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of Object.entries(store)) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                delete store[key];\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        await this.writeStore(store);\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const store = await this.getAll(pattern);\n        const keys = Object.keys(store);\n        if (keys.length > 0) {\n            const currentStore = await this.readStore();\n            for (const key of keys) {\n                delete currentStore[key];\n            }\n            await this.writeStore(currentStore);\n        }\n        return store;\n    }\n}\n\nexport class DatabaseDriver implements CacheDriver {\n    private ttl: number | undefined;\n    constructor(private options: DatabaseOptions) {\n        this.ttl = options.ttl;\n        options.sequelize.addModels([SuperCache]);\n        if (options.autoSync !== false) {\n            SuperCache.sync().catch(err => {\n                console.error('[SuperCache] Failed to sync cache table:', err);\n            });\n        }\n    }\n\n    async get(key: string): Promise {\n        const entry = await SuperCache.findByPk(key);\n        if (!entry) return null;\n        if (entry.expiresAt && Date.now() > entry.expiresAt) {\n            await entry.destroy();\n            return null;\n        }\n        try {\n            return JSON.parse(entry.value) as T;\n        } catch {\n            return entry.value as unknown as T;\n        }\n    }\n\n    async set(key: string, value: T, extraSetOption?: ExtraSetOptions): Promise {\n        let expiresAt: number | undefined = undefined;\n        const effectiveTtl = extraSetOption?.ttl ?? this.ttl;\n        if (typeof effectiveTtl === 'number') {\n            expiresAt = Date.now() + effectiveTtl * 1000;\n        }\n        await SuperCache.upsert({\n            key,\n            value: JSON.stringify(value),\n            ...(expiresAt !== undefined ? { expiresAt } : {}),\n        });\n    }\n\n    async del(key: string): Promise {\n        await SuperCache.destroy({ where: { key } });\n    }\n\n    async getAll(pattern = '%'): Promise> {\n        const where: any = {};\n        if (pattern && pattern !== '*') {\n            const pgPattern = pattern.replace(/\\*/g, '%');\n            where.key = { [Op.like]: pgPattern };\n        }\n        const entries = await SuperCache.findAll({ where });\n        const result: Record = {};\n        for (const entry of entries) {\n            if (entry.expiresAt && Date.now() > entry.expiresAt) {\n                await entry.destroy();\n                continue;\n            }\n            try {\n                result[entry.key] = JSON.parse(entry.value);\n            } catch {\n                result[entry.key] = entry.value as unknown as T;\n            }\n        }\n        return result;\n    }\n\n    async delAll(pattern = '%'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        if (keyList.length > 0) {\n            await SuperCache.destroy({ where: { key: { [Op.in]: keyList } } });\n        }\n        return keys;\n    }\n}\n\nexport class MemoryDriver implements CacheDriver {\n    private store = new Map();\n    private ttl: number | undefined;\n    private maxSize: number | undefined;\n\n    constructor(private options: MemoryOptions = {}) {\n        this.ttl = options.ttl;\n        this.maxSize = options.maxSize;\n    }\n\n    async get(key: string): Promise {\n        const item = this.store.get(key);\n        if (!item) return null;\n        if (item.expiresAt && Date.now() > item.expiresAt) {\n            this.store.delete(key);\n            return null;\n        }\n        return item.value as T;\n    }\n\n    async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n        const expiresAt = extraSetOptions.ttl || this.ttl\n            ? Date.now() + ((extraSetOptions.ttl ?? this.ttl!) * 1000)\n            : undefined;\n        if (this.maxSize && this.store.size >= this.maxSize) {\n            const firstKey = this.store.keys().next().value;\n            if (firstKey) this.store.delete(firstKey);\n        }\n        this.store.set(key, { value, expiresAt });\n    }\n\n    async del(key: string): Promise {\n        this.store.delete(key);\n    }\n\n    async getAll(pattern = '*'): Promise> {\n        const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n        const result: Record = {};\n        for (const [key, item] of this.store.entries()) {\n            if (!regex.test(key)) continue;\n            if (item.expiresAt && Date.now() > item.expiresAt) {\n                this.store.delete(key);\n                continue;\n            }\n            result[key] = item.value as T;\n        }\n        return result;\n    }\n\n    async delAll(pattern = '*'): Promise> {\n        const keys = await this.getAll(pattern);\n        const keyList = Object.keys(keys);\n        for (const key of keyList) {\n            this.store.delete(key);\n        }\n        return keys;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisOptions.html":{"url":"interfaces/RedisOptions.html","title":"interface - RedisOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RedisOptions {\n    host: string;\n    port: number;\n    password?: string;\n    ttl?: number;\n}\n\nexport interface FileOptions {\n    path: string;\n    ttl?: number;\n}\n\nexport interface DatabaseOptions {\n    sequelize: import('sequelize-typescript').Sequelize;\n    ttl?: number;\n    autoSync?: boolean;\n}\n\nexport interface MemoryOptions {\n    ttl?: number;\n    maxSize?: number;\n}\n\nexport interface ExtraSetOptions {\n    ttl?: number;\n}\n\nexport type XStoredItem = {\n    value: any;\n    expiresAt?: number;\n};\n\nexport type SuperCacheModuleOptions =\n    | { driver: 'redis'; driverOptions: RedisOptions }\n    | { driver: 'file'; driverOptions: FileOptions }\n    | { driver: 'database'; driverOptions: DatabaseOptions }\n    | { driver: 'memory'; driverOptions: MemoryOptions };\n\nexport interface CacheDriver {\n    get(key: string): Promise;\n    set(key: string, value: T, ExtraSetOptions): Promise;\n    del(key: string): Promise;\n    getAll(pattern?: string): Promise>;\n    delAll(pattern?: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RenderModule.html":{"url":"modules/RenderModule.html","title":"module - RenderModule","body":"\n                   \n\n\n\n\n    Modules\n    RenderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RenderModule\n\n\n\ncluster_RenderModule_providers\n\n\n\n\nRenderService\n\nRenderService\n\n\n\nRenderModule\n\nRenderModule\n\nRenderModule -->\n\nRenderService->RenderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/plugins/render/render.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RenderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { RenderService } from './render.service';\n\n@Global()\n@Module({\n  imports: [ScheduleModule.forRoot()],\n  providers: [RenderService],\n})\nexport class RenderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenderService.html":{"url":"injectables/RenderService.html","title":"injectable - RenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/render/render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                pingSelf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pingSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    pingSelf()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_MINUTES)\n                \n            \n\n                    \n                        \n                            Defined in src/plugins/render/render.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RenderService.name)\n                    \n                \n                    \n                        \n                                Defined in src/plugins/render/render.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Render } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Injectable()\nexport class RenderService {\n  private readonly logger = new Logger(RenderService.name);\n\n  @Cron(CronExpression.EVERY_5_MINUTES)\n  pingSelf() {\n    this.logger.debug('Send self-ping to prevent idling.');\n    fetch('https://api-nest-surelle-com.onrender.com/api/v1/health')\n      .then(() => this.logger.debug('Self-ping successful'))\n      .catch((error) => this.logger.error('Self-ping failed', error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseFormatInterceptor.html":{"url":"injectables/ResponseFormatInterceptor.html","title":"injectable - ResponseFormatInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseFormatInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/response-format.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getApiService\n                            \n                            \n                                    Private\n                                getApiVersion\n                            \n                            \n                                    Private\n                                getPackageData\n                            \n                            \n                                    Private\n                                getTimeZone\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fallbackValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getApiService\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiService()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getApiVersion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPackageData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPackageData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTimeZone\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimeZone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/response-format.interceptor.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ResponseFormatInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/shared/interceptors/response-format.interceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fallbackValue\n                    \n                \n\n                \n                    \n                        getfallbackValue()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/interceptors/response-format.interceptor.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    Logger,\n    NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\nimport { HeaderSettingsOptions, ResponseFormatResponse } from '../interfaces/response-format.interface';\n\n@Injectable()\nexport class ResponseFormatInterceptor\n    implements NestInterceptor {\n    private readonly logger = new Logger(ResponseFormatInterceptor.name);\n\n    private get fallbackValue() {\n        return {\n            NO_SERVER_INFO: 'Unable to retrieve server information',\n            NO_CLIENT_INFO: 'No client detected',\n        };\n    }\n\n    private getPackageData(): any {\n        const packageJsonPath = join(process.cwd(), 'package.json');\n        return JSON.parse(readFileSync(packageJsonPath, 'utf8'));\n    }\n\n    private getTimeZone(): string {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    private getApiService(): string {\n        try {\n            return this.getPackageData().name;\n        } catch (error) {\n            this.logger.error('Error reading package.json:', error);\n            return this.fallbackValue.NO_SERVER_INFO;\n        }\n    }\n\n    private getApiVersion(): string {\n        try {\n            return this.getPackageData().version;\n        } catch (error) {\n            this.logger.error('Error reading package.json:', error);\n            return this.fallbackValue.NO_SERVER_INFO;\n        }\n    }\n\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable {\n        const request = context.switchToHttp().getRequest();\n\n        const headerSettings: HeaderSettingsOptions = {\n            withTemplate:\n                request.headers['response-template'] !== 'false' &&\n                !request.headers['no-response-template'],\n            clientVersion: request.headers['x-client-version'],\n            clientTimezone: request.headers['x-client-timezone'],\n        };\n\n        return next.handle().pipe(\n            map((data) => {\n                if (!headerSettings.withTemplate) {\n                    return data;\n                }\n\n                return {\n                    traceId: uuidv4(),\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    timestamp: new Date().toISOString(),\n                    method: request.method,\n                    path: request.url,\n                    data,\n                    api: {\n                        service: this.getApiService() || this.fallbackValue.NO_SERVER_INFO,\n                        version: this.getApiVersion() || this.fallbackValue.NO_SERVER_INFO,\n                        datetime: new Date().toISOString() || this.fallbackValue.NO_SERVER_INFO,\n                        timezone: this.getTimeZone() || this.fallbackValue.NO_SERVER_INFO,\n                        uptime: process.uptime(),\n                    },\n                    client: {\n                        version:\n                            headerSettings.clientVersion ||\n                            this.fallbackValue.NO_CLIENT_INFO,\n                        timezone:\n                            headerSettings.clientTimezone ||\n                            this.fallbackValue.NO_CLIENT_INFO,\n                    },\n                } as ResponseFormatResponse;\n            }),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseFormatResponse.html":{"url":"interfaces/ResponseFormatResponse.html","title":"interface - ResponseFormatResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseFormatResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/response-format.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            api\n                                        \n                                \n                                \n                                        \n                                            client\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            traceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        api:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        client:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        traceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseFormatResponse {\n    traceId: string;\n    statusCode: number;\n    timestamp: string;\n    method: string;\n    path: string;\n    data: any;\n    api: {\n        service: string;\n        version: string;\n        datetime: string;\n        timezone: string;\n    };\n    client: {\n        version: string;\n        timezone: string;\n    };\n}\n\nexport interface HeaderSettingsOptions {\n    withTemplate: boolean;\n    clientVersion: string;\n    clientTimezone: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RouteController.html":{"url":"controllers/RouteController.html","title":"controller - RouteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RouteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/route.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        root\n                        \n                    \n                \n            \n            \n                \n                        \n                    root()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(['/', '/home'])@Render('index')\n                \n            \n\n                    \n                        \n                            Defined in src/views/route.controller.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { title: string; message: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, VERSION_NEUTRAL } from '@nestjs/common';\n\n@Controller({ version: VERSION_NEUTRAL })\nexport class RouteController {\n    @Get(['/', '/home'])\n    @Render('index')\n    root() {\n        return { title: 'Welcome to NestJS + EJS', message: 'Hello, World!' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RouteModule.html":{"url":"modules/RouteModule.html","title":"module - RouteModule","body":"\n                   \n\n\n\n\n    Modules\n    RouteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/route.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            RouteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RouteController } from './route.controller';\n\n@Module({\n    controllers: [RouteController],\n})\nexport class RouteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuperCache.html":{"url":"classes/SuperCache.html","title":"class - SuperCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuperCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                expiresAt\n                            \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'TEXT'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-cache/super-cache.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, PrimaryKey, DataType } from 'sequelize-typescript';\n\n@Table({ tableName: 'app_caches', timestamps: false })\nexport class SuperCache extends Model {\n    @PrimaryKey\n    @Column\n    key!: string;\n\n    @Column({ type: 'TEXT' })\n    value!: string;\n\n    @Column({ type: DataType.BIGINT, allowNull: true })\n    expiresAt?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperCacheModule.html":{"url":"modules/SuperCacheModule.html","title":"module - SuperCacheModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperCacheModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: SuperCacheModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.module.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            SuperCacheModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module, Provider } from '@nestjs/common';\nimport {\n  RedisDriver,\n  MemoryDriver,\n  FileDriver,\n  DatabaseDriver,\n} from './super-cache.driver';\nimport {\n  CacheDriver,\n  SuperCacheModuleOptions,\n} from './super-cache.interface';\nimport { SuperCacheService } from './super-cache.service';\n\nconst DRIVER_TOKEN = 'SUPER_CACHE_DRIVER';\n\n@Global()\n@Module({})\nexport class SuperCacheModule {\n  static forRoot(options: SuperCacheModuleOptions): DynamicModule {\n    const DRIVER_TOKEN = `SUPER_CACHE_DRIVER::${options.driver.toUpperCase()}`;\n\n    const driverProvider: Provider = {\n      provide: DRIVER_TOKEN,\n      useFactory: () => {\n        switch (options.driver) {\n          case 'redis':\n            return new RedisDriver(options.driverOptions);\n          case 'database':\n            return new DatabaseDriver(options.driverOptions);\n          case 'file':\n            return new FileDriver(options.driverOptions);\n          case 'memory':\n          default:\n            return new MemoryDriver(options.driverOptions);\n        }\n      },\n    };\n\n    const cacheServiceProvider: Provider = {\n      provide: `SUPER_CACHE_${options.driver.toUpperCase()}_DRIVER`,\n      useFactory: (driver: CacheDriver) => new SuperCacheService(driver),\n      inject: [DRIVER_TOKEN],\n    };\n\n    return {\n      module: SuperCacheModule,\n      providers: [driverProvider, cacheServiceProvider],\n      exports: [cacheServiceProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperCacheService.html":{"url":"injectables/SuperCacheService.html","title":"injectable - SuperCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-cache/super-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delAll\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getDriver\n                            \n                            \n                                    Async\n                                getOrSet\n                            \n                            \n                                    Async\n                                getStats\n                            \n                            \n                                    Async\n                                has\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driver: CacheDriver)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-cache/super-cache.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                        CacheDriver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    delAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:61\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pattern?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:57\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDriver\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDriver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrSet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrSet(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        has\n                        \n                    \n                \n            \n            \n                \n                        \n                    has(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: T, extraSetOptions: ExtraSetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-cache/super-cache.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraSetOptions\n                                            \n                                                            ExtraSetOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CacheDriver, ExtraSetOptions } from './super-cache.interface';\n\n@Injectable()\nexport class SuperCacheService {\n  constructor(\n    @Inject('SUPER_CACHE_DRIVER') private readonly driver: CacheDriver,\n  ) { }\n\n  //** MAINTENANCE */\n  async clear(): Promise> {\n    return this.driver.delAll('*');\n  }\n\n  async getDriver(): Promise {\n    return this.driver;\n  }\n\n  async getStats(): Promise> {\n    return {\n      driver: this.driver.constructor.name,\n      options: this.driver['options'] || {},\n      size: await this.driver.getAll().then(items => Object.keys(items).length),\n      keys: await this.driver.getAll().then(items => Object.keys(items))\n    };\n  }\n\n  //** KEY MANAGEMENT */\n  async get(key: string): Promise {\n    return this.driver.get(key);\n  }\n\n  async set(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n    return this.driver.set(key, value, extraSetOptions);\n  }\n\n  async del(key: string): Promise {\n    return this.driver.del(key);\n  }\n\n  async has(key: string): Promise {\n    const value = await this.driver.get(key);\n    return value !== null;\n  }\n\n  //** ADVANCE KEY MANAGEMENT */\n  async getOrSet(key: string, value: T, extraSetOptions: ExtraSetOptions): Promise {\n    const cachedValue = await this.get(key);\n    if (cachedValue !== null) {\n      return cachedValue;\n    }\n    await this.set(key, value, extraSetOptions);\n    return value;\n  }\n\n  //** BULK KEY MANAGEMENT */\n  async getAll(pattern?: string): Promise> {\n    return this.driver.getAll(pattern);\n  }\n\n  async delAll(pattern?: string): Promise> {\n    return this.driver.delAll(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperConfigModule.html":{"url":"modules/SuperConfigModule.html","title":"module - SuperConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SuperConfigModule\n\n\n\ncluster_SuperConfigModule_exports\n\n\n\ncluster_SuperConfigModule_providers\n\n\n\n\nSuperConfigService \n\nSuperConfigService \n\n\n\nSuperConfigModule\n\nSuperConfigModule\n\nSuperConfigService  -->\n\nSuperConfigModule->SuperConfigService \n\n\n\n\n\nSuperConfigService\n\nSuperConfigService\n\nSuperConfigModule -->\n\nSuperConfigService->SuperConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-config/super-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SuperConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SuperConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SuperConfigService } from './super-config.service';\n\n@Global()\n@Module({\n    imports: [ConfigModule.forRoot()],\n    providers: [SuperConfigService],\n    exports: [SuperConfigService],\n})\nexport class SuperConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuperConfigOptions.html":{"url":"interfaces/SuperConfigOptions.html","title":"interface - SuperConfigOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuperConfigOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-config/super-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            APP_CLIENT_URL\n                                        \n                                \n                                \n                                        \n                                            APP_DEBUG\n                                        \n                                \n                                \n                                        \n                                            APP_ENV\n                                        \n                                \n                                \n                                        \n                                            APP_HOST\n                                        \n                                \n                                \n                                        \n                                            APP_NAME\n                                        \n                                \n                                \n                                        \n                                            APP_PORT\n                                        \n                                \n                                \n                                        \n                                            APP_SECRET\n                                        \n                                \n                                \n                                        \n                                            APP_TIMEZONE\n                                        \n                                \n                                \n                                        \n                                            AUTH_LIFETIME\n                                        \n                                \n                                \n                                        \n                                            AUTH_SALTROUND\n                                        \n                                \n                                \n                                        \n                                            DATABASE_DEBUG\n                                        \n                                \n                                \n                                        \n                                            DATABASE_HOST\n                                        \n                                \n                                \n                                        \n                                            DATABASE_NAME\n                                        \n                                \n                                \n                                        \n                                            DATABASE_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DATABASE_PORT\n                                        \n                                \n                                \n                                        \n                                            DATABASE_SSL\n                                        \n                                \n                                \n                                        \n                                            DATABASE_TYPE\n                                        \n                                \n                                \n                                        \n                                            DATABASE_USERNAME\n                                        \n                                \n                                \n                                        \n                                            ENABLE_COMPRESSION\n                                        \n                                \n                                \n                                        \n                                            ENABLE_CORS\n                                        \n                                \n                                \n                                        \n                                            ENABLE_HELMET\n                                        \n                                \n                                \n                                        \n                                            ENABLE_SHUTDOWN_HOOKS\n                                        \n                                \n                                \n                                        \n                                            ENABLE_UNDER_PRESSURE\n                                        \n                                \n                                \n                                        \n                                            ENABLE_VIEW\n                                        \n                                \n                                \n                                        \n                                            MAILER_HOST\n                                        \n                                \n                                \n                                        \n                                            MAILER_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            MAILER_PORT\n                                        \n                                \n                                \n                                        \n                                            MAILER_SECURE\n                                        \n                                \n                                \n                                        \n                                            MAILER_USERNAME\n                                        \n                                \n                                \n                                        \n                                            REDIS_HOST\n                                        \n                                \n                                \n                                        \n                                            REDIS_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            REDIS_PORT\n                                        \n                                \n                                \n                                        \n                                            REDIS_TTL\n                                        \n                                \n                                \n                                        \n                                            REDIS_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        APP_CLIENT_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_CLIENT_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_DEBUG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_DEBUG:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_ENV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_ENV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_SECRET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_SECRET:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        APP_TIMEZONE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        APP_TIMEZONE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AUTH_LIFETIME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AUTH_LIFETIME:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AUTH_SALTROUND\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AUTH_SALTROUND:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_DEBUG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_DEBUG:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_SSL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_SSL:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_TYPE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATABASE_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DATABASE_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_COMPRESSION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_COMPRESSION:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_CORS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_CORS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_HELMET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_HELMET:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_SHUTDOWN_HOOKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_SHUTDOWN_HOOKS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_UNDER_PRESSURE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_UNDER_PRESSURE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENABLE_VIEW\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENABLE_VIEW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_SECURE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_SECURE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAILER_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAILER_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_TTL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_TTL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SuperConfigOptions {\n    APP_NAME: string;\n    APP_ENV: string;\n    APP_HOST: string;\n    APP_PORT: number;\n    APP_DEBUG: boolean;\n    APP_SECRET: string;\n    APP_TIMEZONE: string;\n    APP_CLIENT_URL: string;\n\n    AUTH_LIFETIME: number;\n    AUTH_SALTROUND: number;\n\n    DATABASE_TYPE: string;\n    DATABASE_HOST: string;\n    DATABASE_PORT: number;\n    DATABASE_NAME: string;\n    DATABASE_USERNAME: string;\n    DATABASE_PASSWORD: string;\n    DATABASE_SSL: boolean;\n    DATABASE_DEBUG: boolean;\n\n    REDIS_HOST: string;\n    REDIS_PORT: number;\n    REDIS_USERNAME: string;\n    REDIS_PASSWORD: string;\n    REDIS_TTL: number;\n\n    MAILER_HOST: string;\n    MAILER_PORT: number;\n    MAILER_USERNAME: string;\n    MAILER_PASSWORD: string;\n    MAILER_SECURE: boolean;\n\n    ENABLE_HELMET: boolean;\n    ENABLE_CORS: boolean;\n    ENABLE_COMPRESSION: boolean;\n    ENABLE_UNDER_PRESSURE: boolean;\n    ENABLE_SHUTDOWN_HOOKS: boolean;\n    ENABLE_VIEW: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperConfigService.html":{"url":"injectables/SuperConfigService.html","title":"injectable - SuperConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-config/super-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertBoolean\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    env\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-config/super-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertBoolean(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-config/super-config.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        env\n                    \n                \n\n                \n                    \n                        getenv()\n                    \n                \n                            \n                                \n                                    Defined in src/infra/super-config/super-config.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { SuperConfigOptions } from './super-config.interface';\nimport { SuperConfigDefaults } from './super-config.default';\n\n@Injectable()\nexport class SuperConfigService {\n    constructor(private readonly configService: ConfigService) { }\n\n    private convertBoolean(value: any): boolean {\n        return value === true || value === 'true' || value === 1 || value === '1';\n    }\n\n    get env(): SuperConfigOptions {\n        return {\n            // App VARIABLES\n            APP_NAME: this.configService.get('APP_NAME', SuperConfigDefaults.APP_NAME),\n            APP_ENV: this.configService.get('APP_ENV', SuperConfigDefaults.APP_ENV),\n            APP_HOST: this.configService.get('APP_HOST', SuperConfigDefaults.APP_HOST),\n            APP_PORT: this.configService.get('APP_PORT', SuperConfigDefaults.APP_PORT),\n            APP_DEBUG: this.convertBoolean(this.configService.get('APP_DEBUG', SuperConfigDefaults.APP_DEBUG)),\n            APP_SECRET: this.configService.get('APP_SECRET', SuperConfigDefaults.APP_SECRET),\n            APP_TIMEZONE: this.configService.get('APP_TIMEZONE', SuperConfigDefaults.APP_TIMEZONE),\n            APP_CLIENT_URL: this.configService.get('APP_CLIENT_URL', SuperConfigDefaults.APP_CLIENT_URL),\n\n            // Auth Variables\n            AUTH_LIFETIME: this.configService.get('AUTH_LIFETIME', SuperConfigDefaults.AUTH_LIFETIME),\n            AUTH_SALTROUND: this.configService.get('AUTH_SALTROUND', SuperConfigDefaults.AUTH_SALTROUND),\n\n            // Database Variables\n            DATABASE_TYPE: this.configService.get('DATABASE_TYPE', SuperConfigDefaults.DATABASE_TYPE),\n            DATABASE_HOST: this.configService.get('DATABASE_HOST', SuperConfigDefaults.DATABASE_HOST),\n            DATABASE_PORT: this.configService.get('DATABASE_PORT', SuperConfigDefaults.DATABASE_PORT),\n            DATABASE_NAME: this.configService.get('DATABASE_NAME', SuperConfigDefaults.DATABASE_NAME),\n            DATABASE_USERNAME: this.configService.get('DATABASE_USERNAME', SuperConfigDefaults.DATABASE_USERNAME),\n            DATABASE_PASSWORD: this.configService.get('DATABASE_PASSWORD', SuperConfigDefaults.DATABASE_PASSWORD),\n            DATABASE_SSL: this.convertBoolean(this.configService.get('DATABASE_SSL', SuperConfigDefaults.DATABASE_SSL)),\n            DATABASE_DEBUG: this.convertBoolean(this.configService.get('DATABASE_DEBUG', SuperConfigDefaults.DATABASE_DEBUG)),\n\n            // Redis Variables\n            REDIS_HOST: this.configService.get('REDIS_HOST', SuperConfigDefaults.REDIS_HOST),\n            REDIS_PORT: this.configService.get('REDIS_PORT', SuperConfigDefaults.REDIS_PORT),\n            REDIS_USERNAME: this.configService.get('REDIS_USERNAME', SuperConfigDefaults.REDIS_USERNAME),\n            REDIS_PASSWORD: this.configService.get('REDIS_PASSWORD', SuperConfigDefaults.REDIS_PASSWORD),\n            REDIS_TTL: this.configService.get('REDIS_TTL', SuperConfigDefaults.REDIS_TTL),\n\n            // Mailer Variables\n            MAILER_HOST: this.configService.get('MAILER_HOST', SuperConfigDefaults.MAILER_HOST),\n            MAILER_PORT: this.configService.get('MAILER_PORT', SuperConfigDefaults.MAILER_PORT),\n            MAILER_USERNAME: this.configService.get('MAILER_USERNAME', SuperConfigDefaults.MAILER_USERNAME),\n            MAILER_PASSWORD: this.configService.get('MAILER_PASSWORD', SuperConfigDefaults.MAILER_PASSWORD),\n            MAILER_SECURE: this.convertBoolean(this.configService.get('MAILER_SECURE', SuperConfigDefaults.MAILER_SECURE)),\n\n            // Config Variables\n            ENABLE_HELMET: this.convertBoolean(this.configService.get('ENABLE_HELMET', SuperConfigDefaults.ENABLE_HELMET)),\n            ENABLE_CORS: this.convertBoolean(this.configService.get('ENABLE_CORS', SuperConfigDefaults.ENABLE_CORS)),\n            ENABLE_COMPRESSION: this.convertBoolean(this.configService.get('ENABLE_COMPRESSION', SuperConfigDefaults.ENABLE_COMPRESSION)),\n            ENABLE_UNDER_PRESSURE: this.convertBoolean(this.configService.get('ENABLE_UNDER_PRESSURE', SuperConfigDefaults.ENABLE_UNDER_PRESSURE)),\n            ENABLE_SHUTDOWN_HOOKS: this.convertBoolean(this.configService.get('ENABLE_SHUTDOWN_HOOKS', SuperConfigDefaults.ENABLE_SHUTDOWN_HOOKS)),\n            ENABLE_VIEW: this.convertBoolean(this.configService.get('ENABLE_VIEW', SuperConfigDefaults.ENABLE_VIEW)),\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuperObserve.html":{"url":"classes/SuperObserve.html","title":"class - SuperObserve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuperObserve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                afterTime\n                            \n                            \n                                    \n                                beforeTime\n                            \n                            \n                                    \n                                computedSpeed\n                            \n                            \n                                    \n                                loggedAt\n                            \n                            \n                                    \n                                responseStatus\n                            \n                            \n                                    \n                                route\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        afterTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        beforeTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        computedSpeed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, defaultValue: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        responseStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Model, Table } from 'sequelize-typescript';\n\n@Table({\n    tableName: 'app_performance_logs',\n    timestamps: true,\n})\nexport class SuperObserve extends Model {\n    @Column({ type: DataType.STRING, allowNull: false })\n    route: string;\n\n    @Column({ type: DataType.DATE, allowNull: false })\n    beforeTime: Date;\n\n    @Column({ type: DataType.DATE, allowNull: false })\n    afterTime: Date;\n\n    @Column({ type: DataType.FLOAT, allowNull: false })\n    computedSpeed: number;\n\n    @Column({ type: DataType.INTEGER, allowNull: false })\n    responseStatus: number;\n\n    @Column({ type: DataType.DATE, allowNull: false, defaultValue: DataType.NOW })\n    loggedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperObserveInterceptor.html":{"url":"injectables/SuperObserveInterceptor.html","title":"injectable - SuperObserveInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperObserveInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-observe/super-observe.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SuperObserveInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-observe/super-observe.interceptor.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    NestInterceptor,\n    Logger,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { SUPER_OBSERVE_KEY } from './super-observe.decorator';\nimport { SuperObserve } from './super-observe.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class SuperObserveInterceptor implements NestInterceptor {\n    private readonly logger = new Logger(SuperObserveInterceptor.name);\n\n    constructor(private readonly reflector: Reflector) { }\n\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        const isObserved = this.reflector.get(\n            SUPER_OBSERVE_KEY,\n            context.getHandler(),\n        );\n\n        if (!isObserved) return next.handle();\n\n        const req = context.switchToHttp().getRequest();\n        const route = req.url;\n        const beforeTime = new Date();\n\n        return next.handle().pipe(\n            tap(() => {\n                const afterTime = new Date();\n                const duration = afterTime.getTime() - beforeTime.getTime();\n                const status = context.switchToHttp().getResponse().statusCode;\n                SuperObserve.create({\n                    route,\n                    beforeTime,\n                    afterTime,\n                    computedSpeed: duration,\n                    responseStatus: status,\n                    loggedAt: new Date(),\n                } as any).catch(err => this.logger.error('Failed to log performance', err));\n            }),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperObserveModule.html":{"url":"modules/SuperObserveModule.html","title":"module - SuperObserveModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperObserveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-observe/super-observe.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-observe/super-observe.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider, OnModuleInit, Logger } from '@nestjs/common';\nimport { SequelizeModule, SequelizeModuleOptions, getConnectionToken } from '@nestjs/sequelize';\nimport { SuperObserveInterceptor } from './super-observe.interceptor';\nimport { APP_INTERCEPTOR, Reflector } from '@nestjs/core';\nimport { Sequelize } from 'sequelize-typescript';\nimport { SuperObserve } from './super-observe.model';\n\n@Module({})\nexport class SuperObserveModule implements OnModuleInit {\n    private readonly logger = new Logger(SuperObserveModule.name);\n\n    constructor(private readonly sequelize: Sequelize) { }\n\n    static forRoot(): DynamicModule {\n        const interceptorProvider: Provider = {\n            provide: APP_INTERCEPTOR,\n            useFactory: (reflector: Reflector) => new SuperObserveInterceptor(reflector),\n            inject: [Reflector],\n        };\n\n        return {\n            module: SuperObserveModule,\n            imports: [SequelizeModule.forFeature([SuperObserve])],\n            providers: [interceptorProvider],\n            exports: [],\n        };\n    }\n\n    async onModuleInit() {\n        try {\n            await this.sequelize.addModels([SuperObserve]);\n            await this.sequelize.sync({ alter: true });\n            this.logger.log('SuperObserve table synced successfully.');\n        } catch (err) {\n            this.logger.error('Failed to sync SuperObserve table', err);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SuperServerController.html":{"url":"controllers/SuperServerController.html","title":"controller - SuperServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SuperServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-server/super-server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getMetrics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getMetrics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetrics()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/infra/super-server/super-server.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Injectable, Logger, UseGuards } from '@nestjs/common';\nimport { SuperServerService } from './super-server.service';\nimport { DevelopmentGuard } from 'src/shared/guards/development.guard';\n\n@Controller(['super-server', 'metrics'])\n@UseGuards(DevelopmentGuard)\nexport class SuperServerController {\n    constructor(private readonly superServerService: SuperServerService) { }\n\n    @Get()\n    getMetrics() {\n        return this.superServerService.getMetrics();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuperServerModule.html":{"url":"modules/SuperServerModule.html","title":"module - SuperServerModule","body":"\n                   \n\n\n\n\n    Modules\n    SuperServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SuperServerModule\n\n\n\ncluster_SuperServerModule_exports\n\n\n\ncluster_SuperServerModule_providers\n\n\n\n\nSuperServerService \n\nSuperServerService \n\n\n\nSuperServerModule\n\nSuperServerModule\n\nSuperServerService  -->\n\nSuperServerModule->SuperServerService \n\n\n\n\n\nSuperServerService\n\nSuperServerService\n\nSuperServerModule -->\n\nSuperServerService->SuperServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/super-server/super-server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SuperServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SuperServerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SuperServerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { SuperServerService } from './super-server.service';\nimport { SuperServerController } from './super-server.controller';\n\n@Module({\n    controllers: [SuperServerController],\n    providers: [SuperServerService],\n    exports: [SuperServerService],\n})\nexport class SuperServerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuperServerService.html":{"url":"injectables/SuperServerService.html","title":"injectable - SuperServerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuperServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/super-server/super-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                packageJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetrics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/super-server/super-server.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetrics\n                        \n                    \n                \n            \n            \n                \ngetMetrics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/super-server/super-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: string; version: string; server: { hostname: any; platform: any; arch: any; uptime: any; loadAverage: any; totalMemory: any; freeMemory: any; cpus: any; networkInterfaces: any; }; env: { nodeEnv: any; port: any; jwtSecretConfigured: boolean; }; process: { ...; }; }\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SuperServerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-server/super-server.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        packageJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/super-server/super-server.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\n@Injectable()\nexport class SuperServerService {\n    private readonly logger = new Logger(SuperServerService.name);\n\n    private readonly packageJson: { name: string; version: string };\n\n    constructor() {\n        const packagePath = path.resolve(__dirname, '../../../package.json');\n        if (fs.existsSync(packagePath)) {\n            this.packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf-8'));\n        } else {\n            this.packageJson = { name: 'Unknown', version: '0.0.0' };\n        }\n    }\n\n    getMetrics() {\n        this.logger.debug('Fetching server config...');\n\n        const cpus = os.cpus();\n        const network = os.networkInterfaces();\n\n        return {\n            name: this.packageJson.name,\n            version: this.packageJson.version,\n            server: {\n                hostname: os.hostname(),\n                platform: os.platform(),\n                arch: os.arch(),\n                uptime: os.uptime(), // in seconds\n                loadAverage: os.loadavg(), // 1, 5, 15 min averages\n                totalMemory: os.totalmem(),\n                freeMemory: os.freemem(),\n                cpus: cpus.map(cpu => ({ model: cpu.model, speed: cpu.speed })),\n                networkInterfaces: network,\n            },\n            env: {\n                nodeEnv: process.env.APP_ENV,\n                port: process.env.APP_PORT,\n                jwtSecretConfigured: !!process.env.APP_SECRET,\n            },\n            process: {\n                pid: process.pid,\n                memoryUsage: process.memoryUsage(), // heapUsed, heapTotal, rss\n                versions: process.versions, // node, v8, openssl, etc.\n                uptime: process.uptime(),\n            }\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UmzugModule.html":{"url":"modules/UmzugModule.html","title":"module - UmzugModule","body":"\n                   \n\n\n\n\n    Modules\n    UmzugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UmzugModule\n\n\n\ncluster_UmzugModule_exports\n\n\n\ncluster_UmzugModule_providers\n\n\n\n\nUmzugService \n\nUmzugService \n\n\n\nUmzugModule\n\nUmzugModule\n\nUmzugService  -->\n\nUmzugModule->UmzugService \n\n\n\n\n\nUmzugService\n\nUmzugService\n\nUmzugModule -->\n\nUmzugService->UmzugModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/umzug/umzug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UmzugService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UmzugService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UmzugService } from './umzug.service';\n\n@Module({\n    providers: [UmzugService],\n    exports: [UmzugService],\n})\nexport class UmzugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UmzugService.html":{"url":"injectables/UmzugService.html","title":"injectable - UmzugService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UmzugService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/umzug/umzug.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                umzug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getExecuted\n                            \n                            \n                                    Async\n                                getPending\n                            \n                            \n                                    Async\n                                rollback\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sequelize: Sequelize)\n                    \n                \n                        \n                            \n                                Defined in src/infra/umzug/umzug.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sequelize\n                                                  \n                                                        \n                                                                    Sequelize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getExecuted\n                        \n                    \n                \n            \n            \n                \n                        \n                    getExecuted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPending\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPending()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rollback\n                        \n                    \n                \n            \n            \n                \n                        \n                    rollback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infra/umzug/umzug.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UmzugService.name)\n                    \n                \n                    \n                        \n                                Defined in src/infra/umzug/umzug.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        umzug\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Umzug\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/umzug/umzug.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Sequelize } from 'sequelize-typescript';\nimport { Umzug, SequelizeStorage } from 'umzug';\nimport * as path from 'path';\n\n@Injectable()\nexport class UmzugService {\n    private readonly logger = new Logger(UmzugService.name);\n    private umzug: Umzug;\n\n    constructor(private readonly sequelize: Sequelize) {\n        this.umzug = new Umzug({\n            migrations: {\n                glob: path.join(process.cwd(), '/database/migrations/*.js'),\n                resolve: ({ name, path: migrationPath, context }) => {\n                    if (!migrationPath || typeof migrationPath !== 'string') {\n                        throw new Error(`Migration path is invalid: ${migrationPath}`);\n                    }\n                    const migration = require(migrationPath);\n                    return {\n                        name,\n                        up: async () => migration.up(context.queryInterface, Sequelize),\n                        down: async () => migration.down(context.queryInterface, Sequelize),\n                    };\n                },\n            },\n            context: {\n                queryInterface: this.sequelize.getQueryInterface(),\n            },\n            storage: new SequelizeStorage({ sequelize: this.sequelize }),\n            logger: console,\n        });\n    }\n\n    async getPending() {\n        const pendings = await this.umzug.pending();\n        this.logger.log(`Pending migrations: ${JSON.stringify(pendings)}`);\n        return pendings;\n    }\n\n    async getExecuted() {\n        const executed = await this.umzug.executed();\n        this.logger.log(`Executed migrations: ${JSON.stringify(executed)}`);\n        return executed;\n    }\n\n    async update() {\n        await this.umzug.up();\n    }\n\n    async rollback() {\n        await this.umzug.down();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address1\n                            \n                            \n                                    \n                                address2\n                            \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, autoIncrement: true, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/user/user.model.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, Scopes, DefaultScope } from 'sequelize-typescript';\n\n@DefaultScope(() => ({\n    attributes: { exclude: ['password'] },\n}))\n@Scopes(() => ({\n    withPassword: {\n        attributes: { include: ['password'] },\n    },\n}))\n@Table({ tableName: 'users' })\nexport class User extends Model {\n    @Column({\n        type: DataType.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n    })\n    id: number;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    firstName: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    lastName: string;\n\n    @Column({ type: DataType.ENUM('male', 'female', 'other'), allowNull: false })\n    gender: string;\n\n    @Column({ type: DataType.DATEONLY, allowNull: false })\n    birthday: Date;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    address1: string;\n\n    @Column({ type: DataType.STRING, allowNull: true })\n    address2: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    city: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    country: string;\n\n    @Column({ type: DataType.STRING, allowNull: false, unique: true })\n    email: string;\n\n    @Column({ type: DataType.STRING, allowNull: false })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UsePerformance()\n                \n            \n\n                    \n                        \n                            Defined in src/core/user/user.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UsePerformance } from 'src/infra/super-observe/super-observe.decorator';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) { }\n\n    @Post()\n    @UsePerformance()\n    create(@Body() dto: CreateUserDto) {\n        return this.userService.create(dto);\n    }\n\n    @Get()\n    @UsePerformance()\n    findAll() {\n        return this.userService.findAll();\n    }\n\n    @Get(':id')\n    @UsePerformance()\n    findOne(@Param('id', ParseIntPipe) id: number) {\n        return this.userService.findOne(id);\n    }\n\n    @Put(':id')\n    @UsePerformance()\n    update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() dto: UpdateUserDto,\n    ) {\n        return this.userService.update(id, dto);\n    }\n\n    @Delete(':id')\n    @UsePerformance()\n    remove(@Param('id', ParseIntPipe) id: number) {\n        return this.userService.remove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { User } from './user.model';\n\n@Module({\n    imports: [SequelizeModule.forFeature([User])],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [UserService],\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/core/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/user/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from './user.model';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel(User)\n        private userModel: typeof User,\n    ) { }\n\n    async create(dto: CreateUserDto): Promise {\n        const existingUser = await this.userModel.findOne({\n            where: { email: dto.email },\n        });\n        if (existingUser) {\n            throw new ConflictException('User with this email already exists');\n        }\n        const hashedPassword = await bcrypt.hash(dto.password, 10);\n        const user = await this.userModel.create({\n            ...dto,\n            password: hashedPassword,\n        } as any);\n        const { password, ...result } = user.get({ plain: true });\n        return result as User;\n    }\n\n    async findAll(): Promise {\n        return this.userModel.findAll();\n    }\n\n    async findOne(id: number): Promise {\n        const user = await this.userModel.findByPk(id);\n        if (!user) throw new NotFoundException('User not found');\n        return user;\n    }\n\n    async findByEmail(email: string): Promise {\n        return this.userModel.findOne({ where: { email } });\n    }\n\n    async update(id: number, dto: UpdateUserDto): Promise {\n        const user = await this.findOne(id);\n        if (dto.password) {\n            dto.password = await bcrypt.hash(dto.password, 10);\n        }\n        await user.update(dto);\n        return user;\n    }\n\n    async remove(id: number): Promise {\n        const user = await this.findOne(id);\n        await user.destroy();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/basic-auth.controller.ts\n            \n            controller\n            BasicAuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.guard.ts\n            \n            injectable\n            BasicAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.service.ts\n            \n            injectable\n            BasicAuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/basic-auth.strategy.ts\n            \n            injectable\n            BasicAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/bootstrap.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/core/core.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/user/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/core/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/infra/infra.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            DatabaseDriver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            FileDriver\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            MemoryDriver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.driver.ts\n            \n            class\n            RedisDriver\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.entity.ts\n            \n            class\n            SuperCache\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            CacheDriver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            DatabaseOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            ExtraSetOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            FileOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            MemoryOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.interface.ts\n            \n            interface\n            RedisOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.interface.ts\n            \n            type alias\n            SuperCacheModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.interface.ts\n            \n            type alias\n            XStoredItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-cache/super-cache.module.ts\n            \n            variable\n            DRIVER_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-cache/super-cache.service.ts\n            \n            injectable\n            SuperCacheService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/infra/super-config/super-config.default.ts\n            \n            variable\n            SuperConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-config/super-config.interface.ts\n            \n            interface\n            SuperConfigOptions\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/infra/super-config/super-config.service.ts\n            \n            injectable\n            SuperConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/infra/super-observe/super-observe.decorator.ts\n            \n            variable\n            SUPER_OBSERVE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/infra/super-observe/super-observe.decorator.ts\n            \n            variable\n            UsePerformance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/super-observe/super-observe.interceptor.ts\n            \n            injectable\n            SuperObserveInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/super-observe/super-observe.model.ts\n            \n            class\n            SuperObserve\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infra/super-server/super-server.controller.ts\n            \n            controller\n            SuperServerController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/super-server/super-server.service.ts\n            \n            injectable\n            SuperServerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infra/umzug/umzug.service.ts\n            \n            injectable\n            UmzugService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            executeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            executeServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/plugins/health/health.service.ts\n            \n            injectable\n            HealthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/plugins/plugin.module.ts\n            \n            variable\n            MODULE_LOADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/render/render.service.ts\n            \n            injectable\n            RenderService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/shared/configs/cors.config.ts\n            \n            variable\n            CorsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/under-pressure.config.ts\n            \n            variable\n            UnderPressureConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/validation.config.ts\n            \n            variable\n            ValidationPipeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/version.config.ts\n            \n            variable\n            VersionConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/configs/view.config.ts\n            \n            variable\n            ViewConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/guards/development.guard.ts\n            \n            guard\n            DevelopmentGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/response-format.interceptor.ts\n            \n            injectable\n            ResponseFormatInterceptor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interfaces/bootstrap-function.interface.ts\n            \n            interface\n            BootstrapFunctionArgs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/response-format.interface.ts\n            \n            interface\n            HeaderSettingsOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/interfaces/response-format.interface.ts\n            \n            interface\n            ResponseFormatResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/views/route.controller.ts\n            \n            controller\n            RouteController\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/compress : ^8.1.0\n        \n            @fastify/cors : ^11.1.0\n        \n            @fastify/helmet : ^13.0.1\n        \n            @fastify/under-pressure : ^9.0.3\n        \n            @fastify/view : ^11.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.1.6\n        \n            @nestjs/cqrs : ^11.0.3\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/platform-fastify : ^11.1.6\n        \n            @nestjs/platform-socket.io : ^11.1.6\n        \n            @nestjs/schedule : ^6.0.0\n        \n            @nestjs/sequelize : ^11.0.0\n        \n            @nestjs/websockets : ^11.1.6\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            ejs : ^3.1.10\n        \n            ioredis : ^5.7.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.16.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.37.7\n        \n            sequelize-typescript : ^2.1.6\n        \n            socket.io : ^4.8.1\n        \n            umzug : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            executeConfig   (src/.../main.ts)\n                        \n                        \n                            executeServer   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeConfig\n                        \n                    \n                \n            \n            \n                \nexecuteConfig(server: BootstrapFunctionArgs)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            BootstrapFunctionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeServer\n                        \n                    \n                \n            \n            \n                \nexecuteServer(server: BootstrapFunctionArgs)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            BootstrapFunctionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BasicAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BootstrapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RenderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RouteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperCacheModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperObserveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuperServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UmzugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicAuthModule\n\n\n\ncluster_BasicAuthModule_providers\n\n\n\ncluster_BootstrapModule\n\n\n\ncluster_BootstrapModule_imports\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_RenderModule\n\n\n\ncluster_RenderModule_providers\n\n\n\ncluster_SuperConfigModule\n\n\n\ncluster_SuperConfigModule_exports\n\n\n\ncluster_SuperConfigModule_providers\n\n\n\ncluster_SuperServerModule\n\n\n\ncluster_SuperServerModule_exports\n\n\n\ncluster_SuperServerModule_providers\n\n\n\ncluster_UmzugModule\n\n\n\ncluster_UmzugModule_exports\n\n\n\ncluster_UmzugModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nBasicAuthService\n\nBasicAuthService\n\n\n\nBasicAuthModule\n\nBasicAuthModule\n\nBasicAuthModule -->\n\nBasicAuthService->BasicAuthModule\n\n\n\n\n\nBasicAuthStrategy\n\nBasicAuthStrategy\n\nBasicAuthModule -->\n\nBasicAuthStrategy->BasicAuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nBasicAuthModule -->\n\nUserService->BasicAuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nBasicAuthModule->CoreModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nInfraModule -->\n\nBasicAuthModule->InfraModule\n\n\n\n\n\nPluginModule\n\nPluginModule\n\nPluginModule -->\n\nBasicAuthModule->PluginModule\n\n\n\n\n\nBootstrapModule\n\nBootstrapModule\n\nBootstrapModule -->\n\nBasicAuthModule->BootstrapModule\n\n\n\nCoreModule -->\n\nCoreModule->CoreModule\n\n\n\nInfraModule -->\n\nCoreModule->InfraModule\n\n\n\nPluginModule -->\n\nCoreModule->PluginModule\n\n\n\nBootstrapModule -->\n\nCoreModule->BootstrapModule\n\n\n\nCoreModule -->\n\nInfraModule->CoreModule\n\n\n\nInfraModule -->\n\nInfraModule->InfraModule\n\n\n\nPluginModule -->\n\nInfraModule->PluginModule\n\n\n\nBootstrapModule -->\n\nInfraModule->BootstrapModule\n\n\n\nCoreModule -->\n\nPluginModule->CoreModule\n\n\n\nInfraModule -->\n\nPluginModule->InfraModule\n\n\n\nPluginModule -->\n\nPluginModule->PluginModule\n\n\n\nBootstrapModule -->\n\nPluginModule->BootstrapModule\n\n\n\n\n\nRouteModule\n\nRouteModule\n\nCoreModule -->\n\nRouteModule->CoreModule\n\n\n\nInfraModule -->\n\nRouteModule->InfraModule\n\n\n\nPluginModule -->\n\nRouteModule->PluginModule\n\n\n\nBootstrapModule -->\n\nRouteModule->BootstrapModule\n\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\nRenderService\n\nRenderService\n\n\n\nRenderModule\n\nRenderModule\n\nRenderModule -->\n\nRenderService->RenderModule\n\n\n\n\n\nSuperConfigService \n\nSuperConfigService \n\n\n\nSuperConfigModule\n\nSuperConfigModule\n\nSuperConfigService  -->\n\nSuperConfigModule->SuperConfigService \n\n\n\n\n\nSuperConfigService\n\nSuperConfigService\n\nSuperConfigModule -->\n\nSuperConfigService->SuperConfigModule\n\n\n\n\n\nSuperServerService \n\nSuperServerService \n\n\n\nSuperServerModule\n\nSuperServerModule\n\nSuperServerService  -->\n\nSuperServerModule->SuperServerService \n\n\n\n\n\nSuperServerService\n\nSuperServerService\n\nSuperServerModule -->\n\nSuperServerService->SuperServerModule\n\n\n\n\n\nUmzugService \n\nUmzugService \n\n\n\nUmzugModule\n\nUmzugModule\n\nUmzugService  -->\n\nUmzugModule->UmzugService \n\n\n\n\n\nUmzugService\n\nUmzugService\n\nUmzugModule -->\n\nUmzugService->UmzugModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SuperCacheModuleOptions   (src/.../super-cache.interface.ts)\n                        \n                        \n                            XStoredItem   (src/.../super-cache.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infra/super-cache/super-cache.interface.ts\n    \n    \n        \n            \n                \n                    \n                    SuperCacheModuleOptions\n                \n            \n            \n                \n                        literal type | literal type | literal type | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XStoredItem\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CorsConfig   (src/.../cors.config.ts)\n                        \n                        \n                            DRIVER_TOKEN   (src/.../super-cache.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../bootstrap.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../core.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../infra.module.ts)\n                        \n                        \n                            MODULE_LOADER   (src/.../plugin.module.ts)\n                        \n                        \n                            SUPER_OBSERVE_KEY   (src/.../super-observe.decorator.ts)\n                        \n                        \n                            SuperConfigDefaults   (src/.../super-config.default.ts)\n                        \n                        \n                            UnderPressureConfig   (src/.../under-pressure.config.ts)\n                        \n                        \n                            UsePerformance   (src/.../super-observe.decorator.ts)\n                        \n                        \n                            ValidationPipeConfig   (src/.../validation.config.ts)\n                        \n                        \n                            VersionConfig   (src/.../version.config.ts)\n                        \n                        \n                            ViewConfig   (src/.../view.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/configs/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CorsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyCorsOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    origin: 'http://localhost:3000',\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE'],\n    credentials: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/infra/super-cache/super-cache.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DRIVER_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_CACHE_DRIVER'\n                    \n                \n\n\n        \n    \n\n    src/bootstrap.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  BasicAuthModule,\n  InfraModule,\n  CoreModule,\n  PluginModule,\n  RouteModule\n]\n                    \n                \n\n\n        \n    \n\n    src/core/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    UserModule\n]\n                    \n                \n\n\n        \n    \n\n    src/infra/infra.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    SuperObserveModule.forRoot(),\n    SuperConfigModule,\n    SuperCacheModule.forRoot({\n        driver: 'file',\n        driverOptions: {\n            path: './storage/cache.json',\n            ttl: 60\n        }\n    }),\n    SequelizeModule.forRootAsync({\n        imports: [SuperConfigModule],\n        inject: [SuperConfigService],\n        useFactory: (configService: SuperConfigService) => ({\n            dialect: 'postgres',\n            host: configService.env.DATABASE_HOST,\n            port: configService.env.DATABASE_PORT,\n            username: configService.env.DATABASE_USERNAME,\n            password: configService.env.DATABASE_PASSWORD,\n            database: configService.env.DATABASE_NAME,\n            logging: configService.env.DATABASE_DEBUG,\n            autoLoadModels: false,\n            synchronize: false,\n            dialectOptions: {\n                ssl: {\n                    require: true,\n                    rejectUnauthorized: false,\n                },\n            },\n            models: [User],\n        }),\n    }),\n    SuperServerModule,\n    UmzugModule,\n]\n                    \n                \n\n\n        \n    \n\n    src/plugins/plugin.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULE_LOADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  HealthModule,\n  RenderModule\n]\n                    \n                \n\n\n        \n    \n\n    src/infra/super-observe/super-observe.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SUPER_OBSERVE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_OBSERVE_KEY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsePerformance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(SUPER_OBSERVE_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/infra/super-config/super-config.default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SuperConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SuperConfigOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    APP_NAME: 'default-api',\n    APP_ENV: 'local',\n    APP_HOST: '0.0.0.0',\n    APP_PORT: 8000,\n    APP_DEBUG: false,\n    APP_SECRET: 'e12b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v3w4x5y6z7a8',\n    APP_TIMEZONE: 'UTC',\n    APP_CLIENT_URL: 'localhost',\n\n    AUTH_LIFETIME: 3600,\n    AUTH_SALTROUND: 10,\n\n    DATABASE_TYPE: 'postgres',\n    DATABASE_HOST: 'localhost',\n    DATABASE_PORT: 5432,\n    DATABASE_NAME: 'default_db',\n    DATABASE_USERNAME: 'user',\n    DATABASE_PASSWORD: 'password',\n    DATABASE_SSL: false,\n    DATABASE_DEBUG: false,\n\n    REDIS_HOST: 'localhost',\n    REDIS_PORT: 6379,\n    REDIS_USERNAME: '',\n    REDIS_PASSWORD: '',\n    REDIS_TTL: 3600,\n\n    MAILER_HOST: 'smtp.example.com',\n    MAILER_PORT: 587,\n    MAILER_USERNAME: 'user@example.com',\n    MAILER_PASSWORD: 'password',\n    MAILER_SECURE: false,\n\n    ENABLE_HELMET: true,\n    ENABLE_CORS: true,\n    ENABLE_COMPRESSION: true,\n    ENABLE_UNDER_PRESSURE: true,\n    ENABLE_SHUTDOWN_HOOKS: true,\n    ENABLE_VIEW: true\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/under-pressure.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UnderPressureConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyUnderPressureOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    maxEventLoopDelay: 1000,\n    maxHeapUsedBytes: 1e9,\n    maxRssBytes: 1e9,\n    healthCheck: async () => {\n        return { status: 'ok' };\n    },\n    healthCheckInterval: 5000,\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/validation.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidationPipeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    transform: true,\n    whitelist: true,\n    forbidNonWhitelisted: true,\n    forbidUnknownValues: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/version.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VersionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     VersioningOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: VersioningType.URI,\n  defaultVersion: '1',\n  prefix: 'api/v',\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/view.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FastifyViewOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    engine: {\n        ejs: require('ejs'),\n    },\n    root: join(__dirname, '..', '..', 'views', 'resource'),\n    layout: '',\n    includeViewExtension: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
